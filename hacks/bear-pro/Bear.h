//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct MRTFetchedResultsControllerDelegateHasMethods {
    char delegateHasWillChangeContent;
    char delegateHasDidChangeContent;
    char delegateHasDidChangeObject;
    char delegateHasDidChangeObjectWithProgressiveChanges;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDict;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlParserCtxt {
    struct _xmlSAXHandler *_field1;
    void *_field2;
    struct _xmlDoc *_field3;
    int _field4;
    int _field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    struct _xmlParserInput *_field10;
    int _field11;
    int _field12;
    struct _xmlParserInput **_field13;
    struct _xmlNode *_field14;
    int _field15;
    int _field16;
    struct _xmlNode **_field17;
    int _field18;
    struct _xmlParserNodeInfoSeq {
        unsigned long long _field1;
        unsigned long long _field2;
        struct _xmlParserNodeInfo *_field3;
    } _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct _xmlValidCtxt {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        struct _xmlNode *_field4;
        int _field5;
        int _field6;
        struct _xmlNode **_field7;
        unsigned int _field8;
        struct _xmlDoc *_field9;
        int _field10;
        struct _xmlValidState *_field11;
        int _field12;
        int _field13;
        struct _xmlValidState *_field14;
        struct _xmlAutomata *_field15;
        struct _xmlAutomataState *_field16;
    } _field26;
    int _field27;
    int _field28;
    char *_field29;
    char *_field30;
    int _field31;
    int _field32;
    char **_field33;
    long long _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    char *_field39;
    char *_field40;
    char *_field41;
    int *_field42;
    int _field43;
    int _field44;
    int *_field45;
    int _field46;
    struct _xmlParserInput *_field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    void *_field52;
    int _field53;
    int _field54;
    void *_field55;
    int _field56;
    int _field57;
    struct _xmlDict *_field58;
    char **_field59;
    int _field60;
    int _field61;
    char *_field62;
    char *_field63;
    char *_field64;
    int _field65;
    int _field66;
    int _field67;
    char **_field68;
    int *_field69;
    void **_field70;
    struct _xmlHashTable *_field71;
    struct _xmlHashTable *_field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    struct _xmlNode *_field77;
    int _field78;
    struct _xmlAttr *_field79;
    struct _xmlError {
        int _field1;
        int _field2;
        char *_field3;
        int _field4;
        char *_field5;
        int _field6;
        char *_field7;
        char *_field8;
        char *_field9;
        int _field10;
        int _field11;
        void *_field12;
        void *_field13;
    } _field80;
    int _field81;
    unsigned long long _field82;
    unsigned long long _field83;
    struct _xmlParserNodeInfo *_field84;
    int _field85;
    int _field86;
    struct _xmlParserNodeInfo *_field87;
    int _field88;
    unsigned long long _field89;
};

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlValidState;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unz_file_info_s {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned int _field14;
    unsigned long long _field15;
};

struct unz_global_info_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void *_field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned long long *_field5;
} CDStruct_3098c0ae;

typedef struct {
    char startDocument;
    char endDocument;
    char startElement;
    char foundCharacters;
    char endElement;
    char errorOccurred;
} CDStruct_657548a7;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Ambiguous groups
typedef struct {
    char _field1;
    char _field2;
} CDStruct_7ddbbeae;

#pragma mark -

//
// File: /Applications/Bear.app/Contents/MacOS/Bear
// UUID: 8231D749-BAF4-314B-A68F-CC47CC4B5186
//
//                           Arch: x86_64
//                 Source version: 0.0.0.0.0
//       Minimum Mac OS X version: 10.11.0
//                    SDK version: 10.15.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../Frameworks
//                               = /Applications/Bear.app/Contents/Frameworks
//                       Run path: @executable_path/../Frameworks
//                               = /Applications/Bear.app/Contents/Frameworks
//

@protocol CDEventsDelegate
- (void)URLWatcher:(CDEvents *)arg1 eventOccurred:(CDEvent *)arg2;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFailRangingBeaconsForConstraint:(CLBeaconIdentityConstraint *)arg2 error:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 satisfyingConstraint:(CLBeaconIdentityConstraint *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (BOOL)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CMParserDelegate <NSObject>

@optional
- (void)parserDidEndListItem:(CMParser *)arg1;
- (void)parserDidStartListItem:(CMParser *)arg1;
- (void)parser:(CMParser *)arg1 didEndOrderedListWithStartingNumber:(long long)arg2 tight:(BOOL)arg3;
- (void)parser:(CMParser *)arg1 didStartOrderedListWithStartingNumber:(long long)arg2 tight:(BOOL)arg3;
- (void)parser:(CMParser *)arg1 didEndUnorderedListWithTightness:(BOOL)arg2;
- (void)parser:(CMParser *)arg1 didStartUnorderedListWithTightness:(BOOL)arg2;
- (void)parserDidEndBlockQuote:(CMParser *)arg1;
- (void)parserDidStartBlockQuote:(CMParser *)arg1;
- (void)parserFoundLineBreak:(CMParser *)arg1;
- (void)parserFoundSoftBreak:(CMParser *)arg1;
- (void)parser:(CMParser *)arg1 foundInlineCode:(NSString *)arg2;
- (void)parser:(CMParser *)arg1 foundCodeBlock:(NSString *)arg2 info:(NSString *)arg3;
- (void)parser:(CMParser *)arg1 foundInlineHTML:(NSString *)arg2;
- (void)parser:(CMParser *)arg1 foundHTML:(NSString *)arg2;
- (void)parser:(CMParser *)arg1 didEndImageWithURL:(NSURL *)arg2 title:(NSString *)arg3;
- (void)parser:(CMParser *)arg1 didStartImageWithURL:(NSURL *)arg2 title:(NSString *)arg3;
- (void)parser:(CMParser *)arg1 didEndLinkWithURL:(NSURL *)arg2 title:(NSString *)arg3;
- (void)parser:(CMParser *)arg1 didStartLinkWithURL:(NSURL *)arg2 title:(NSString *)arg3;
- (void)parserDidEndStrong:(CMParser *)arg1;
- (void)parserDidStartStrong:(CMParser *)arg1;
- (void)parserDidEndEmphasis:(CMParser *)arg1;
- (void)parserDidStartEmphasis:(CMParser *)arg1;
- (void)parserDidEndParagraph:(CMParser *)arg1;
- (void)parserDidStartParagraph:(CMParser *)arg1;
- (void)parser:(CMParser *)arg1 didEndHeaderWithLevel:(long long)arg2;
- (void)parser:(CMParser *)arg1 didStartHeaderWithLevel:(long long)arg2;
- (void)parserFoundHRule:(CMParser *)arg1;
- (void)parser:(CMParser *)arg1 foundText:(NSString *)arg2;
- (void)parserDidAbort:(CMParser *)arg1;
- (void)parserDidEndDocument:(CMParser *)arg1;
- (void)parserDidStartDocument:(CMParser *)arg1;
@end

@protocol CSSearchableIndexDelegate <NSObject>
- (void)searchableIndex:(CSSearchableIndex *)arg1 reindexSearchableItemsWithIdentifiers:(NSArray *)arg2 acknowledgementHandler:(void (^)(void))arg3;
- (void)searchableIndex:(CSSearchableIndex *)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(void (^)(void))arg2;

@optional
- (NSURL *)fileURLForSearchableIndex:(CSSearchableIndex *)arg1 itemIdentifier:(NSString *)arg2 typeIdentifier:(NSString *)arg3 inPlace:(BOOL)arg4 error:(out id *)arg5;
- (NSData *)dataForSearchableIndex:(CSSearchableIndex *)arg1 itemIdentifier:(NSString *)arg2 typeIdentifier:(NSString *)arg3 error:(out id *)arg4;
- (void)searchableIndexDidFinishThrottle:(CSSearchableIndex *)arg1;
- (void)searchableIndexDidThrottle:(CSSearchableIndex *)arg1;
@end

@protocol GRMustacheExpressionVisitor <NSObject>
- (BOOL)visitScopedExpression:(GRMustacheScopedExpression *)arg1 error:(id *)arg2;
- (BOOL)visitImplicitIteratorExpression:(GRMustacheImplicitIteratorExpression *)arg1 error:(id *)arg2;
- (BOOL)visitIdentifierExpression:(GRMustacheIdentifierExpression *)arg1 error:(id *)arg2;
- (BOOL)visitFilteredExpression:(GRMustacheFilteredExpression *)arg1 error:(id *)arg2;
@end

@protocol GRMustacheFilter <NSObject>
- (id)transformedValue:(id)arg1;

@optional
- (id <GRMustacheFilter>)filterByCurryingArgument:(id)arg1;
@end

@protocol GRMustacheRendering <NSObject>
- (NSString *)renderForMustacheTag:(GRMustacheTag *)arg1 context:(GRMustacheContext *)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
@end

@protocol GRMustacheRenderingWithIterationSupport <GRMustacheRendering>
- (NSString *)renderForMustacheTag:(GRMustacheTag *)arg1 asEnumerationItem:(BOOL)arg2 context:(GRMustacheContext *)arg3 HTMLSafe:(char *)arg4 error:(id *)arg5;
@end

@protocol GRMustacheSafeKeyAccess <NSObject>
+ (NSSet *)safeMustacheKeys;
@end

@protocol GRMustacheTagDelegate <NSObject>

@optional
- (void)mustacheTag:(GRMustacheTag *)arg1 didFailRenderingObject:(id)arg2 withError:(NSError *)arg3;
- (void)mustacheTag:(GRMustacheTag *)arg1 didRenderObject:(id)arg2 as:(NSString *)arg3;
- (id)mustacheTag:(GRMustacheTag *)arg1 willRenderObject:(id)arg2;
@end

@protocol GRMustacheTemplateASTNode <NSObject>
- (id <GRMustacheTemplateASTNode>)resolveTemplateASTNode:(id <GRMustacheTemplateASTNode>)arg1;
- (BOOL)acceptTemplateASTVisitor:(id <GRMustacheTemplateASTVisitor>)arg1 error:(id *)arg2;
@end

@protocol GRMustacheTemplateASTVisitor <NSObject>
- (BOOL)visitTextNode:(GRMustacheTextNode *)arg1 error:(id *)arg2;
- (BOOL)visitSectionTag:(GRMustacheSectionTag *)arg1 error:(id *)arg2;
- (BOOL)visitVariableTag:(GRMustacheVariableTag *)arg1 error:(id *)arg2;
- (BOOL)visitPartialNode:(GRMustachePartialNode *)arg1 error:(id *)arg2;
- (BOOL)visitInheritableSectionNode:(GRMustacheInheritableSectionNode *)arg1 error:(id *)arg2;
- (BOOL)visitInheritablePartialNode:(GRMustacheInheritablePartialNode *)arg1 error:(id *)arg2;
- (BOOL)visitTemplateAST:(GRMustacheTemplateAST *)arg1 error:(id *)arg2;
@end

@protocol GRMustacheTemplateParserDelegate <NSObject>

@optional
- (void)templateParser:(GRMustacheTemplateParser *)arg1 didFailWithError:(NSError *)arg2;
- (BOOL)templateParser:(GRMustacheTemplateParser *)arg1 shouldContinueAfterParsingToken:(GRMustacheToken *)arg2;
@end

@protocol GRMustacheTemplateRepositoryDataSource <NSObject>
- (NSString *)templateRepository:(GRMustacheTemplateRepository *)arg1 templateStringForTemplateID:(id)arg2 error:(id *)arg3;
- (id <NSCopying>)templateRepository:(GRMustacheTemplateRepository *)arg1 templateIDForName:(NSString *)arg2 relativeToTemplateID:(id)arg3;
@end

@protocol MHWMigrationManagerDelegate <NSObject>

@optional
- (NSArray *)migrationManager:(MHWMigrationManager *)arg1 mappingModelsForSourceModel:(NSManagedObjectModel *)arg2;
- (void)migrationManager:(MHWMigrationManager *)arg1 migrationProgress:(float)arg2;
@end

@protocol MRTFetchedResultsControllerDelegate <NSObject>

@optional
- (void)controller:(MRTFetchedResultsController *)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 progressiveIndex:(unsigned long long)arg4 forChangeType:(unsigned long long)arg5 forProgressiveChangeType:(unsigned long long)arg6 newIndex:(unsigned long long)arg7 newProgressiveIndex:(unsigned long long)arg8;
- (void)controller:(MRTFetchedResultsController *)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 forChangeType:(unsigned long long)arg4 newIndex:(unsigned long long)arg5;
- (void)controllerDidChangeContent:(MRTFetchedResultsController *)arg1;
- (void)controllerWillChangeContent:(MRTFetchedResultsController *)arg1;
@end

@protocol MSAuthTokenContextDelegate <NSObject>

@optional
- (void)authTokenContext:(MSAuthTokenContext *)arg1 refreshAuthTokenForAccountId:(NSString *)arg2;
- (void)authTokenContext:(MSAuthTokenContext *)arg1 didUpdateAccountId:(NSString *)arg2;
- (void)authTokenContext:(MSAuthTokenContext *)arg1 didUpdateAuthToken:(NSString *)arg2;
@end

@protocol MSChannelDelegate <NSObject>

@optional
- (BOOL)channelUnit:(id <MSChannelUnitProtocol>)arg1 shouldFilterLog:(id <MSLog>)arg2;
- (void)channel:(id <MSChannelProtocol>)arg1 didResumeWithIdentifyingObject:(id <NSObject>)arg2;
- (void)channel:(id <MSChannelProtocol>)arg1 didPauseWithIdentifyingObject:(id <NSObject>)arg2;
- (void)channel:(id <MSChannelProtocol>)arg1 didSetEnabled:(BOOL)arg2 andDeleteDataOnDisabled:(BOOL)arg3;
- (void)channel:(id <MSChannelProtocol>)arg1 didFailSendingLog:(id <MSLog>)arg2 withError:(NSError *)arg3;
- (void)channel:(id <MSChannelProtocol>)arg1 didSucceedSendingLog:(id <MSLog>)arg2;
- (void)channel:(id <MSChannelProtocol>)arg1 willSendLog:(id <MSLog>)arg2;
- (void)channel:(id <MSChannelProtocol>)arg1 didCompleteEnqueueingLog:(id <MSLog>)arg2 internalId:(NSString *)arg3;
- (void)channel:(id <MSChannelProtocol>)arg1 didPrepareLog:(id <MSLog>)arg2 internalId:(NSString *)arg3 flags:(unsigned long long)arg4;
- (void)channel:(id <MSChannelProtocol>)arg1 prepareLog:(id <MSLog>)arg2;
- (void)channelGroup:(id <MSChannelGroupProtocol>)arg1 didAddChannelUnit:(id <MSChannelUnitProtocol>)arg2;
@end

@protocol MSChannelGroupProtocol <MSChannelProtocol>
- (id <MSChannelUnitProtocol>)channelUnitForGroupId:(NSString *)arg1;
- (void)setMaxStorageSize:(long long)arg1 completionHandler:(void (^)(BOOL))arg2;
- (void)setAppSecret:(NSString *)arg1;
- (void)setLogUrl:(NSString *)arg1;
- (id <MSChannelUnitProtocol>)addChannelUnitWithConfiguration:(MSChannelUnitConfiguration *)arg1 withIngestion:(id <MSIngestionProtocol>)arg2;
- (id <MSChannelUnitProtocol>)addChannelUnitWithConfiguration:(MSChannelUnitConfiguration *)arg1;
@end

@protocol MSChannelProtocol <NSObject, MSEnable>
- (void)resumeWithIdentifyingObject:(id <NSObject>)arg1;
- (void)pauseWithIdentifyingObject:(id <NSObject>)arg1;
- (void)removeDelegate:(id <MSChannelDelegate>)arg1;
- (void)addDelegate:(id <MSChannelDelegate>)arg1;
@end

@protocol MSChannelUnitProtocol <MSChannelProtocol>
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logsDispatchQueue;
@property(retain, nonatomic) MSChannelUnitConfiguration *configuration;
- (void)checkPendingLogs;
- (void)resumeSendingLogsWithToken:(NSString *)arg1;
- (void)pauseSendingLogsWithToken:(NSString *)arg1;
- (void)enqueueItem:(id <MSLog>)arg1 flags:(unsigned long long)arg2;
@end

@protocol MSCustomApplicationDelegate <MSCustomDelegate>
@end

@protocol MSCustomDelegate <NSObject>
@end

@protocol MSEnable <NSObject>
- (void)setEnabled:(BOOL)arg1 andDeleteDataOnDisabled:(BOOL)arg2;
@end

@protocol MSHttpClientProtocol
- (void)setEnabled:(BOOL)arg1;
- (void)resume;
- (void)pause;
- (void)sendAsync:(NSURL *)arg1 method:(NSString *)arg2 headers:(NSDictionary *)arg3 data:(NSData *)arg4 completionHandler:(void (^)(NSData *, NSHTTPURLResponse *, NSError *))arg5;
@end

@protocol MSIngestionCallDelegate <NSObject>
- (void)call:(MSIngestionCall *)arg1 completedWithResult:(long long)arg2;
- (void)sendCallAsync:(MSIngestionCall *)arg1;
@end

@protocol MSIngestionDelegate <NSObject>

@optional
- (void)ingestionDidReceiveFatalError:(id <MSIngestionProtocol>)arg1;
- (void)ingestionDidResume:(id <MSIngestionProtocol>)arg1;
- (void)ingestionDidPause:(id <MSIngestionProtocol>)arg1;
@end

@protocol MSIngestionProtocol <NSObject, MSIngestionCallDelegate, MSEnable>
@property(readonly, nonatomic, getter=isReadyToSend) BOOL readyToSend;
@property(nonatomic, getter=isPaused) BOOL paused;
@property(retain, nonatomic) MS_Reachability *reachability;
- (void)resume;
- (void)pause;
- (void)removeDelegate:(id <MSIngestionDelegate>)arg1;
- (void)addDelegate:(id <MSIngestionDelegate>)arg1;
- (void)sendAsync:(NSObject *)arg1 eTag:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSHTTPURLResponse *, NSData *, NSError *))arg3;
- (void)sendAsync:(NSObject *)arg1 eTag:(NSString *)arg2 authToken:(NSString *)arg3 completionHandler:(void (^)(NSString *, NSHTTPURLResponse *, NSData *, NSError *))arg4;
- (void)sendAsync:(NSObject *)arg1 completionHandler:(void (^)(NSString *, NSHTTPURLResponse *, NSData *, NSError *))arg2;
- (void)sendAsync:(NSObject *)arg1 authToken:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSHTTPURLResponse *, NSData *, NSError *))arg3;
@end

@protocol MSLog <NSObject>
@property(retain, nonatomic) NSObject *tag;
@property(retain, nonatomic) MSDevice *device;
@property(copy, nonatomic) NSString *userId;
@property(copy, nonatomic) NSString *distributionGroupId;
@property(copy, nonatomic) NSString *sid;
@property(retain, nonatomic) NSDate *timestamp;
@property(copy, nonatomic) NSString *type;
- (NSSet *)transmissionTargetTokens;
- (void)addTransmissionTargetToken:(NSString *)arg1;
- (BOOL)isValid;
@end

@protocol MSLogConversion
- (NSArray *)toCommonSchemaLogsWithFlags:(unsigned long long)arg1;
@end

@protocol MSModel
- (BOOL)isValid;
@end

@protocol MSNoAutoAssignSessionIdLog
@end

@protocol MSPLCrashReportFormatter
- (NSData *)formatReport:(MSPLCrashReport *)arg1 error:(id *)arg2;
@end

@protocol MSSerializableObject <NSCoding>
- (NSMutableDictionary *)serializeToDictionary;
@end

@protocol MSService <NSObject>
+ (BOOL)isEnabled;
+ (void)setEnabled:(BOOL)arg1;
@end

@protocol MSServiceCommon <NSObject>
@property(readonly, nonatomic) long long initializationPriority;
@property(retain, nonatomic) NSString *defaultTransmissionTargetToken;
@property(retain, nonatomic) NSString *appSecret;
@property(retain, nonatomic) id <MSChannelUnitProtocol> channelUnit;
@property(retain, nonatomic) id <MSChannelGroupProtocol> channelGroup;
@property(nonatomic, getter=isEnabled) BOOL enabled;
@property(readonly, nonatomic, getter=isAvailable) BOOL available;
- (BOOL)isStartedFromApplication;
- (BOOL)isAppSecretRequired;
- (void)updateConfigurationWithAppSecret:(NSString *)arg1 transmissionTargetToken:(NSString *)arg2;
- (void)startWithChannelGroup:(id <MSChannelGroupProtocol>)arg1 appSecret:(NSString *)arg2 transmissionTargetToken:(NSString *)arg3 fromApplication:(BOOL)arg4;
- (BOOL)canBeUsed;
- (void)applyEnabledState:(BOOL)arg1;

@optional
+ (id)sharedInstance;
@property(retain, nonatomic) MSChannelUnitConfiguration *channelUnitConfiguration;
@property(readonly, copy, nonatomic) NSString *groupId;
@end

@protocol MSServiceInternal <MSService, MSServiceCommon>
+ (NSString *)logTag;
+ (NSString *)serviceName;
+ (id)sharedInstance;
@property(readonly, copy, nonatomic) NSString *groupId;
@property(retain, nonatomic) NSString *appSecret;
@property(readonly, nonatomic) long long initializationPriority;
@end

@protocol MSStorage <NSObject>
- (void)setMaxStorageSize:(long long)arg1 completionHandler:(void (^)(BOOL))arg2;
- (unsigned long long)countLogsBeforeDate:(NSDate *)arg1;
- (BOOL)loadLogsWithGroupId:(NSString *)arg1 limit:(unsigned long long)arg2 excludedTargetKeys:(NSArray *)arg3 afterDate:(NSDate *)arg4 beforeDate:(NSDate *)arg5 completionHandler:(void (^)(NSArray *, NSString *))arg6;
- (void)deleteLogsWithBatchId:(NSString *)arg1 groupId:(NSString *)arg2;
- (NSArray *)deleteLogsWithGroupId:(NSString *)arg1;
- (unsigned long long)countLogs;
- (BOOL)saveLog:(id <MSLog>)arg1 withGroupId:(NSString *)arg2 flags:(unsigned long long)arg3;
@end

@protocol NSAccessibilityButton <NSAccessibilityElement>
- (BOOL)accessibilityPerformPress;
- (NSString *)accessibilityLabel;
@end

@protocol NSAccessibilityElement <NSObject>
- (id)accessibilityParent;
- (struct CGRect)accessibilityFrame;

@optional
- (NSString *)accessibilityIdentifier;
- (BOOL)isAccessibilityFocused;
@end

@protocol NSAccessibilityGroup <NSAccessibilityElement>
@end

@protocol NSAccessibilityTable <NSAccessibilityGroup>
- (NSArray *)accessibilityRows;
- (NSString *)accessibilityLabel;

@optional
- (NSArray *)accessibilityColumnHeaderUIElements;
- (NSArray *)accessibilityRowHeaderUIElements;
- (NSArray *)accessibilityVisibleCells;
- (NSArray *)accessibilitySelectedCells;
- (NSString *)accessibilityHeaderGroup;
- (NSArray *)accessibilitySelectedColumns;
- (NSArray *)accessibilityVisibleColumns;
- (NSArray *)accessibilityColumns;
- (NSArray *)accessibilityVisibleRows;
- (void)setAccessibilitySelectedRows:(NSArray *)arg1;
- (NSArray *)accessibilitySelectedRows;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeOcclusionState:(NSNotification *)arg1;
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (BOOL)application:(NSApplication *)arg1 delegateHandlesKey:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(NSApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(NSApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (BOOL)application:(NSApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (BOOL)application:(NSApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openURLs:(NSArray *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCollectionViewDataSource <NSObject>
- (NSCollectionViewItem *)collectionView:(NSCollectionView *)arg1 itemForRepresentedObjectAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(NSCollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (NSView *)collectionView:(NSCollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(NSCollectionView *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
- (void)controlTextDidChange:(NSNotification *)arg1;
- (void)controlTextDidEndEditing:(NSNotification *)arg1;
- (void)controlTextDidBeginEditing:(NSNotification *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSFilePresenter <NSObject>
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;

@optional
@property(readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didResolveConflictVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didLoseVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didGainVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemDidChangeAtURL:(NSURL *)arg1;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didMoveToURL:(NSURL *)arg2;
- (void)presentedSubitemDidAppearAtURL:(NSURL *)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidLoseVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidGainVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidChangeUbiquityAttributes:(NSSet *)arg1;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(NSURL *)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)relinquishPresentedItemToWriter:(void (^)(void (^)(void)))arg1;
- (void)relinquishPresentedItemToReader:(void (^)(void (^)(void)))arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPasteboardItemDataProvider <NSObject>
- (void)pasteboard:(NSPasteboard *)arg1 item:(NSPasteboardItem *)arg2 provideDataForType:(NSString *)arg3;

@optional
- (void)pasteboardFinishedWithDataProvider:(NSPasteboard *)arg1;
@end

@protocol NSPasteboardReading <NSObject>
+ (NSArray *)readableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(NSString *)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
- (unsigned long long)writingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (NSView *)anchoringViewForSharingService:(NSSharingService *)arg1 showRelativeToRect:(struct CGRect *)arg2 preferredEdge:(unsigned long long *)arg3;
- (NSWindow *)sharingService:(NSSharingService *)arg1 sourceWindowForShareItems:(NSArray *)arg2 sharingContentScope:(long long *)arg3;
- (NSImage *)sharingService:(NSSharingService *)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(NSSharingService *)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(NSSharingService *)arg1 didShareItems:(NSArray *)arg2;
- (void)sharingService:(NSSharingService *)arg1 didFailToShareItems:(NSArray *)arg2 error:(NSError *)arg3;
- (void)sharingService:(NSSharingService *)arg1 willShareItems:(NSArray *)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(NSSharingServicePicker *)arg1 didChooseSharingService:(NSSharingService *)arg2;
- (id <NSSharingServiceDelegate>)sharingServicePicker:(NSSharingServicePicker *)arg1 delegateForSharingService:(NSSharingService *)arg2;
- (NSArray *)sharingServicePicker:(NSSharingServicePicker *)arg1 sharingServicesForItems:(NSArray *)arg2 proposedSharingServices:(NSArray *)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>

@optional
- (BOOL)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 shouldSelectCandidateAtIndex:(unsigned long long)arg3;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidates:(NSArray *)arg3 forSelectedRange:(struct _NSRange)arg4;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidatesForSelectedRange:(struct _NSRange)arg3;
@end

@protocol NSTextFinderClient <NSObject>

@optional
@property(readonly, copy) NSArray *visibleCharacterRanges;
@property(copy) NSArray *selectedRanges;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) NSString *string;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isSelectable) BOOL selectable;
- (void)drawCharactersInRange:(struct _NSRange)arg1 forContentView:(NSView *)arg2;
- (NSArray *)rectsForCharacterRange:(struct _NSRange)arg1;
- (NSView *)contentViewAtIndex:(unsigned long long)arg1 effectiveCharacterRange:(struct _NSRange *)arg2;
- (void)didReplaceCharacters;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(NSString *)arg2;
- (BOOL)shouldReplaceCharactersInRanges:(NSArray *)arg1 withStrings:(NSArray *)arg2;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (unsigned long long)stringLength;
- (NSString *)stringAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 endsWithSearchBoundary:(char *)arg3;
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorage:(NSTextStorage *)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
- (void)textStorage:(NSTextStorage *)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldSelectCandidateAtIndex:(unsigned long long)arg2;
- (NSArray *)textView:(NSTextView *)arg1 candidates:(NSArray *)arg2 forSelectedRange:(struct _NSRange)arg3;
- (NSArray *)textView:(NSTextView *)arg1 candidatesForSelectedRange:(struct _NSRange)arg2;
- (NSArray *)textView:(NSTextView *)arg1 shouldUpdateTouchBarItemIdentifiers:(NSArray *)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSTouchBarDelegate <NSObject>

@optional
- (NSTouchBarItem *)touchBar:(NSTouchBar *)arg1 makeItemForIdentifier:(NSString *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
- (void)URLSession:(NSURLSession *)arg1 taskIsWaitingForConnectivity:(NSURLSessionTask *)arg2;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willBeginDelayedRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(long long, NSURLRequest *))arg4;
@end

@protocol NSUserNotificationCenterDelegate <NSObject>

@optional
- (BOOL)userNotificationCenter:(NSUserNotificationCenter *)arg1 shouldPresentNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didActivateNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didDeliverNotification:(NSUserNotification *)arg2;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(NSWindow *)arg1;
@end

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@protocol SFAppLockingControllerDelegate <NSObject>
- (void)applicationLockingDidChange:(SFAppLockingController *)arg1;
@end

@protocol SFClickableDraggableViewDraggingDataProvider <NSObject>
- (void)pasteboard:(NSPasteboard *)arg1 item:(NSPasteboardItem *)arg2 provideDataForType:(NSString *)arg3 forClickableDraggableView:(SFClickableDraggableView *)arg4;
- (NSArray *)pasteboardDraggingTypesForClickableDraggableView:(SFClickableDraggableView *)arg1;
@end

@protocol SFCloudKitSyncableObject <NSObject>
+ (NSArray *)ckDesiredKeysToDownload;
+ (NSArray *)updateOrCreateObjectsFromCKRecords:(NSDictionary *)arg1 inMoc:(NSManagedObjectContext *)arg2 conflictedUniqueIdentifiers:(id *)arg3;
- (NSString *)uniqueIdentifier;
- (void)setCKRecord:(CKRecord *)arg1;
- (CKRecord *)ckRecord;
- (CKRecord *)updateCKRecord:(CKRecord *)arg1;
- (CKRecord *)ckRecordWitZoneID:(CKRecordZoneID *)arg1;

@optional
- (NSArray *)relatedObjectsToUpload;
@end

@protocol SFCodeSyntaxHighlighterDelegate <NSObject>
- (void)codeSyntaxHighlighter:(SFCodeSyntaxHighlighter *)arg1 highlightedString:(NSAttributedString *)arg2 forCodeUUID:(NSString *)arg3;
@end

@protocol SFCoreDataStackDelegate <NSObject>
- (void)coreDataStack:(SFCoreDataStack *)arg1 didFailToInitializeManagedObjectContext:(NSError *)arg2;
- (void)coreDataStack:(SFCoreDataStack *)arg1 didInitializeManagedObjectContext:(NSManagedObjectContext *)arg2;

@optional
- (void)coreDataStackDidEndMigration:(SFCoreDataStack *)arg1 migrationError:(NSError *)arg2 migratedVersions:(NSArray *)arg3;
- (void)coreDataStack:(SFCoreDataStack *)arg1 didBeginMigrationWithProgress:(NSProgress *)arg2;
@end

@protocol SFDOCXDocumentSourceDelegate
- (NSColor *)highlighColor;
- (double)codeBlockSize;
- (double)h4OrMoreSize;
- (double)h3HeadingSize;
- (double)h2HeadingSize;
- (double)h1HeadingSize;
@end

@protocol SFDetachedNoteEditorWindowControllerDelegate <NSObject>

@optional
- (void)detachedNoteEditorWindowController:(SFDetachedNoteEditorWindowController *)arg1 didEndEditingNoteUUID:(NSString *)arg2;
@end

@protocol SFEditorAutoCompleteItem <NSObject>
- (NSString *)autoCompleteItemTextRepresentation;
- (NSString *)autoCompleteItemTitle;
- (NSImage *)autoCompleteItemIcon:(BOOL)arg1;
@end

@protocol SFEditorAutoCompleteItemsProvider <NSObject>
@property(nonatomic) unsigned long long maxNumberOfCompletions;
- (void)updateCompletionForPartiaString:(NSString *)arg1 fullText:(NSString *)arg2;
- (NSArray *)itemsForCompletion;
@end

@protocol SFEncryptableNote <NSObject>
+ (void)setNotesEncryptionManager:(id <SFNoteCoreEncryptionManagerProtocol>)arg1 forManagedObjectContext:(NSManagedObjectContext *)arg2;
- (BOOL)hasEncryptionAndIsLocked;
- (BOOL)hasEncryption;
- (void)setPassword:(id <SFEncryptingPassword>)arg1;
- (id <SFEncryptingPassword>)password;
- (void)setEncryptionUniqueIdentifier:(NSString *)arg1;
- (NSString *)encryptionUniqueIdentifier;
- (NSString *)encryptedDataVersionString;
- (void)setEncryptedData:(NSData *)arg1;
- (NSData *)encryptedData;
- (void)setEncryptedValue:(BOOL)arg1;
- (BOOL)encryptedValue;
- (BOOL)setDecryptedText:(NSString *)arg1 error:(id *)arg2;
- (void)setDecryptedText:(NSString *)arg1;
- (NSString *)decryptedText;
- (void)setText:(NSString *)arg1;
- (NSString *)text;
- (NSString *)uniqueIdentifier;
- (NSString *)title;
@end

@protocol SFEncryptingPassword <NSObject>
- (void)setHint:(NSData *)arg1;
- (NSData *)hint;
- (void)setEncryptionVersion:(NSNumber *)arg1;
- (NSNumber *)encryptionVersion;
- (void)setEncryptionVersionValue:(short)arg1;
- (short)encryptionVersionValue;
- (void)setEncryptedData:(NSData *)arg1;
- (NSData *)encryptedData;
- (void)setBiometryValue:(BOOL)arg1;
- (BOOL)biometryValue;
- (NSString *)uniqueIdentifier;
- (NSSet *)notes;
@end

@protocol SFEnexParserDelegate <NSObject>

@optional
- (void)parser:(SFEnexParser *)arg1 didParseFile:(SFEnexNoteFile *)arg2;
- (void)parser:(SFEnexParser *)arg1 didParseNote:(SFEnexNote *)arg2;
@end

@protocol SFFontPickerDelegate <NSObject>
- (void)fontPicker:(id)arg1 didPickFont:(NSFont *)arg2;
@end

@protocol SFIAPManagerDelegate <NSObject>
- (void)iapManager:(SFIAPManager *)arg1 didFailPurchaseWithTransaction:(SKPaymentTransaction *)arg2;
- (void)iapManager:(SFIAPManager *)arg1 didRestorePurcaseWithTransaction:(SKPaymentTransaction *)arg2;
- (void)iapManager:(SFIAPManager *)arg1 didPurchaseWithTransaction:(SKPaymentTransaction *)arg2;

@optional
- (BOOL)iapManager:(SFIAPManager *)arg1 shouldAddStorePayment:(SKPayment *)arg2 forProduct:(SKProduct *)arg3;
@end

@protocol SFItalicDataDetectorDelegate <NSObject>

@optional
- (BOOL)dataDetector:(SFItalicDataDetector *)arg1 shouldMatchEndMarkerInRange:(struct _NSRange)arg2;
- (BOOL)dataDetector:(SFItalicDataDetector *)arg1 shouldMatchBeginMarkerInRange:(struct _NSRange)arg2;
@end

@protocol SFNoteCoreEncryptionManagerDataSource <NSObject>
- (id <SFEncryptingPassword>)newEncryptingPassword;
@end

@protocol SFNoteCoreEncryptionManagerDelegate <NSObject>
- (void)noteCoreEncryptionManager:(id <SFNoteCoreEncryptionManagerProtocol>)arg1 didRemoveEncryptionFromNote:(id <SFEncryptableNote>)arg2;
- (void)noteCoreEncryptionManager:(id <SFNoteCoreEncryptionManagerProtocol>)arg1 didAddEncryptionToNote:(id <SFEncryptableNote>)arg2;
@end

@protocol SFNoteEditorViewControllerDelegate <NSObject>
- (void)noteEditorViewControllerDidEndEditing:(SFNoteEditorViewController *)arg1;
- (void)noteEditorViewController:(SFNoteEditorViewController *)arg1 searchUIDidChange:(BOOL)arg2;
- (void)noteEditorViewController:(SFNoteEditorViewController *)arg1 mouseMoved:(NSEvent *)arg2;
- (void)noteEditorViewController:(SFNoteEditorViewController *)arg1 didChangeSelection:(NSNotification *)arg2;
- (void)noteEditorViewController:(SFNoteEditorViewController *)arg1 didEditNote:(SFNote *)arg2;
- (void)noteEditorViewController:(SFNoteEditorViewController *)arg1 didSaveNote:(SFNote *)arg2;

@optional
- (BOOL)noteEditorViewController:(SFNoteEditorViewController *)arg1 linkClicked:(NSURL *)arg2;
@end

@protocol SFNoteExporter
- (NSURL *)mergeNotes:(NSArray *)arg1 toURL:(NSURL *)arg2 fileName:(NSString *)arg3 error:(id *)arg4;
- (NSURL *)exportNote:(SFNote *)arg1 toURL:(NSURL *)arg2 error:(id *)arg3;
- (NSArray *)exportNotes:(NSArray *)arg1 toURL:(NSURL *)arg2 error:(id *)arg3;

@optional
@property __weak SFNotesTextThemeManager *textThemeManager;
@property(nonatomic) long long syntax;
@property __weak NSManagedObjectContext *managedObjectContext;
@end

@protocol SFNoteImporter
@property BOOL escapeTags;
@property BOOL filenameAsTitle;
@property BOOL generateTitles;
@property BOOL preserveDates;
@property(nonatomic) long long syntax;
@property __weak NSManagedObjectContext *managedObjectContext;
- (NSArray *)importNotesFromFileURLs:(NSArray *)arg1 error:(id *)arg2;
@end

@protocol SFNoteInfoItem <NSObject>
@property __weak NSArray *notes;
- (double)cellHeight;
- (NSString *)identifier;
- (id)initWithNotes:(NSArray *)arg1;
@end

@protocol SFNoteInfoViewControllerDelegate <NSObject>

@optional
- (void)noteInfoViewController:(SFNoteInfoViewController *)arg1 didCloseDetachedWindowController:(NSWindowController *)arg2;
- (void)noteInfoViewController:(SFNoteInfoViewController *)arg1 didDetachWindowController:(NSWindowController *)arg2;
@end

@protocol SFNotePasswordPromptViewControllerProtocol <NSObject>
@property(nonatomic) long long failedSubmitAttempts;
@property(nonatomic) long long biometryType;
@property(retain, nonatomic) NSArray *errors;
@property(retain, nonatomic) NSString *hint;
@property(retain, nonatomic) NSString *promptDescription;
@property(retain, nonatomic) NSString *title;
@property(nonatomic) __weak id <SFNotePasswordPromptDelegate> passwordPromptDelegate;
- (void)resetPasswordPrompt;
- (void)setPasswordString:(NSString *)arg1;
@end

@protocol SFNoteSidebarCoreControllerDelegate <NSObject>

@optional
- (void)sidebarController:(SFNoteSidebarCoreController *)arg1 didUpdateItemValue:(id <SFSidebarItem>)arg2;
- (void)sidebarController:(SFNoteSidebarCoreController *)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 progressiveIndex:(unsigned long long)arg4 forChangeType:(unsigned long long)arg5 progressiveChangeType:(unsigned long long)arg6 newIndex:(unsigned long long)arg7 newProgressiveIndex:(unsigned long long)arg8;
- (void)sidebarControllerDidChangeContent:(SFNoteSidebarCoreController *)arg1;
- (void)sidebarControllerWillChangeContent:(SFNoteSidebarCoreController *)arg1;
@end

@protocol SFNoteTableFileViewProxyDelegate <NSObject>
- (void)fileViewProxy:(SFNoteTableFileViewProxy *)arg1 didLoadFileThumbAtIndex:(unsigned long long)arg2 allThumbLoaded:(BOOL)arg3;
@end

@protocol SFNoteTagRenameViewControllerDelegate <NSObject>
- (void)tagRenameViewController:(id)arg1 didRenameTag:(SFNoteTag *)arg2 resultingTag:(SFNoteTag *)arg3;
@end

@protocol SFNoteTextAttachmentConfigurator <NSObject>
- (void)configureTextAttachment:(SFNotesTextAttachment *)arg1 forTextStyler:(id <SFNoteTextStyler>)arg2;
@end

@protocol SFNoteTextCompletionViewControllerDelegate <NSObject>
- (void)textCompletionViewController:(SFNoteTextCompletionViewController *)arg1 didSelectCompletionItem:(id <SFEditorAutoCompleteItem>)arg2;
@end

@protocol SFNoteTextStyleEditorViewControllerDelegate <NSObject>
- (void)setTextStyleEditorDetachedWindowController:(NSWindowController *)arg1;
@end

@protocol SFNoteTextStyler <NSObject>
@property(retain) SFNotesTextThemeManager *themeManager;
- (void)removeUnusedStyleIn:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 textStorage:(NSTextStorage *)arg3;
- (void)applyStyleIn:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 textStorage:(NSTextStorage *)arg3;
- (void)styleTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 textStorage:(NSTextStorage *)arg3;

@optional
+ (NSRegularExpression *)stylerRegularExpression;
+ (NSArray *)stylerEnclosingStrings;
+ (NSString *)stylerMarkerAttributeName;
+ (NSString *)stylerAttributeName;
+ (NSString *)stylerMarker;
- (NSString *)highlighthsInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (id)XHTMLizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (NSDictionary *)watchTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)removeInString:(NSMutableString *)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(NSMutableString *)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)RTFDizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (long long)DOCXizeListTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2 listIndex:(long long)arg3;
- (void)DOCXizeTextInInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange)arg2;
- (void)removeUnusedTextAttachmentsInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 usingBlock:(void (^)(struct _NSRange, NSAttributedString *, char *))arg3;
- (void)addTextAttachmentsInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 usingBlock:(void (^)(struct _NSRange, NSAttributedString *, char *))arg3;
- (void)replaceTextAttachmentsInAttributedString:(NSMutableAttributedString *)arg1 range:(struct _NSRange *)arg2 usingBlock:(void (^)(struct _NSRange, NSAttributedString *, char *))arg3;
@end

@protocol SFNoteTextViewDelegate <NSObject>
- (BOOL)textViewCanOpenQuickLook:(id)arg1;
- (void)textView:(id)arg1 rightClickMenu:(NSMenu *)arg2;
- (void)textView:(id)arg1 willRestyleWithThemeManager:(SFThemeManager *)arg2;
- (NSAttributedString *)textView:(id)arg1 didReceiveFilesDrop:(NSArray *)arg2 atGlyphIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 didProcessKeyDown:(NSEvent *)arg2;
- (void)textView:(id)arg1 willProcessKeyDown:(NSEvent *)arg2 handledByDelegate:(char *)arg3;
- (void)textView:(id)arg1 willReadFromPasteboard:(NSPasteboard *)arg2 handledByDelegate:(char *)arg3;
- (void)textView:(id)arg1 mouseMoved:(NSEvent *)arg2 handledByDelegate:(char *)arg3;
- (BOOL)textView:(id)arg1 canImportPDFData:(NSData *)arg2;
- (BOOL)textView:(id)arg1 canImportTiffData:(NSData *)arg2;
- (BOOL)textView:(id)arg1 canImportFilePromise:(id <NSDraggingInfo>)arg2;
- (BOOL)textView:(id)arg1 canImportFileURLs:(NSArray *)arg2;
@end

@protocol SFNoteTextViewTextChangeDelegate

@optional
- (BOOL)sfNoteTextView:(SFNoteTextView *)arg1 shouldInsertTab:(BOOL)arg2;
- (BOOL)sfNoteTextViewShouldInsertNewLine:(SFNoteTextView *)arg1;
- (void)sfNoteTextViewDidChangeText:(SFNoteTextView *)arg1;
@end

@protocol SFNotesTableViewControllerDelegate <NSObject>
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 willShowMenu:(NSMenu *)arg2;
- (void)notesTableViewControllerDidShowPlaceholder:(SFNotesTableViewController *)arg1;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 didPerformSearch:(NSString *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 willRemoveNoteFromTable:(SFNote *)arg2 isTheOnlyNoteSelected:(BOOL)arg3;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 willEditNote:(SFNote *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 didSelectNotes:(NSArray *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 didDeleteNotes:(NSArray *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 willDeleteNotes:(NSArray *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 noteWasDoubleClicked:(SFNote *)arg2;
- (void)notesTableViewController:(SFNotesTableViewController *)arg1 didAddNote:(SFNote *)arg2;
@end

@protocol SFPaymentDelegate <NSObject>
- (void)viewControllerDidFailPayment:(NSViewController *)arg1;
- (void)viewControllerDidReceivePayment:(NSViewController *)arg1;
- (void)viewControllerWillBeginPayment:(NSViewController *)arg1;
@end

@protocol SFSidebarItem <NSObject>
@property(nonatomic) __weak NSManagedObjectContext *managedObjectContext;
@property(nonatomic, getter=isPinned) BOOL pinned;
- (NSString *)uniqueIdentifier;
- (BOOL)canPinNotes;
- (BOOL)canShareNotes;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (NSFetchRequest *)notesFetchRequestInManagedObjectContext:(NSManagedObjectContext *)arg1;
- (NSFetchRequest *)notesFetchRequest;
- (BOOL)groupConflictedNotes;
- (BOOL)isSeparator;
- (BOOL)isGroup;
- (NSImage *)selectedIcon;
- (NSImage *)icon;
- (NSString *)title;
- (void)deleteItem;
- (NSArray *)childs;
- (id <SFSidebarItem>)father;

@optional
@property(nonatomic) BOOL hasNotes;
- (void)addNotes:(NSArray *)arg1;
@end

@protocol SFSidebarViewControllerDelegate <NSObject>
- (void)sidebarViewController:(SFSidebarViewController *)arg1 willRemoveSidebarItem:(id)arg2;
- (void)sidebarViewController:(SFSidebarViewController *)arg1 didSelectSidebarItem:(id)arg2;
@end

@protocol SFSwipeableViewDelegate <NSObject>
- (void)swipeEndedOnView:(SFSwipeableView *)arg1 withDeltaX:(float)arg2 andDeltaY:(float)arg3;
- (void)swipeInProgressOnView:(SFSwipeableView *)arg1 withDeltaX:(float)arg2 andDeltaY:(float)arg3;
@end

@protocol SFTagIconPickerViewControllerDelegate <NSObject>
- (void)tagIconPickerViewController:(id)arg1 didChangeIconForSidebarItem:(id <SFSidebarItem>)arg2;
@end

@protocol SFThemeManagerStylableObject <NSObject>
- (void)styleObjectWithThemeManager:(SFThemeManager *)arg1;

@optional
- (void)themeManagerDidChangeStyles:(SFThemeManager *)arg1;
- (void)themeManagerWillChangeStyles:(SFThemeManager *)arg1;
@end

@protocol SFUnlockPasswordPromptViewControllerDelegate <NSObject>
- (void)unlockPasswordPromptDidCancelOperation:(SFUnlockPasswordPromptViewController *)arg1;
@end

@protocol SFXMLChunkParserDelegate <NSObject>

@optional
- (void)parser:(SFXMLChunkParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (void)parser:(SFXMLChunkParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(SFXMLChunkParser *)arg1 didEndElement:(NSString *)arg2;
- (void)parser:(SFXMLChunkParser *)arg1 didStartElement:(NSString *)arg2 attributes:(NSDictionary *)arg3;
- (void)parserDidEndDocument:(SFXMLChunkParser *)arg1;
- (void)parserDidStartDocument:(SFXMLChunkParser *)arg1;
@end

@protocol SKPaymentTransactionObserver <NSObject>
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedTransactions:(NSArray *)arg2;

@optional
- (void)paymentQueueDidChangeStorefront:(SKPaymentQueue *)arg1;
- (BOOL)paymentQueue:(SKPaymentQueue *)arg1 shouldAddStorePayment:(SKPayment *)arg2 forProduct:(SKProduct *)arg3;
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedDownloads:(NSArray *)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(SKPaymentQueue *)arg1;
- (void)paymentQueue:(SKPaymentQueue *)arg1 restoreCompletedTransactionsFailedWithError:(NSError *)arg2;
- (void)paymentQueue:(SKPaymentQueue *)arg1 removedTransactions:(NSArray *)arg2;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SSZipArchiveDelegate <NSObject>

@optional
- (void)zipArchiveProgressEvent:(unsigned long long)arg1 total:(unsigned long long)arg2;
- (void)zipArchiveDidUnzipFileAtIndex:(long long)arg1 totalFiles:(long long)arg2 archivePath:(NSString *)arg3 unzippedFilePath:(NSString *)arg4;
- (void)zipArchiveDidUnzipFileAtIndex:(long long)arg1 totalFiles:(long long)arg2 archivePath:(NSString *)arg3 fileInfo:(struct unz_file_info_s)arg4;
- (void)zipArchiveWillUnzipFileAtIndex:(long long)arg1 totalFiles:(long long)arg2 archivePath:(NSString *)arg3 fileInfo:(struct unz_file_info_s)arg4;
- (BOOL)zipArchiveShouldUnzipFileAtIndex:(long long)arg1 totalFiles:(long long)arg2 archivePath:(NSString *)arg3 fileInfo:(struct unz_file_info_s)arg4;
- (void)zipArchiveDidUnzipArchiveAtPath:(NSString *)arg1 zipInfo:(struct unz_global_info_s)arg2 unzippedPath:(NSString *)arg3;
- (void)zipArchiveWillUnzipArchiveAtPath:(NSString *)arg1 zipInfo:(struct unz_global_info_s)arg2;
@end

@interface SFNoteCheckBoxMarkdownStyler : SFNoteCheckBoxStyler
{
}

+ (id)checkedRegularExpression;
+ (id)uncheckedRegularExpression;
+ (id)stylerRegularExpression;
+ (id)stylerMarkerChecked:(BOOL)arg1;
+ (id)stylerMarker;

@end

@interface SFStaticSidebarItem : NSObject <SFSidebarItem>
{
    BOOL _isGroup;
    BOOL _isSeparator;
    NSManagedObjectContext *managedObjectContext;
    NSImage *_icon;
    NSImage *_selectedIcon;
    NSString *_title;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property BOOL isSeparator; // @synthesize isSeparator=_isSeparator;
@property BOOL isGroup; // @synthesize isGroup=_isGroup;
@property(retain) NSString *title; // @synthesize title=_title;
@property(retain) NSImage *selectedIcon; // @synthesize selectedIcon=_selectedIcon;
@property(retain) NSImage *icon; // @synthesize icon=_icon;
@property(nonatomic) __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext;
- (void).cxx_destruct;
- (id)notePropertiesToFetch;
- (id)uniqueIdentifier;
- (BOOL)groupConflictedNotes;
- (BOOL)canShareNotes;
- (BOOL)canPinNotes;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
@property(nonatomic, getter=isPinned) BOOL pinned;
- (void)deleteItem;
- (id)childs;
- (id)father;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL hasNotes;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IACClient : NSObject
{
    NSString *_URLScheme;
    IACManager *_manager;
}

+ (id)clientWithURLScheme:(id)arg1;
+ (id)client;
@property(nonatomic) __weak IACManager *manager; // @synthesize manager=_manager;
@property(copy, nonatomic) NSString *URLScheme; // @synthesize URLScheme=_URLScheme;
- (void).cxx_destruct;
- (void)performAction:(id)arg1 parameters:(id)arg2 onSuccess:(CDUnknownBlockType)arg3 onFailure:(CDUnknownBlockType)arg4;
- (void)performAction:(id)arg1 parameters:(id)arg2;
- (void)performAction:(id)arg1;
- (BOOL)isAppInstalled;
- (long long)NSErrorCodeForXCUErrorCode:(id)arg1;
- (id)initWithURLScheme:(id)arg1;

@end

@interface SFNotesTrashSidebarItem : SFStaticSidebarItem
{
    BOOL hasNotes;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(nonatomic) BOOL hasNotes; // @synthesize hasNotes;
- (id)notePropertiesToFetch;
- (id)uniqueIdentifier;
- (BOOL)canPinNotes;
- (BOOL)canDeleteNotes;
- (BOOL)canAddNotes;
- (void)addNotes:(id)arg1;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFDOCXNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFDOCXDocumentSourceDelegate, SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    SFNotesTextThemeManager *_textThemeManager;
}

@property __weak SFNotesTextThemeManager *textThemeManager; // @synthesize textThemeManager=_textThemeManager;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)highlighColor;
- (double)codeBlockSize;
- (double)h4OrMoreSize;
- (double)h3HeadingSize;
- (double)h2HeadingSize;
- (double)h1HeadingSize;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)exportNoteText:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFBackupNoteImporter : NSObject
{
    long long _syntax;
    NSManagedObjectContext *_importingContext;
}

@property(retain) NSManagedObjectContext *importingContext; // @synthesize importingContext=_importingContext;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
- (void).cxx_destruct;
- (id)unzippedBundleURLForZippedURL:(id)arg1;
- (void)setupImportingManagedObjectContextToParentContext:(id)arg1;
- (BOOL)importNotesFromFileURL:(id)arg1 inManagedObjectContext:(id)arg2 error:(id *)arg3;

@end

@interface SFNotesTextThemeManager : SFThemeManager
{
    double _zoomedBaseFontSize;
}

@property(nonatomic) double zoomedBaseFontSize; // @synthesize zoomedBaseFontSize=_zoomedBaseFontSize;
- (long long)themeAppearance;
- (id)h4OrMoreTextAttributes;
- (id)h3TextAttributes;
- (id)h2TextAttributes;
- (id)h1TextAttributes;
- (id)tabStopsForAttachmentRect:(struct CGRect)arg1;
- (id)defaultParagraphTabStops;
- (id)defaultAttachmentAttributes;
- (id)defaultTextAttributes;
- (id)defaultParagraphStyle;
- (double)fullLineAttachmentDefaultRightSpacing;
- (double)attachmentBaselineOffsetForCenteredAttachmentHeight:(double)arg1;
- (double)textColumnMaxSize;
- (double)textColumnLeftRightInset;
- (double)textColumnTopBottomInset;
- (double)paragraphTabLenght;
- (double)paragraphTailIndent;
- (double)paragraphHeadIndent;
- (double)paragraphSpacing;
- (double)paragraphLineSpacing;
- (double)paragraphLineHeight;
- (double)paragraphLineHeightMultiplier;
- (double)paragraphFontLeading;
- (double)paragraphFontXHeight;
- (double)paragraphFontDescender;
- (double)paragraphFontAscender;
- (double)paragraphFontCapHeight;
- (double)paragraphFontSize;
- (void)setParagraphSpacingMultiplier:(double)arg1;
- (void)setLineWidthMultiplier:(double)arg1;
- (void)setLineHeightMultiplier:(double)arg1;
- (void)setBaseFontSize:(double)arg1;
- (double)basePointSizeForCurrentBaseFontSize;
- (double)monospaceFontSize;
- (double)h3FontSize;
- (double)h2FontSize;
- (double)h1FontSize;
- (double)paragraphSpacingMultiplier;
- (double)lineWidthMultiplier;
- (double)baseFontSize;
- (id)monospaceFont;
- (id)paragraphItalicFont;
- (id)paragraphBoldFont;
- (id)paragraphFont;
- (id)h4OrMoreFont;
- (id)h3Font;
- (id)h2Font;
- (id)h1Font;
- (id)monospaceFontOfSize:(double)arg1;
- (id)paragraphFontOfSize:(double)arg1;
- (id)titleFontOfSize:(double)arg1;
- (id)highlighterMarkerColor;
- (id)highlighterBackgroundColor;
- (id)codeFontColor;
- (id)codeStrokeColor;
- (id)codeBackgroundColor;
- (id)checkboxCheckColor;
- (id)checkboxStrokeColor;
- (id)checkboxFillColor;
- (id)invalidCharacterColor;
- (id)mapTextColor;
- (id)styleMarkerTextColor;
- (id)accentTextColor;
- (id)separatorTextColor;
- (id)hashSelectedBackgroundColor;
- (id)hashBackgroundColor;
- (id)hashMarkerTextColor;
- (id)hashTextColor;
- (id)linkTextColor;
- (id)titleTextColor;
- (id)lightTextColor;
- (id)seletedTextInactiveBackgroundColor;
- (id)seletedTextBackgroundColor;
- (id)insertionPointColor;
- (id)backgroundTextColor;
- (id)baseTextColor;
- (void)loadDefaultTheme;
- (id)init;

@end

@interface SFTitledURLTextAttachment : SFNotesTextAttachment
{
    NSString *_fullRepresentedText;
}

+ (BOOL)isInline;
@property(retain) NSString *fullRepresentedText; // @synthesize fullRepresentedText=_fullRepresentedText;
- (void).cxx_destruct;
- (void)drawChainLinkForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (double)attachmentLeftSpacing;
- (double)attachmentRightSpacing;
- (double)attachmentBaselineOffset;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;

@end

@interface SFLineSeparatorTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isFullLine;
- (struct CGRect)attachmentBoundsForTextContainer:(id)arg1 originalAttachmentBounds:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (BOOL)canBeDraggedAlone;

@end

@interface SFEncryptionWindowController : NSWindowController
{
}

- (void)dealloc;
- (void)windowDidLoad;

@end

@interface SFNoteInfoTableRowView : NSTableRowView
{
    BOOL _shouldDrawSeparator;
}

@property BOOL shouldDrawSeparator; // @synthesize shouldDrawSeparator=_shouldDrawSeparator;
- (void)drawSeparatorInRect:(struct CGRect)arg1;

@end

@interface SFChangeID : NSManagedObjectID
{
}

@end

@interface _SFChange : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)itemsSet;
- (void)setPrimitiveOrderValue:(long long)arg1;
- (long long)primitiveOrderValue;
@property long long orderValue;
@property(readonly, nonatomic) SFChangeID *objectID;

// Remaining properties
@property(retain, nonatomic) NSSet *items; // @dynamic items;
@property(retain, nonatomic) NSNumber *order; // @dynamic order;
@property(retain, nonatomic) NSString *token; // @dynamic token;

@end

@interface SFChangeAttributes : NSObject
{
}

+ (id)token;
+ (id)order;

@end

@interface SFChangeRelationships : NSObject
{
}

+ (id)items;

@end

@interface SFBasePasswordPromptViewController : NSViewController <SFNotePasswordPromptViewControllerProtocol, SFThemeManagerStylableObject>
{
    id <SFNotePasswordPromptDelegate> passwordPromptDelegate;
    NSString *title;
    NSString *hint;
    long long biometryType;
    NSString *promptDescription;
    NSArray *errors;
    long long failedSubmitAttempts;
    NSSecureTextField *_passwordTextField;
    NSSecureTextField *_createPasswordTextField;
    NSTextField *_hintTextField;
    NSButton *_useBiometryButton;
    NSButton *_cancelButton;
    NSButton *_submitButton;
    NSTextField *_errorsLabel;
    NSTextField *_hintLabel;
    NSTimer *_failTimer;
}

@property(retain) NSTimer *failTimer; // @synthesize failTimer=_failTimer;
@property(nonatomic) __weak NSTextField *hintLabel; // @synthesize hintLabel=_hintLabel;
@property(nonatomic) __weak NSTextField *errorsLabel; // @synthesize errorsLabel=_errorsLabel;
@property(nonatomic) __weak NSButton *submitButton; // @synthesize submitButton=_submitButton;
@property(nonatomic) __weak NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(nonatomic) __weak NSButton *useBiometryButton; // @synthesize useBiometryButton=_useBiometryButton;
@property(nonatomic) __weak NSTextField *hintTextField; // @synthesize hintTextField=_hintTextField;
@property(nonatomic) __weak NSSecureTextField *createPasswordTextField; // @synthesize createPasswordTextField=_createPasswordTextField;
@property(nonatomic) __weak NSSecureTextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(nonatomic) long long failedSubmitAttempts; // @synthesize failedSubmitAttempts;
@property(retain, nonatomic) NSArray *errors; // @synthesize errors;
@property(retain, nonatomic) NSString *promptDescription; // @synthesize promptDescription;
@property(nonatomic) long long biometryType; // @synthesize biometryType;
@property(retain, nonatomic) NSString *hint; // @synthesize hint;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(nonatomic) __weak id <SFNotePasswordPromptDelegate> passwordPromptDelegate; // @synthesize passwordPromptDelegate;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)disableSubmitButton;
- (void)enableSubmitButton;
- (void)resetFailedSubmitAttempts;
- (void)failTimerFired:(id)arg1;
- (void)incrementFailedSubmitAttempts;
- (void)cancelButtonPressed:(id)arg1;
- (void)useBiometryButtonPressed:(id)arg1;
- (void)submitButtonPressed:(id)arg1;
- (void)setPasswordString:(id)arg1;
- (void)resetPasswordPrompt;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteGenericFileStyler : SFNoteAttachmentTextStyler
{
}

+ (id)pathComponentFromTextRepresentation:(id)arg1;
+ (id)stylerRegularExpression;
+ (id)stylerMarkerComponents;
- (id)escapeFilenameForLinks:(id)arg1;
- (id)filenameFromAttachmentRepresentedString:(id)arg1;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (Class)stylerTextAttachmentClass;
- (void)enumerateValidAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)attributedStringWithTextAttachmentForRepresentedText:(id)arg1;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)removeFilesInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)removeInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface GRMustacheInheritablePartialNode : NSObject <GRMustacheTemplateASTNode>
{
    GRMustachePartialNode *_partialNode;
    GRMustacheTemplateAST *_overridingTemplateAST;
}

+ (id)inheritablePartialNodeWithPartialNode:(id)arg1 overridingTemplateAST:(id)arg2;
@property(readonly, retain, nonatomic) GRMustachePartialNode *partialNode; // @synthesize partialNode=_partialNode;
@property(readonly, retain, nonatomic) GRMustacheTemplateAST *overridingTemplateAST; // @synthesize overridingTemplateAST=_overridingTemplateAST;
- (id)initWithPartialNode:(id)arg1 overridingTemplateAST:(id)arg2;
- (id)resolveTemplateASTNode:(id)arg1;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTextBundleNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    BOOL _exportCustomNoteInfo;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    long long _bundleType;
    SFSafeFileWriter *_safeFileWriter;
}

@property(retain) SFSafeFileWriter *safeFileWriter; // @synthesize safeFileWriter=_safeFileWriter;
@property(nonatomic) BOOL exportCustomNoteInfo; // @synthesize exportCustomNoteInfo=_exportCustomNoteInfo;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long bundleType; // @synthesize bundleType=_bundleType;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (void)addCustomInfomationForNote:(id)arg1 toTextBundle:(id)arg2;
- (id)prepareAttachmentURLsForNoteFiles:(id)arg1 markdown:(BOOL)arg2 resultingText:(id *)arg3;
- (id)encryptedTextBundleForNote:(id)arg1;
- (id)mdTextBundleForNote:(id)arg1;
- (id)txtTextBundleForNote:(id)arg1;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFNoteTableViewFilesView : NSView <SFNoteTableFileViewProxyDelegate>
{
    NSMutableArray *_filesThumbs;
    SFNoteTableFileViewProxy *_fileViewProxy;
}

@property(retain) SFNoteTableFileViewProxy *fileViewProxy; // @synthesize fileViewProxy=_fileViewProxy;
@property(retain) NSMutableArray *filesThumbs; // @synthesize filesThumbs=_filesThumbs;
- (void).cxx_destruct;
- (void)fileViewProxy:(id)arg1 didLoadFileThumbAtIndex:(unsigned long long)arg2 allThumbLoaded:(BOOL)arg3;
- (void)setFiles:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setupFileProxyView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesActionsViewController : NSViewController <SFThemeManagerStylableObject>
{
    BOOL _allowTrashDeleteRestore;
    NSButton *_infoButton;
    NSButton *_moreButton;
    NSButton *_deleteButton;
    NSButton *_trashButton;
    NSButton *_restoreButton;
    NSButton *_styleEditorButton;
    NSButton *_sidebarToggleButton;
    NSButton *_floatOnTopButton;
    NSMenu *_shareMenu;
    NSLayoutConstraint *_styleEditorButtonBottomLayoutConstraint;
}

@property(nonatomic) BOOL allowTrashDeleteRestore; // @synthesize allowTrashDeleteRestore=_allowTrashDeleteRestore;
@property(nonatomic) __weak NSLayoutConstraint *styleEditorButtonBottomLayoutConstraint; // @synthesize styleEditorButtonBottomLayoutConstraint=_styleEditorButtonBottomLayoutConstraint;
@property(nonatomic) __weak NSMenu *shareMenu; // @synthesize shareMenu=_shareMenu;
@property(nonatomic) __weak NSButton *floatOnTopButton; // @synthesize floatOnTopButton=_floatOnTopButton;
@property(nonatomic) __weak NSButton *sidebarToggleButton; // @synthesize sidebarToggleButton=_sidebarToggleButton;
@property(nonatomic) __weak NSButton *styleEditorButton; // @synthesize styleEditorButton=_styleEditorButton;
@property(nonatomic) __weak NSButton *restoreButton; // @synthesize restoreButton=_restoreButton;
@property(nonatomic) __weak NSButton *trashButton; // @synthesize trashButton=_trashButton;
@property(nonatomic) __weak NSButton *deleteButton; // @synthesize deleteButton=_deleteButton;
@property(nonatomic) __weak NSButton *moreButton; // @synthesize moreButton=_moreButton;
@property(nonatomic) __weak NSButton *infoButton; // @synthesize infoButton=_infoButton;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)showMoreMenu:(id)arg1;
- (void)toggleFloatOnTop:(id)arg1;
- (void)showSidebarTogglePopover:(id)arg1;
- (void)showStyleEditorButton:(BOOL)arg1;
- (void)showSidebarToggleButton:(BOOL)arg1;
- (void)showTrashButton:(BOOL)arg1;
- (void)showDeleteButton:(BOOL)arg1;
- (void)showRestoreButton:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setActive:(BOOL)arg1 animated:(BOOL)arg2;
- (id)initWithCoder:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFLocalFileManager : NSObject
{
    NSURL *_baseURL;
}

+ (void)deleteTemporaryDirectoryContent;
+ (id)temporaryUniqueDirectoryPath;
+ (id)temporaryUniqueDirectoryURL;
+ (id)copyFileURLToTemporaryDirectory:(id)arg1;
+ (id)applicationSupportURL;
+ (id)applicationPersistentDataURL;
+ (id)applicationGroupURL;
+ (id)folderURLForPathComponent:(id)arg1;
+ (id)localFileManagerForPathComponent:(id)arg1;
@property(retain) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (void)deleteFileForUniqueID:(id)arg1;
- (void)moveFileForUniqueID:(id)arg1 toUniqueId:(id)arg2;
- (id)copyFileAtURL:(id)arg1 toLocalFolderForUniqueID:(id)arg2 filename:(id)arg3 error:(id *)arg4;
- (id)fileURLForUniqueID:(id)arg1 filename:(id)arg2;
- (id)initWithPathComponent:(id)arg1;

@end

@interface SFGeneralPreferencesViewController : NSViewController <SFThemeManagerStylableObject>
{
    NSColor *_headerLabelColor;
    NSColor *_prefLabelColor;
    ITSwitch *_autoGrabURLTitleSwitch;
    ITSwitch *_markdownCompatibilityModeSwitch;
    ITSwitch *_exportTagsSwitch;
    ITSwitch *_autoCompleteEnabledSwitch;
    SFPopUpButton *_notesListSortPopUpButton;
    SFPopUpButton *_tagsListSortPopUpButton;
    SFPopUpButton *_notesAutoLockPopUpButton;
    ITSwitch *_notesListSortDirectionSwitch;
    ITSwitch *_tagsListSortDirectionSwitch;
    NSTextField *_notesListSortDirectionTextField;
    NSTextField *_tagsListSortDirectionTextField;
    NSButton *_proButton;
    ITSwitch *_lockBearSwitch;
    SFShortcutButton *_openBearShortcut;
    SFShortcutButton *_createNoteShortcut;
    SFNotesThemesManager *_themeManager;
    NSMutableArray *_themes;
    SFEncryptionPreferencesManager *_encryptionPreferencesManager;
}

@property(retain) SFEncryptionPreferencesManager *encryptionPreferencesManager; // @synthesize encryptionPreferencesManager=_encryptionPreferencesManager;
@property(retain) NSMutableArray *themes; // @synthesize themes=_themes;
@property(retain) SFNotesThemesManager *themeManager; // @synthesize themeManager=_themeManager;
@property SFShortcutButton *createNoteShortcut; // @synthesize createNoteShortcut=_createNoteShortcut;
@property SFShortcutButton *openBearShortcut; // @synthesize openBearShortcut=_openBearShortcut;
@property ITSwitch *lockBearSwitch; // @synthesize lockBearSwitch=_lockBearSwitch;
@property NSButton *proButton; // @synthesize proButton=_proButton;
@property NSTextField *tagsListSortDirectionTextField; // @synthesize tagsListSortDirectionTextField=_tagsListSortDirectionTextField;
@property NSTextField *notesListSortDirectionTextField; // @synthesize notesListSortDirectionTextField=_notesListSortDirectionTextField;
@property ITSwitch *tagsListSortDirectionSwitch; // @synthesize tagsListSortDirectionSwitch=_tagsListSortDirectionSwitch;
@property ITSwitch *notesListSortDirectionSwitch; // @synthesize notesListSortDirectionSwitch=_notesListSortDirectionSwitch;
@property SFPopUpButton *notesAutoLockPopUpButton; // @synthesize notesAutoLockPopUpButton=_notesAutoLockPopUpButton;
@property SFPopUpButton *tagsListSortPopUpButton; // @synthesize tagsListSortPopUpButton=_tagsListSortPopUpButton;
@property SFPopUpButton *notesListSortPopUpButton; // @synthesize notesListSortPopUpButton=_notesListSortPopUpButton;
@property ITSwitch *autoCompleteEnabledSwitch; // @synthesize autoCompleteEnabledSwitch=_autoCompleteEnabledSwitch;
@property ITSwitch *exportTagsSwitch; // @synthesize exportTagsSwitch=_exportTagsSwitch;
@property ITSwitch *markdownCompatibilityModeSwitch; // @synthesize markdownCompatibilityModeSwitch=_markdownCompatibilityModeSwitch;
@property ITSwitch *autoGrabURLTitleSwitch; // @synthesize autoGrabURLTitleSwitch=_autoGrabURLTitleSwitch;
@property NSColor *prefLabelColor; // @synthesize prefLabelColor=_prefLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)proButtonClicked:(id)arg1;
- (void)updateBearLockValue;
- (void)bearLockDidChange:(id)arg1;
- (void)updateNotesAutoLockValue;
- (void)notesAutoLockDidChange:(id)arg1;
- (void)updateTagsListSortDirectionTextFieldForValue:(id)arg1;
- (void)tagsListSortAscendingDidChange:(id)arg1;
- (void)tagsListSortDidChange:(id)arg1;
- (void)updateNotesListSortDirectionTextFieldForValue:(id)arg1;
- (void)notesListSortAscendingDidChange:(id)arg1;
- (void)notesListSortDidChange:(id)arg1;
- (void)syntaxChanged:(id)arg1;
- (void)setupSortingButtonsBindingsAndValues;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFPDFNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    SFNotesTextThemeManager *_textThemeManager;
    SFCodeSyntaxHighlighter *_codeSyntaxHighlighter;
}

+ (struct CGRect)usLetterPaperRect;
+ (struct CGSize)a4PaperMargins;
+ (struct CGRect)a4PaperWithMarginRect;
+ (struct CGRect)a4PaperRect;
@property(retain) SFCodeSyntaxHighlighter *codeSyntaxHighlighter; // @synthesize codeSyntaxHighlighter=_codeSyntaxHighlighter;
@property __weak SFNotesTextThemeManager *textThemeManager; // @synthesize textThemeManager=_textThemeManager;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (void)fixLinksForGlyphRange:(struct _NSRange)arg1 textStorage:(id)arg2 layoutManager:(id)arg3 textContainer:(id)arg4 origin:(struct CGPoint)arg5 inPdfContext:(struct CGContext *)arg6;
- (id)exportNoteText:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (struct CGRect)usLetterPaperWithMarginRect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFSyncErrorHandlerInfo : NSObject
{
    NSString *_titleMessage;
    NSString *_statusMessage;
    NSString *_actionName;
    NSString *_actionCommandName;
    long long _actionType;
}

@property(nonatomic) long long actionType; // @synthesize actionType=_actionType;
@property(retain) NSString *actionCommandName; // @synthesize actionCommandName=_actionCommandName;
@property(retain) NSString *actionName; // @synthesize actionName=_actionName;
@property(retain) NSString *statusMessage; // @synthesize statusMessage=_statusMessage;
@property(retain) NSString *titleMessage; // @synthesize titleMessage=_titleMessage;
- (void).cxx_destruct;

@end

@interface SFSyncErrorHandlerCoreController : NSObject
{
    SFNoteCloudKitSync *_cloudKitSync;
    SFSyncErrorHandlerInfo *_currentErrorHandlerInfo;
    NSError *_lastSyncError;
}

+ (id)userNotProInfo;
@property(nonatomic) __weak NSError *lastSyncError; // @synthesize lastSyncError=_lastSyncError;
@property(retain, nonatomic) SFSyncErrorHandlerInfo *currentErrorHandlerInfo; // @synthesize currentErrorHandlerInfo=_currentErrorHandlerInfo;
@property(nonatomic) __weak SFNoteCloudKitSync *cloudKitSync; // @synthesize cloudKitSync=_cloudKitSync;
- (void).cxx_destruct;
- (id)iCloudAccountRestricted;
- (id)iCloudFullInfo;
- (id)userNotLoggedIntoICloudInfo;
- (id)userDeletedCloudKitDataInfo;
- (id)syncDisabledInfo;
- (id)noInternetInfo;
- (void)handleZoneNotFound;
- (void)handleErrorActionType:(unsigned long long)arg1;
- (void)handleCurrentErrorHandlerInfo;
- (void)notifySyncError:(long long)arg1;
- (void)handleCloudKitError:(id)arg1;
- (void)handleError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupErrorObserver;

@end

@interface SFWebBlocImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFTextBundle : NSObject
{
    long long _type;
    long long _version;
    NSString *_text;
    NSArray *_assetsURLs;
    NSDictionary *_customInfo;
    long long _action;
    NSString *_modifiedNoteUniqueIdentifier;
    NSFileWrapper *_bundleFileWrapper;
}

+ (id)textBundleWithContentsOfURL:(id)arg1;
@property(retain) NSFileWrapper *bundleFileWrapper; // @synthesize bundleFileWrapper=_bundleFileWrapper;
@property(retain) NSString *modifiedNoteUniqueIdentifier; // @synthesize modifiedNoteUniqueIdentifier=_modifiedNoteUniqueIdentifier;
@property long long action; // @synthesize action=_action;
@property(retain) NSDictionary *customInfo; // @synthesize customInfo=_customInfo;
@property(retain) NSArray *assetsURLs; // @synthesize assetsURLs=_assetsURLs;
@property(retain) NSString *text; // @synthesize text=_text;
@property long long version; // @synthesize version=_version;
@property long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)jsonDataInfo;
- (id)jsonCustomField;
- (long long)actionForString:(id)arg1;
- (id)stringForAction:(long long)arg1;
- (long long)versionForLong:(id)arg1;
- (long long)typeForString:(id)arg1;
- (id)stringForType:(long long)arg1;
- (id)textFileNameWithFileWrapper:(id)arg1;
- (id)textFileName;
- (id)assetsFilewrapperForFilesURLs:(id)arg1;
- (BOOL)readFromURL:(id)arg1;
- (BOOL)writeToURL:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithText:(id)arg1 assets:(id)arg2 action:(long long)arg3 modifiedNoteUniqueIdentifier:(id)arg4;
- (id)initWithText:(id)arg1 assets:(id)arg2;
- (id)init;

@end

@interface SFFileHelper : NSObject
{
}

+ (id)sharedHelper;
- (BOOL)fileExistsWithName:(id)arg1;
- (void)renameFile:(id)arg1 toNewName:(id)arg2;
- (void)deleteFileForName:(id)arg1;
- (id)loadFileForName:(id)arg1;
- (void)writeFileWithName:(id)arg1 andText:(id)arg2 userFile:(BOOL)arg3;
- (id)getDataPlistPath;
- (id)getDirectoryPathWithName:(id)arg1;
- (void)createDirectoryWithName:(id)arg1;
- (id)documentsDirectoryURL;
- (id)getDocumentsDirectory;

@end

@interface SFBearifier : NSObject
{
    BOOL _escapeTags;
    NSString *_title;
    NSString *_body;
    NSAttributedString *_attributedBody;
    NSArray *_imageLinks;
    NSArray *_fileLinks;
    long long _syntax;
}

+ (BOOL)isSpaceOrPunctuation:(unsigned short)arg1;
+ (id)bearifierWithFormat:(int)arg1 title:(id)arg2 andAttributedString:(id)arg3;
+ (id)bearifierWithFormat:(int)arg1 title:(id)arg2 andBody:(id)arg3;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property(retain) NSArray *fileLinks; // @synthesize fileLinks=_fileLinks;
@property(retain) NSArray *imageLinks; // @synthesize imageLinks=_imageLinks;
@property(retain) NSAttributedString *attributedBody; // @synthesize attributedBody=_attributedBody;
@property(retain) NSString *body; // @synthesize body=_body;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)bearifyWithSyntax:(long long)arg1;
- (id)bearify;
- (id)initWithTitle:(id)arg1 andBody:(id)arg2;

@end

@interface SFEditorPreferencesViewController : NSViewController <SFThemeManagerStylableObject>
{
    NSArray *_fontsList;
    NSColor *_headerLabelColor;
    NSColor *_prefLabelColor;
    SFPopUpButton *_fontsPopupButton;
    SFSlider *_fontSizeSlider;
    SFSlider *_fontLineHeightSlider;
    SFSlider *_fontLineWidthSlider;
    SFSlider *_fontParagraphSpacingSlider;
    SFPushButton *_resetButton;
}

@property SFPushButton *resetButton; // @synthesize resetButton=_resetButton;
@property SFSlider *fontParagraphSpacingSlider; // @synthesize fontParagraphSpacingSlider=_fontParagraphSpacingSlider;
@property SFSlider *fontLineWidthSlider; // @synthesize fontLineWidthSlider=_fontLineWidthSlider;
@property SFSlider *fontLineHeightSlider; // @synthesize fontLineHeightSlider=_fontLineHeightSlider;
@property SFSlider *fontSizeSlider; // @synthesize fontSizeSlider=_fontSizeSlider;
@property SFPopUpButton *fontsPopupButton; // @synthesize fontsPopupButton=_fontsPopupButton;
@property NSColor *prefLabelColor; // @synthesize prefLabelColor=_prefLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
@property(retain) NSArray *fontsList; // @synthesize fontsList=_fontsList;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)resetToDefaultValues:(id)arg1;
- (void)paragraphSpacingDidChange:(id)arg1;
- (void)lineWidthDidChange:(id)arg1;
- (void)lineHeightDidChange:(id)arg1;
- (void)fontSizeDidChange:(id)arg1;
- (void)fontDropdownDidChange:(id)arg1;
- (void)loadStartingValues;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFSafeFileWriter : NSObject
{
    NSString *_path;
    NSURL *_url;
    NSMutableDictionary *_normalizedFilesPaths;
}

+ (id)safeFileWriterForFolderPath:(id)arg1;
+ (id)safeFileWriterForFolderURL:(id)arg1;
@property(retain) NSMutableDictionary *normalizedFilesPaths; // @synthesize normalizedFilesPaths=_normalizedFilesPaths;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(retain) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)substringWithMaxByteLength:(unsigned long long)arg1 forString:(id)arg2;
- (id)pathWithIncreasedNumberCountForPath:(id)arg1 currentCount:(long long)arg2;
- (id)normalizedFilesNamesForFolderURL:(id)arg1 error:(id *)arg2;
- (id)normalizedFilename:(id)arg1;
- (id)sanitizeFilename:(id)arg1;
- (id)safelyWriteFilename:(id)arg1 error:(id *)arg2 writerBlock:(CDUnknownBlockType)arg3;
- (id)initWithFolderPath:(id)arg1;
- (id)initWithFolderURL:(id)arg1;

@end

@interface SFNoteInfoCreationDate : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    NSString *_headerString;
    NSString *_valueString;
    NSColor *_textColor;
    NSColor *_labelColor;
}

@property(retain) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(copy) NSString *valueString; // @synthesize valueString=_valueString;
@property(copy) NSString *headerString; // @synthesize headerString=_headerString;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteCloudKitPersistance : NSObject
{
    BOOL _needToSave;
    NSMutableDictionary *_ckNotesDictionary;
    NSString *_localChangeToken;
    CKServerChangeToken *_serverChangeToken;
    CKRecordZoneID *_noteZoneID;
    NSString *_noteZoneSubscriptionID;
}

+ (id)persistentURL;
+ (id)objectsToMigrateIntoManagedObjectContext:(id)arg1;
+ (void)migrateDataIntoManagedObjectContext:(id)arg1;
@property(retain, nonatomic) NSString *noteZoneSubscriptionID; // @synthesize noteZoneSubscriptionID=_noteZoneSubscriptionID;
@property(retain, nonatomic) CKRecordZoneID *noteZoneID; // @synthesize noteZoneID=_noteZoneID;
@property(retain, nonatomic) CKServerChangeToken *serverChangeToken; // @synthesize serverChangeToken=_serverChangeToken;
@property(retain, nonatomic) NSString *localChangeToken; // @synthesize localChangeToken=_localChangeToken;
@property(nonatomic) BOOL needToSave; // @synthesize needToSave=_needToSave;
@property(retain) NSMutableDictionary *ckNotesDictionary; // @synthesize ckNotesDictionary=_ckNotesDictionary;
- (void).cxx_destruct;
- (id)ckRecordForUniqueIdentifier:(id)arg1;
- (id)ckRecordDictionaryFromCkRecordSystemFieldsDictionary:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GRMustacheRenderingEngine : NSObject <GRMustacheTemplateASTVisitor>
{
    struct {
        unsigned long long capacity;
        NSMutableString *string;
    } _buffer;
    unsigned long long _contentType;
    GRMustacheContext *_context;
}

+ (id)renderingEngineWithContentType:(unsigned long long)arg1 context:(id)arg2;
+ (void)initialize;
- (BOOL)visitTemplateASTNodes:(id)arg1 error:(id *)arg2;
- (BOOL)visitTag:(id)arg1 expression:(id)arg2 escapesHTML:(BOOL)arg3 error:(id *)arg4;
- (id)initWithContentType:(unsigned long long)arg1 context:(id)arg2;
- (BOOL)visitTextNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitSectionTag:(id)arg1 error:(id *)arg2;
- (BOOL)visitVariableTag:(id)arg1 error:(id *)arg2;
- (BOOL)visitPartialNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitInheritableSectionNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitInheritablePartialNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitTemplateAST:(id)arg1 error:(id *)arg2;
- (id)renderTemplateAST:(id)arg1 HTMLSafe:(char *)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFSidebarTableRowView : NSTableRowView
{
    BOOL _rightClicked;
}

@property(nonatomic, getter=isRightClicked) BOOL rightClicked; // @synthesize rightClicked=_rightClicked;
- (void)updateDisclosureButton;
- (void)drawDraggingDestinationFeedbackInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (long long)draggingDestinationFeedbackStyle;
- (void)setSelected:(BOOL)arg1;

@end

@interface SFSendToBearService : NSObject
{
}

- (void)newNoteWithString:(id)arg1;
- (void)newNoteWithRTF:(id)arg1;
- (void)newNoteWithURLs:(id)arg1;
- (void)newNoteWithFiles:(id)arg1;
- (void)sendToBearService:(id)arg1 userData:(id)arg2 error:(id *)arg3;

@end

@interface SFNoteImportCoreController : NSObject
{
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (BOOL)canImportFileArURL:(id)arg1;
- (id)importerWithFileUTI:(struct __CFString *)arg1 andExtension:(id)arg2;
- (id)importEvernoteNotesFromFileURLs:(id)arg1;
- (id)importDraftsNotesFromFileURLs:(id)arg1;
- (id)importDayOneNotesFromFileURLs:(id)arg1;
- (id)importVesperNotesFromFileURLs:(id)arg1 preserveDates:(BOOL)arg2;
- (id)importNotesFromFileURLs:(id)arg1 withMoc:(id)arg2 preserveDates:(BOOL)arg3 makeTitles:(BOOL)arg4 filenameAsTitle:(BOOL)arg5 escapeTags:(BOOL)arg6 error:(id *)arg7;
- (id)importNotesFromFileURLs:(id)arg1 preserveDates:(BOOL)arg2 makeTitles:(BOOL)arg3 filenameAsTitle:(BOOL)arg4 escapeTags:(BOOL)arg5 error:(id *)arg6;
- (void)importNotesFromFileURLs:(id)arg1 preserveDates:(BOOL)arg2 makeTitles:(BOOL)arg3 filenameAsTitle:(BOOL)arg4 escapeTags:(BOOL)arg5 response:(CDUnknownBlockType)arg6;
- (void)importBackupFromFileURL:(id)arg1 response:(CDUnknownBlockType)arg2;
- (id)asyncManagedObjectContext:(id)arg1;
- (id)initWithManagedObjectContext:(id)arg1 syntax:(long long)arg2;

@end

@interface SFNoteCheckBoxStyler : SFNoteAttachmentTextStyler
{
}

+ (id)checkedRegularExpression;
+ (id)uncheckedRegularExpression;
+ (id)stylerRegularExpression;
+ (id)stylerCheckedAttributeName;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarkerChecked:(BOOL)arg1;
+ (id)stylerMarker;
- (id)attachmentParagraphStyleForAttributeRange:(struct _NSRange)arg1 attributedString:(id)arg2 paragraphRange:(struct _NSRange)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (Class)stylerTextAttachmentClass;
- (id)attachmentRegularExpression;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (long long)DOCXizeListTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2 listIndex:(long long)arg3;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNoteImage : _SFNoteImage <SFCloudKitSyncableObject>
{
}

+ (id)parserRegex;
+ (BOOL)canImportFileURL:(id)arg1;
+ (id)noteFileForFileURL:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (id)ckDesiredKeysToDownload;
+ (id)ckLocalKeyPath;
+ (id)ckKeyPathToSyncWithDate;
+ (id)ckKeyPathToSync;
+ (void)mergeAttributesWithDateForNoteImage:(id)arg1 ckRecord:(id)arg2;
+ (id)updateOrCreateObjectsFromCKRecords:(id)arg1 inMoc:(id)arg2 conflictedUniqueIdentifiers:(id *)arg3;
- (void)deleteFileThumbnails;
- (id)additionalFileData;
- (id)localFolderName;
- (id)textRepresentation;
- (id)sf_modificationDate;
- (void)setSf_modificationDate:(id)arg1;
- (id)sf_creationDate;
- (void)setSf_creationDate:(id)arg1;
- (id)updateCKRecord:(id)arg1;
- (id)ckRecordWitZoneID:(id)arg1;
- (id)ckRecord;
- (void)setCKRecord:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFExternalChangesID : NSManagedObjectID
{
}

@end

@interface _SFExternalChanges : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveItemChangeValue:(short)arg1;
- (short)primitiveItemChangeValue;
@property short itemChangeValue;
@property(readonly, nonatomic) SFExternalChangesID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *itemChange; // @dynamic itemChange;
@property(retain, nonatomic) NSString *itemEntity; // @dynamic itemEntity;
@property(retain, nonatomic) NSString *itemObjectID; // @dynamic itemObjectID;

@end

@interface SFExternalChangesAttributes : NSObject
{
}

+ (id)itemObjectID;
+ (id)itemEntity;
+ (id)itemChange;

@end

@interface SFNoteQuoteTextStyler : NSObject <SFNoteTextStyler>
{
    NSCache *_stylerCache;
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property(retain) NSCache *stylerCache; // @synthesize stylerCache=_stylerCache;
- (void).cxx_destruct;
- (id)attachmentParagraphStyleForAttributeRange:(struct _NSRange)arg1 attributedString:(id)arg2 paragraphRange:(struct _NSRange)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)init;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTitledUrlStyler : SFNoteAttachmentTextStyler
{
}

+ (id)titledURLForUrlString:(id)arg1 title:(id)arg2 inString:(id)arg3 atRange:(struct _NSRange)arg4;
+ (struct _NSRange)titleRangeForAttachmentAtIndex:(unsigned long long)arg1 inAttributedString:(id)arg2;
+ (id)stylerRegularExpression;
+ (id)stylerAttributeName;
+ (id)stylerMarkerComponents;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (unsigned long long)attachmentRegularExpressionTextGroupIndex;
- (Class)stylerTextAttachmentClass;
- (BOOL)shouldCacheTextAttachment;
- (id)attributedStringWithTextAttachmentForRepresentedText:(id)arg1;
- (id)attachmentRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNoteAttachmentTextStyler : NSObject <SFNoteTextStyler>
{
    NSCache *_stylerCache;
    SFNotesTextThemeManager *_themeManager;
    id <SFNoteTextAttachmentConfigurator> _textAttachmentConfigurator;
}

+ (id)attachmentPlaceholderString;
+ (id)stylerRegularExpression;
@property __weak id <SFNoteTextAttachmentConfigurator> textAttachmentConfigurator; // @synthesize textAttachmentConfigurator=_textAttachmentConfigurator;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property(retain) NSCache *stylerCache; // @synthesize stylerCache=_stylerCache;
- (void).cxx_destruct;
- (BOOL)shouldSkipAttachmentReplacementInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (BOOL)shouldRemoveAttachment:(id)arg1 inAttributedString:(id)arg2 attachmentRange:(struct _NSRange)arg3 editedRange:(struct _NSRange *)arg4;
- (void)removeUnusedTextAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)addTextAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)replaceTextAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)attributedStringWithTextAttachmentForRepresentedText:(id)arg1;
- (Class)stylerTextAttachmentClass;
- (void)enumerateValidAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)attachmentPlaceholderString;
- (struct _NSRange)offsetMatchedRange:(struct _NSRange)arg1 forMatchedString:(id)arg2;
- (struct _NSRange)matchedRangeForTextCheckingResult:(id)arg1;
- (unsigned long long)attachmentRegularExpressionTextGroupIndex;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (id)attachmentRegularExpression;
- (id)stylerRegularExpression;
- (BOOL)shouldCacheTextAttachment;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteInfoReminderItem : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    NSString *_actionItemTitle;
    NSImage *_actionItemImage;
    NSImage *_actionItemImageActive;
}

@property(retain) NSImage *actionItemImageActive; // @synthesize actionItemImageActive=_actionItemImageActive;
@property(retain) NSImage *actionItemImage; // @synthesize actionItemImage=_actionItemImage;
@property(retain) NSString *actionItemTitle; // @synthesize actionItemTitle=_actionItemTitle;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (void)createReminderWithEventStore:(id)arg1;
- (void)actionItemClicked:(id)arg1;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteLineSeparatorMarkdownStyler : SFNoteLineSeparatorStyler
{
}

+ (id)stylerRegularExpression;

@end

@interface SFTagAutoCompleteItemsProvider : NSObject <SFEditorAutoCompleteItemsProvider>
{
    NSArray *_itemsForCompletion;
    unsigned long long _maxNumberOfCompletions;
    NSManagedObjectContext *_managedObjectContext;
}

@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(nonatomic) unsigned long long maxNumberOfCompletions; // @synthesize maxNumberOfCompletions=_maxNumberOfCompletions;
@property(retain) NSArray *itemsForCompletion; // @synthesize itemsForCompletion=_itemsForCompletion;
- (void).cxx_destruct;
- (id)popularTagsSortDescriptors;
- (id)completionSortDescriptorForPartiaTagString:(id)arg1;
- (id)findTagsForPartialString:(id)arg1 inManagedObjectContext:(id)arg2 excludeTags:(id)arg3 limitTo:(unsigned long long)arg4;
- (id)popularTagsInManagedObjectContext:(id)arg1 excludeTags:(id)arg2 limitTo:(unsigned long long)arg3;
- (void)updateCompletionForPartiaTagString:(id)arg1 noteText:(id)arg2 excludeTags:(id)arg3;
- (void)updateCompletionForPartiaString:(id)arg1 fullText:(id)arg2;
- (id)initWithManagedObjectContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTableEncryptedSubtitleView : NSView
{
    unsigned long long _seed;
    NSColor *_tokenColor;
    GKMersenneTwisterRandomSource *_rs;
    GKRandomDistribution *_rd;
}

@property(retain) GKRandomDistribution *rd; // @synthesize rd=_rd;
@property(retain) GKMersenneTwisterRandomSource *rs; // @synthesize rs=_rs;
@property(retain) NSColor *tokenColor; // @synthesize tokenColor=_tokenColor;
@property(nonatomic) unsigned long long seed; // @synthesize seed=_seed;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFBackupNoteExporter : NSObject
{
    long long _syntax;
}

@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
- (id)currentDateString;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

@end

@interface SFTaskPaperImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)bearNoteWithTaskPaperString:(id)arg1 andTitle:(id)arg2;
- (id)bearNoteWithTaskPaperString:(id)arg1;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFApplicationLockView : SFStyleView
{
}

- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)isOpaque;

@end

@interface SFTagSuggestionCoreController : NSObject
{
    BOOL _forceNoNLP;
    NSCache *_tagCache;
}

+ (id)tagWords:(id)arg1;
@property(retain) NSCache *tagCache; // @synthesize tagCache=_tagCache;
@property BOOL forceNoNLP; // @synthesize forceNoNLP=_forceNoNLP;
- (void).cxx_destruct;
- (BOOL)isTaggerSuitable:(id)arg1;
- (id)cachedLemmaAndValueForRawTag:(id)arg1;
- (void)cacheRawTag:(id)arg1 withLemma:(id)arg2 andValue:(id)arg3;
- (void)initTagCache;
- (id)lemmasDictionaryWithTags:(id)arg1;
- (id)tagSuggestionsWithText:(id)arg1 andTags:(id)arg2;

@end

@interface SFLoadingViewController : NSViewController <SFThemeManagerStylableObject>
{
    NSProgress *_progress;
    NSString *_loadingTitle;
    NSString *_loadingMessage;
    NSView *_placeholderView;
    NSTextField *_titleTextField;
    NSTextField *_messageTextField;
    SFProgressBarIndicator *_progressIndicator;
    ITProgressIndicator *_indeterminateProgressIndicator;
}

@property(nonatomic) __weak ITProgressIndicator *indeterminateProgressIndicator; // @synthesize indeterminateProgressIndicator=_indeterminateProgressIndicator;
@property(nonatomic) __weak SFProgressBarIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(nonatomic) __weak NSTextField *messageTextField; // @synthesize messageTextField=_messageTextField;
@property(nonatomic) __weak NSTextField *titleTextField; // @synthesize titleTextField=_titleTextField;
@property(nonatomic) __weak NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(copy, nonatomic) NSString *loadingMessage; // @synthesize loadingMessage=_loadingMessage;
@property(copy, nonatomic) NSString *loadingTitle; // @synthesize loadingTitle=_loadingTitle;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteLinkedNoteStyler : SFNoteTitledUrlStyler
{
}

+ (id)stylerRegularExpression;
- (Class)stylerTextAttachmentClass;
- (BOOL)shouldCacheTextAttachment;

@end

@interface SFLogger : NSObject
{
    DDFileLogger *_fileLogger;
}

+ (id)sharedLogger;
@property(retain) DDFileLogger *fileLogger; // @synthesize fileLogger=_fileLogger;
- (void).cxx_destruct;
- (id)lastLogFilePath;
- (void)setFileLoggerEnabled:(BOOL)arg1;
- (void)logVerbose:(id)arg1;
- (void)logDebug:(id)arg1;
- (void)logInfo:(id)arg1;
- (void)logWarn:(id)arg1;
- (void)logError:(id)arg1;
- (void)setLogLevel:(long long)arg1;
- (void)setupLogFile;
- (void)setupLogLevel;
- (id)init;

@end

@interface SFNoteImageID : SFNoteFileID
{
}

@end

@interface _SFNoteImage : SFNoteFile
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveWidthValue:(long long)arg1;
- (long long)primitiveWidthValue;
@property long long widthValue;
- (void)setPrimitiveHeightValue:(long long)arg1;
- (long long)primitiveHeightValue;
@property long long heightValue;
- (void)setPrimitiveAnimatedValue:(BOOL)arg1;
- (BOOL)primitiveAnimatedValue;
@property BOOL animatedValue;
@property(readonly, nonatomic) SFNoteImageID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *animated; // @dynamic animated;
@property(retain, nonatomic) NSNumber *height; // @dynamic height;
@property(retain, nonatomic) NSNumber *width; // @dynamic width;

@end

@interface SFNoteImageAttributes : NSObject
{
}

+ (id)width;
+ (id)height;
+ (id)animated;

@end

@interface SFCoreLocationManager : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    CLGeocoder *_geoCoder;
    CDUnknownBlockType _completionHandler;
}

+ (id)addressStringFromPlacemark:(id)arg1;
@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain) CLGeocoder *geoCoder; // @synthesize geoCoder=_geoCoder;
@property(retain) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)getLocationWithCompletionHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFGrowingTextField : NSTextField
{
    BOOL _isEditing;
    double _maxHeight;
}

@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)intrinsicContentSizeForExpansion;
- (void)invalidateSizeAndNotifyDelegate;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)setStringValue:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GRMustacheFilter : NSObject <GRMustacheFilter>
{
}

+ (id)variadicFilterWithBlock:(CDUnknownBlockType)arg1;
+ (id)filterWithBlock:(CDUnknownBlockType)arg1;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheBlockFilter : GRMustacheFilter
{
    CDUnknownBlockType _block;
}

- (id)transformedValue:(id)arg1;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface GRMustacheBlockVariadicFilter : GRMustacheFilter
{
    NSArray *_arguments;
    CDUnknownBlockType _block;
}

- (id)filterByCurryingArgument:(id)arg1;
- (id)transformedValue:(id)arg1;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1 arguments:(id)arg2;

@end

@interface SFTXTNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

+ (id)noteImporter;
@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)noteTextFromPlainTextFile:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;
- (id)importNotesFromFilePaths:(id)arg1 error:(id *)arg2;
- (id)importNotesFromStrings:(id)arg1 error:(id *)arg2;

@end

@interface SFSidebarGroupTableRowView : NSTableRowView
{
}

- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFNoteSidebarToggleViewController : NSViewController
{
    SFStyleView *_selectionView;
    NSButton *_toggle1ColumnButton;
    NSButton *_toggle2ColumnsButton;
    NSButton *_toggle3ColumnsButton;
    NSPopover *_popover;
}

@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property __weak NSButton *toggle3ColumnsButton; // @synthesize toggle3ColumnsButton=_toggle3ColumnsButton;
@property __weak NSButton *toggle2ColumnsButton; // @synthesize toggle2ColumnsButton=_toggle2ColumnsButton;
@property __weak NSButton *toggle1ColumnButton; // @synthesize toggle1ColumnButton=_toggle1ColumnButton;
@property __weak SFStyleView *selectionView; // @synthesize selectionView=_selectionView;
- (void).cxx_destruct;
- (void)updateSelectionViewPosition;
- (void)showEditorOnly:(id)arg1;
- (void)showNotesAndEditor:(id)arg1;
- (void)showTagsNotesAndEditor:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)popoverWillShow:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface GRMustacheLocalizer : NSObject <GRMustacheTagDelegate, GRMustacheRendering, GRMustacheFilter>
{
    NSBundle *_bundle;
    NSString *_tableName;
    NSMutableArray *_formatArguments;
}

@property(readonly, retain, nonatomic) NSString *tableName; // @synthesize tableName=_tableName;
@property(readonly, retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(retain, nonatomic) NSMutableArray *formatArguments; // @synthesize formatArguments=_formatArguments;
- (id)stringWithFormat:(id)arg1 argumentArray:(id)arg2;
- (void)mustacheTag:(id)arg1 didRenderObject:(id)arg2 as:(id)arg3;
- (id)mustacheTag:(id)arg1 willRenderObject:(id)arg2;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)transformedValue:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (id)initWithBundle:(id)arg1 tableName:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTextStylerCommonAttributes : NSObject
{
}

+ (BOOL)canEditTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
+ (BOOL)shouldSkipStylingInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
+ (id)customAttributesNames;

@end

@interface SFDOCXParser : NSObject
{
    BOOL _runIsBold;
    BOOL _runIsItalic;
    BOOL _runIsHyperlink;
    float _fontSize;
    NSURL *_fileURL;
    NSAttributedString *_parsedString;
    GDataXMLDocument *_xmlDoc;
    NSFontDescriptor *_fontDescriptor;
    NSFontDescriptor *_boldDescriptor;
    NSFontDescriptor *_italicDescriptor;
    NSFont *_boldFont;
    NSFont *_normalFont;
    NSFont *_italicFont;
    NSFont *_currentFont;
    NSMutableAttributedString *_finalString;
    NSMutableAttributedString *_runString;
    NSString *_currentFontName;
    NSDictionary *_alignmentAttr;
}

@property(retain) NSDictionary *alignmentAttr; // @synthesize alignmentAttr=_alignmentAttr;
@property BOOL runIsHyperlink; // @synthesize runIsHyperlink=_runIsHyperlink;
@property BOOL runIsItalic; // @synthesize runIsItalic=_runIsItalic;
@property BOOL runIsBold; // @synthesize runIsBold=_runIsBold;
@property float fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic) NSString *currentFontName; // @synthesize currentFontName=_currentFontName;
@property(retain, nonatomic) NSMutableAttributedString *runString; // @synthesize runString=_runString;
@property(retain, nonatomic) NSMutableAttributedString *finalString; // @synthesize finalString=_finalString;
@property(retain, nonatomic) NSFont *currentFont; // @synthesize currentFont=_currentFont;
@property(retain, nonatomic) NSFont *italicFont; // @synthesize italicFont=_italicFont;
@property(retain, nonatomic) NSFont *normalFont; // @synthesize normalFont=_normalFont;
@property(retain, nonatomic) NSFont *boldFont; // @synthesize boldFont=_boldFont;
@property(retain, nonatomic) NSFontDescriptor *italicDescriptor; // @synthesize italicDescriptor=_italicDescriptor;
@property(retain, nonatomic) NSFontDescriptor *boldDescriptor; // @synthesize boldDescriptor=_boldDescriptor;
@property(retain, nonatomic) NSFontDescriptor *fontDescriptor; // @synthesize fontDescriptor=_fontDescriptor;
@property(retain, nonatomic) GDataXMLDocument *xmlDoc; // @synthesize xmlDoc=_xmlDoc;
@property(readonly, nonatomic) NSAttributedString *parsedString; // @synthesize parsedString=_parsedString;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (id)getNewFontNameForFont:(id)arg1 bold:(BOOL)arg2 italic:(BOOL)arg3;
- (void)checkColorWithElement:(id)arg1;
- (void)checkAlignmentWithElement:(id)arg1;
- (void)checkUnderlineWithElement:(id)arg1;
- (void)checkItalicWithElement:(id)arg1;
- (void)checkBoldWithElement:(id)arg1;
- (void)setFontSizeWithElement:(id)arg1;
- (void)checkFontNameWithElement:(id)arg1;
- (void)loadString;
- (id)getRunsAndLinks:(id)arg1;
- (void)resetHelperVars;
- (void)loadDocument;
- (id)initWithFileURL:(id)arg1;

@end

@interface ITProgressIndicator : NSView
{
    BOOL _isIndeterminate;
    BOOL _animates;
    BOOL _hideWhenStopped;
    BOOL _steppedAnimation;
    CALayer *_progressIndicatorLayer;
    double _progress;
    double _lengthOfLine;
    double _widthOfLine;
    unsigned long long _numberOfLines;
    double _innerMargin;
    double _animationDuration;
    NSColor *_color;
    CALayer *_rootLayer;
}

+ (id)defaultAnimationForKey:(id)arg1;
@property(readonly, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
@property(nonatomic) BOOL steppedAnimation; // @synthesize steppedAnimation=_steppedAnimation;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(nonatomic) double innerMargin; // @synthesize innerMargin=_innerMargin;
@property(nonatomic) unsigned long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) double widthOfLine; // @synthesize widthOfLine=_widthOfLine;
@property(nonatomic) double lengthOfLine; // @synthesize lengthOfLine=_lengthOfLine;
@property(nonatomic) BOOL hideWhenStopped; // @synthesize hideWhenStopped=_hideWhenStopped;
@property(nonatomic) BOOL animates; // @synthesize animates=_animates;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic, setter=setIndeterminate:) BOOL isIndeterminate; // @synthesize isIndeterminate=_isIndeterminate;
- (void).cxx_destruct;
@property(readonly, nonatomic) CALayer *progressIndicatorLayer; // @synthesize progressIndicatorLayer=_progressIndicatorLayer;
- (void)reloadVisibility;
- (id)keyFrameAnimationForCurrentPreferences;
- (id)progressImage;
- (void)reloadAnimation;
- (void)reloadIndicatorContent;
- (void)awakeFromNib;
- (void)initLayers;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MHWMigrationManager : NSObject
{
    id <MHWMigrationManagerDelegate> _delegate;
    NSMutableArray *_validMigratedVersions;
}

@property(retain) NSMutableArray *validMigratedVersions; // @synthesize validMigratedVersions=_validMigratedVersions;
@property(nonatomic) __weak id <MHWMigrationManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)migratedVersions;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)backupSourceStoreAtURL:(id)arg1 movingDestinationStoreAtURL:(id)arg2 error:(id *)arg3;
- (id)destinationStoreURLWithSourceStoreURL:(id)arg1 modelName:(id)arg2;
- (BOOL)getDestinationModel:(id *)arg1 mappingModel:(id *)arg2 modelName:(id *)arg3 forSourceModel:(id)arg4 error:(id *)arg5;
- (id)sourceModelForSourceMetadata:(id)arg1;
- (id)modelPaths;
- (BOOL)progressivelyMigrateURL:(id)arg1 ofType:(id)arg2 toModel:(id)arg3 error:(id *)arg4;
- (id)init;

@end

@interface GRMustacheExpressionInvocation : NSObject <GRMustacheExpressionVisitor>
{
    GRMustacheContext *_context;
    GRMustacheExpression *_expression;
    id _value;
    BOOL _valueIsProtected;
}

@property(readonly, nonatomic) BOOL valueIsProtected; // @synthesize valueIsProtected=_valueIsProtected;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(nonatomic) GRMustacheExpression *expression; // @synthesize expression=_expression;
@property(nonatomic) GRMustacheContext *context; // @synthesize context=_context;
- (BOOL)visitImplicitIteratorExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitScopedExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitIdentifierExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitFilteredExpression:(id)arg1 error:(id *)arg2;
- (BOOL)invokeReturningError:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFMainSplitViewController : NSSplitViewController <SFThemeManagerStylableObject>
{
    BOOL _isAnimating;
    NSSplitViewItem *_tagListSplitViewItem;
    NSSplitViewItem *_noteListSplitViewItem;
    NSSplitViewItem *_noteEditorSplitViewItem;
    SFNotesTableViewController *_notesTableViewController;
    SFSidebarViewController *_sidebarViewController;
}

@property BOOL isAnimating; // @synthesize isAnimating=_isAnimating;
@property SFSidebarViewController *sidebarViewController; // @synthesize sidebarViewController=_sidebarViewController;
@property SFNotesTableViewController *notesTableViewController; // @synthesize notesTableViewController=_notesTableViewController;
@property NSSplitViewItem *noteEditorSplitViewItem; // @synthesize noteEditorSplitViewItem=_noteEditorSplitViewItem;
@property NSSplitViewItem *noteListSplitViewItem; // @synthesize noteListSplitViewItem=_noteListSplitViewItem;
@property NSSplitViewItem *tagListSplitViewItem; // @synthesize tagListSplitViewItem=_tagListSplitViewItem;
- (void)scrollWheel:(id)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (void)restoreStateWithCoder:(id)arg1;
- (void)changeSplitViewLayerRedrawPoliciesForAnimation:(BOOL)arg1;
- (void)collapseSplitViewItems:(id)arg1 collapsed:(id)arg2 animated:(BOOL)arg3;
- (void)showEditorControllerOnly:(id)arg1;
- (void)showNotesAndEditorControllers:(id)arg1;
- (void)showTagsNotesAndEditorControllers:(id)arg1;
- (BOOL)isEditorVisible;
- (BOOL)isOnlyEditorVisible;
- (BOOL)isNoteListVisible;
- (BOOL)isSidebarVisible;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFInternalChangesID : NSManagedObjectID
{
}

@end

@interface _SFInternalChanges : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveItemChangeValue:(short)arg1;
- (short)primitiveItemChangeValue;
@property short itemChangeValue;
@property(readonly, nonatomic) SFInternalChangesID *objectID;

// Remaining properties
@property(retain, nonatomic) NSString *changeType; // @dynamic changeType;
@property(retain, nonatomic) NSNumber *itemChange; // @dynamic itemChange;
@property(retain, nonatomic) NSString *itemObjectID; // @dynamic itemObjectID;

@end

@interface SFInternalChangesAttributes : NSObject
{
}

+ (id)itemObjectID;
+ (id)itemChange;
+ (id)changeType;

@end

@interface DTError : NSObject
{
}

+ (void)printErrorWithCallStack:(id)arg1;
+ (void)throwBadTypeException:(id)arg1 expectedClass:(Class)arg2;
+ (void)throwRemoveOutOfBoundsException:(long long)arg1 array:(id)arg2;
+ (void)throwInsertOutOfBoundsException:(long long)arg1 array:(id)arg2;

@end

@interface SFDOCXDocument : NSObject
{
    NSURL *_docxURL;
    id <SFDOCXDocumentSourceDelegate> _metaDelegate;
    NSURL *_documentXMLURL;
    NSURL *_numberingXMLURL;
    NSURL *_relationshipsXMLURL;
    NSURL *_contentTypeXMLURL;
    NSURL *_mediaFolderURL;
    NSURL *_tmpURL;
}

@property(retain, nonatomic) NSURL *tmpURL; // @synthesize tmpURL=_tmpURL;
@property(retain, nonatomic) NSURL *mediaFolderURL; // @synthesize mediaFolderURL=_mediaFolderURL;
@property(retain, nonatomic) NSURL *contentTypeXMLURL; // @synthesize contentTypeXMLURL=_contentTypeXMLURL;
@property(retain, nonatomic) NSURL *relationshipsXMLURL; // @synthesize relationshipsXMLURL=_relationshipsXMLURL;
@property(retain, nonatomic) NSURL *numberingXMLURL; // @synthesize numberingXMLURL=_numberingXMLURL;
@property(retain, nonatomic) NSURL *documentXMLURL; // @synthesize documentXMLURL=_documentXMLURL;
@property(readonly, nonatomic) id <SFDOCXDocumentSourceDelegate> metaDelegate; // @synthesize metaDelegate=_metaDelegate;
@property(readonly, nonatomic) NSURL *docxURL; // @synthesize docxURL=_docxURL;
- (void).cxx_destruct;
- (void)saveDocumentWithURL:(id)arg1;
- (void)saveDocument;
- (id)imagesForDocxWithURLs:(id)arg1;
- (void)writeAttributedString:(id)arg1 imageURLs:(id)arg2 andDelegate:(id)arg3;
- (void)unCompressDOCXFile:(id)arg1 toURL:(id)arg2;
- (id)parser;
- (id)initWithDocxURL:(id)arg1;

@end

@interface GRMustacheTemplateParser : NSObject
{
    id <GRMustacheTemplateParserDelegate> _delegate;
    NSString *_tagStartDelimiter;
    NSString *_tagEndDelimiter;
    NSMutableSet *_pragmas;
}

@property(retain, nonatomic) NSMutableSet *pragmas; // @synthesize pragmas=_pragmas;
@property(copy, nonatomic) NSString *tagEndDelimiter; // @synthesize tagEndDelimiter=_tagEndDelimiter;
@property(copy, nonatomic) NSString *tagStartDelimiter; // @synthesize tagStartDelimiter=_tagStartDelimiter;
@property(nonatomic) id <GRMustacheTemplateParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void)failWithParseErrorAtLine:(long long)arg1 description:(id)arg2 templateID:(id)arg3;
- (BOOL)shouldContinueAfterParsingToken:(id)arg1;
- (id)parsePragma:(id)arg1;
- (id)parseTemplateName:(id)arg1 empty:(char *)arg2 error:(id *)arg3;
- (id)parseInheritableSectionName:(id)arg1 empty:(char *)arg2 error:(id *)arg3;
- (void)parseTemplateString:(id)arg1 templateID:(id)arg2;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;

@end

@interface SFSlider : NSSlider
{
    NSColor *_trackColor;
    NSColor *_knobColor;
    NSColor *_knobStrokeColor;
}

@property(retain) NSColor *knobStrokeColor; // @synthesize knobStrokeColor=_knobStrokeColor;
@property(retain) NSColor *knobColor; // @synthesize knobColor=_knobColor;
@property(retain) NSColor *trackColor; // @synthesize trackColor=_trackColor;
- (void).cxx_destruct;
- (void)loadDefaultColors;
- (id)initWithCoder:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;

@end

@interface SFSliderCell : NSSliderCell
{
}

- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawKnob:(struct CGRect)arg1;

@end

@interface SFNote : _SFNote <SFEncryptableNote, SFEditorAutoCompleteItem, SFCloudKitSyncableObject>
{
    long long searchIndex;
}

+ (id)mergeNotes:(id)arg1 withSyntax:(long long)arg2;
+ (id)watchNotesInManagedObjectContext:(id)arg1;
+ (void)deleteNotesWithUniqueIdentifiers:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteContainingFileTextRepresentation:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)notesContainingLinkToNoteTitle:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)untrashedNoteWithTitle:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)notesWithTitle:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteWithTitle:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteWithUniqueIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)notesForTags:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)notesWithUniqueIdentifiers:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)allEncryptedNotesInManagedObjectContext:(id)arg1;
+ (id)allConflictedNotesInManagedObjectContext:(id)arg1;
+ (id)allArchivedNotesInManagedObjectContext:(id)arg1;
+ (id)allTrashedNotesInManagedObjectContext:(id)arg1;
+ (id)allUntrashedNotesInManagedObjectContext:(id)arg1;
+ (id)allNotesInManagedObjectContext:(id)arg1;
+ (id)notesInManagedObjectContext:(id)arg1 withPredicate:(id)arg2;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (void)migrateManagedObjectToVersion3:(id)arg1;
+ (void)migrateManagedObjectToVersion2:(id)arg1;
+ (void)setNotesEncryptionManager:(id)arg1 forManagedObjectContext:(id)arg2;
+ (id)conflictedNotesForUniqueIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)appendHeader:(id)arg1 toNoteLink:(id)arg2;
+ (void)importRetailNotesIntoManagedObjectContext:(id)arg1;
+ (void)importWelcomeNotesIntoManagedObjectContext:(id)arg1;
+ (id)ckDesiredKeysToDownload;
+ (id)ckLocalKeyPath;
+ (id)ckDerivedKeyPathToSync;
+ (id)ckKeyPathToSyncWithDate;
+ (id)ckKeyPathToSync;
+ (void)mergeAttributesWithDateForNote:(id)arg1 remoteNote:(id)arg2;
+ (id)duplicateNotes:(id)arg1 fromLocalNotes:(id)arg2 inMoc:(id)arg3;
+ (id)updateOrCreateNotesFromCKRecords:(id)arg1 localNotes:(id)arg2 inMoc:(id)arg3;
+ (id)updateOrCreateObjectsFromCKRecords:(id)arg1 inMoc:(id)arg2 conflictedUniqueIdentifiers:(id *)arg3;
+ (id)parseLinkedNotesTitlesFromText:(id)arg1;
+ (id)removeInlineCodeFromText:(id)arg1 syntax:(long long)arg2;
+ (id)removeCodeBlocksFromText:(id)arg1 hasCodeBlocks:(char *)arg2 syntax:(long long)arg3;
+ (BOOL)parseContainSourceCodeFromText:(id)arg1 syntax:(long long)arg2;
+ (long long)parseCompletedTodoFromText:(id)arg1 syntax:(long long)arg2;
+ (long long)parseTodoFromText:(id)arg1 syntax:(long long)arg2;
+ (id)parseHashTagsFromText:(id)arg1 syntax:(long long)arg2;
+ (id)parseSubtitleFromText:(id)arg1;
+ (id)parseTitleFromText:(id)arg1;
+ (id)noteWithText:(id)arg1 syntax:(long long)arg2 inManagedObjectContext:(id)arg3;
@property(nonatomic) long long searchIndex; // @synthesize searchIndex;
- (id)filename;
- (id)activityItems;
- (id)orderedFilesWithoutImages;
- (id)orderedImages;
- (id)orderedFiles;
- (BOOL)hasAttachments;
- (void)setLinkedByNotesFromUniqueIdentifiers:(id)arg1;
- (id)linkedByNotesUniqueIdentifiers;
- (void)setLinkedNotesFromUniqueIdentifiers:(id)arg1;
- (id)linkedNotesUniqueIdentifiers;
- (void)setTagsFromStrings:(id)arg1;
- (id)tagsStrings;
- (void)unarchive;
- (BOOL)isArchived;
- (void)archive;
- (void)setArchived:(id)arg1;
- (void)prepareForDeletion;
- (void)permanentlyDelete;
- (void)restoreFromTrash;
- (BOOL)isTrashed;
- (void)trash;
- (void)setTrashed:(id)arg1;
- (BOOL)isEditable;
- (BOOL)isPinned;
- (void)unpin;
- (void)pin;
- (void)updateUniqueIdentifier;
- (id)duplicateWithSyntax:(long long)arg1;
- (void)replaceNoteWithText:(id)arg1 syntax:(long long)arg2;
- (void)appendNoteWithText:(id)arg1 syntax:(long long)arg2;
- (void)prependNoteWithText:(id)arg1 syntax:(long long)arg2;
- (unsigned long long)completedToDoPercentage;
- (BOOL)isStatic;
- (id)text;
- (id)noteInfoItems;
- (void)migrateDataToCurrentVersion;
- (id)encryptedDataVersionString;
@property(readonly, nonatomic) BOOL hasEncryptionAndIsLocked; // @dynamic hasEncryptionAndIsLocked;
- (BOOL)hasEncryption;
@property(nonatomic) __weak NSString *decryptedText; // @dynamic decryptedText;
- (BOOL)setDecryptedText:(id)arg1 error:(id *)arg2;
- (id)notesEncryptionManager;
- (id)conflictedNotes;
- (id)conflictedRootUUID;
- (id)conflictedUUIDFromRootUUID:(id)arg1;
- (void)unmarkAsConflicted;
- (void)markAsConflictedFromNote:(id)arg1;
- (BOOL)hasConflictedNotes;
- (BOOL)isConflictRoot;
- (id)openNoteXCallbackURLStringWithHeader:(id)arg1;
- (id)openNoteInNewWindowXCallbackURLString;
- (id)openNoteWithTitleXCallbackURLString;
- (id)openNoteXCallbackURLString;
- (void)mergeVectorClockWithClock:(id)arg1;
- (id)noteVectorClock;
- (void)updateNoteVectorClock;
- (id)autoCompleteItemTextRepresentation;
- (id)autoCompleteItemTitle;
- (id)autoCompleteItemIcon:(BOOL)arg1;
- (BOOL)isEqualToCKRecord:(id)arg1;
- (id)sf_modificationDate;
- (void)setSf_modificationDate:(id)arg1;
- (id)sf_creationDate;
- (void)setSf_creationDate:(id)arg1;
- (id)relatedObjectsToUpload;
- (id)updateCKRecord:(id)arg1;
- (id)ckRecordWitZoneID:(id)arg1;
- (id)ckRecord;
- (void)setCKRecord:(id)arg1;
- (void)updateLinkedNoteForText:(id)arg1;
- (void)updateLinkedByNoteForNewTitle:(id)arg1 oldTitle:(id)arg2 syntax:(long long)arg3;
- (void)updateAttributesForNewSyntax:(long long)arg1;
- (void)updateNoteWithText:(id)arg1 syntax:(long long)arg2 updateModificationDate:(BOOL)arg3;
- (void)updateNoteWithText:(id)arg1 syntax:(long long)arg2;
- (void)replaceSection:(id)arg1 withText:(id)arg2 syntax:(long long)arg3;
- (void)prependSection:(id)arg1 withText:(id)arg2 syntax:(long long)arg3;
- (void)appendSection:(id)arg1 withText:(id)arg2 syntax:(long long)arg3;
- (id)noteSections;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEditorAutoCompleteCoreController : NSObject
{
    NSString *_partialCompletionString;
    SFNotesTextStorage *_textStorage;
    NSManagedObjectContext *_managedObjectContext;
    unsigned long long _autocompleteType;
    unsigned long long _maxBackwardSearchLength;
    id <SFEditorAutoCompleteItemsProvider> _completionItemsProvider;
    SFEmojiAutoCompletionItemsProvider *_emojiAutoCompletionItemsProvider;
    struct _NSRange _fullCompletionRange;
}

@property(retain) SFEmojiAutoCompletionItemsProvider *emojiAutoCompletionItemsProvider; // @synthesize emojiAutoCompletionItemsProvider=_emojiAutoCompletionItemsProvider;
@property(retain, nonatomic) id <SFEditorAutoCompleteItemsProvider> completionItemsProvider; // @synthesize completionItemsProvider=_completionItemsProvider;
@property(nonatomic) unsigned long long maxBackwardSearchLength; // @synthesize maxBackwardSearchLength=_maxBackwardSearchLength;
@property(nonatomic) unsigned long long autocompleteType; // @synthesize autocompleteType=_autocompleteType;
@property(retain) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(retain) SFNotesTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(nonatomic) struct _NSRange fullCompletionRange; // @synthesize fullCompletionRange=_fullCompletionRange;
@property(retain) NSString *partialCompletionString; // @synthesize partialCompletionString=_partialCompletionString;
- (void).cxx_destruct;
- (struct _NSRange)backwardSearchRangeForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2 maxBackwardLength:(unsigned long long)arg3;
@property(readonly) NSArray *completionItems;
- (void)updateCompletionResults;
- (void)resetCompletion;
- (void)insertCompletionForItem:(id)arg1 inTextView:(id)arg2;
- (BOOL)indexContainsAttributesToSkip:(unsigned long long)arg1 includeHeaders:(BOOL)arg2;
- (BOOL)indexContainsAttributesToSkip:(unsigned long long)arg1;
- (id)emojiCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (id)languageCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (id)notesCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2 allowEmptyString:(BOOL)arg3;
- (id)notesCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (id)tagsCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2 allowEmptyString:(BOOL)arg3;
- (id)tagsCompleteProposalForSelectionRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (id)prioritizedProposalFromProposals:(id)arg1;
- (BOOL)canAutocompleteNoteForSelectionRange:(struct _NSRange)arg1;
- (BOOL)canAutocompleteTagForSelectionRange:(struct _NSRange)arg1;
- (BOOL)canAutoCompleteForSelectionRange:(struct _NSRange)arg1;
- (id)initWithTextStorage:(id)arg1 managedObjectContext:(id)arg2;

@end

@interface SFAutoCompleteProposal : NSObject
{
    unsigned long long _autocompleteType;
    NSString *_partialCompletionString;
    struct _NSRange _fullCompletionRange;
}

@property(nonatomic) struct _NSRange fullCompletionRange; // @synthesize fullCompletionRange=_fullCompletionRange;
@property(retain) NSString *partialCompletionString; // @synthesize partialCompletionString=_partialCompletionString;
@property(nonatomic) unsigned long long autocompleteType; // @synthesize autocompleteType=_autocompleteType;
- (void).cxx_destruct;

@end

@interface SFNotesTextAttachmentCell : NSTextAttachmentCell
{
}

- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;

@end

@interface SFMainSplitView : NSSplitView
{
    NSColor *_firstSeparatorColor;
    NSColor *_secondSeparatorColor;
    NSColor *_backgroundColor;
}

@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy) NSColor *secondSeparatorColor; // @synthesize secondSeparatorColor=_secondSeparatorColor;
@property(copy) NSColor *firstSeparatorColor; // @synthesize firstSeparatorColor=_firstSeparatorColor;
- (void).cxx_destruct;
- (void)drawDividerInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)dividerColor;
- (void)restoreStateWithCoder:(id)arg1;

@end

@interface SFNoteGenericFile : _SFNoteGenericFile <SFCloudKitSyncableObject>
{
}

+ (id)parserRegex;
+ (BOOL)canImportFileURL:(id)arg1;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (id)ckDesiredKeysToDownload;
+ (id)ckLocalKeyPath;
+ (id)ckKeyPathToSyncWithDate;
+ (id)ckKeyPathToSync;
+ (void)mergeAttributesWithDateForNoteFile:(id)arg1 ckRecord:(id)arg2;
+ (id)updateOrCreateObjectsFromCKRecords:(id)arg1 inMoc:(id)arg2 conflictedUniqueIdentifiers:(id *)arg3;
- (id)additionalFileData;
- (id)localFolderName;
- (id)textRepresentation;
- (id)sf_modificationDate;
- (void)setSf_modificationDate:(id)arg1;
- (id)sf_creationDate;
- (void)setSf_creationDate:(id)arg1;
- (id)updateCKRecord:(id)arg1;
- (id)ckRecordWitZoneID:(id)arg1;
- (id)ckRecord;
- (void)setCKRecord:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteColorStyler : SFNoteAttachmentTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerAttributeName;
- (Class)stylerTextAttachmentClass;
- (BOOL)shouldRemoveAttachment:(id)arg1 inAttributedString:(id)arg2 attachmentRange:(struct _NSRange)arg3 editedRange:(struct _NSRange *)arg4;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (struct _NSRange)offsetMatchedRange:(struct _NSRange)arg1 forMatchedString:(id)arg2;
- (id)attachmentRegularExpression;
- (BOOL)shouldCacheTextAttachment;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFProgressBarIndicator : NSView
{
    BOOL _animated;
    BOOL _useRoundedCorners;
    double _progress;
    NSColor *_trackColor;
    NSColor *_progressColor;
    CAShapeLayer *_trackLayer;
    CAShapeLayer *_progressLayer;
}

@property(retain, nonatomic) CAShapeLayer *progressLayer; // @synthesize progressLayer=_progressLayer;
@property(retain, nonatomic) CAShapeLayer *trackLayer; // @synthesize trackLayer=_trackLayer;
@property(retain, nonatomic) NSColor *progressColor; // @synthesize progressColor=_progressColor;
@property(retain, nonatomic) NSColor *trackColor; // @synthesize trackColor=_trackColor;
@property(nonatomic) BOOL useRoundedCorners; // @synthesize useRoundedCorners=_useRoundedCorners;
@property(nonatomic) BOOL animated; // @synthesize animated=_animated;
@property(nonatomic) double progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)updateProgress;
- (void)setupLayers;
- (void)setupDefaults;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFThemeEditorViewController : NSViewController <SFFontPickerDelegate>
{
    BOOL _isThemeEdited;
    NSURL *_currentlyOpenedTheme;
    id <SFThemeEditorViewControllerDelegate> _delegate;
    NSTableView *_tableView;
    NSArrayController *_themeItemsArrayController;
}

+ (id)themeEditorViewController;
@property(retain) NSArrayController *themeItemsArrayController; // @synthesize themeItemsArrayController=_themeItemsArrayController;
@property(nonatomic) BOOL isThemeEdited; // @synthesize isThemeEdited=_isThemeEdited;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property __weak id <SFThemeEditorViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)doubleClick:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)keyDidChange:(id)arg1;
- (void)numberDidChange:(id)arg1;
- (void)colorDidChange:(id)arg1;
- (void)fontPicker:(id)arg1 didPickFont:(id)arg2;
- (void)pickFont:(id)arg1;
- (void)searchFieldUpdated:(id)arg1;
- (void)addItems:(id)arg1;
- (void)deleteItems:(id)arg1;
- (void)mergeThemeKeyFromTheme:(id)arg1;
- (void)mergeKeyFromTheme:(id)arg1;
- (void)loadTheme:(id)arg1;
- (void)save:(id)arg1;
- (void)saveTheme:(id)arg1;
- (void)delete:(id)arg1;
- (void)newGroup:(id)arg1;
- (void)newNumber:(id)arg1;
- (void)newFont:(id)arg1;
- (void)newColor:(id)arg1;
- (void)saveThemeAtURL:(id)arg1;
@property(retain, nonatomic) NSURL *currentlyOpenedTheme; // @synthesize currentlyOpenedTheme=_currentlyOpenedTheme;
- (void)adjustWindowTitleForCurrentStatus;
- (void)notifyThemeLoadToDelegate;
- (void)notifyThemeChangeToDelegate;
- (void)setupDragging;
- (void)copyConstantToClipboard:(id)arg1;
- (void)convertHexToRgba:(id)arg1;
- (void)debug:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteCloudKitFileUploadOperation : NSOperation
{
    BOOL _isExecuting;
    BOOL _isFinished;
    NSManagedObjectContext *_moc;
    CKRecordZoneID *_zoneID;
    CKDatabase *_database;
    NSArray *_fileUniqueIdentifiers;
    NSMutableDictionary *_fileUniqueIdenfierDictionary;
}

@property(retain) NSMutableDictionary *fileUniqueIdenfierDictionary; // @synthesize fileUniqueIdenfierDictionary=_fileUniqueIdenfierDictionary;
@property(retain) NSArray *fileUniqueIdentifiers; // @synthesize fileUniqueIdentifiers=_fileUniqueIdentifiers;
@property __weak CKDatabase *database; // @synthesize database=_database;
@property __weak CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
@property __weak NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
- (void).cxx_destruct;
- (id)pagedArraysFromArray:(id)arg1 pageSize:(unsigned long long)arg2;
- (void)handleUploadError:(id)arg1 forRecord:(id)arg2;
- (id)getUploadFilesOperationWithRecordsToSave:(id)arg1 perRecordCompletionBlock:(CDUnknownBlockType)arg2 uploadRecordsCompletionBlock:(CDUnknownBlockType)arg3;
- (id)ckRecordsToUpload;
- (BOOL)uploadFiles;
- (void)finish;
- (void)start;
- (id)initWithFileUniqueIdentifier:(id)arg1;

@end

@interface SFUnlockPasswordPromptViewController : SFBasePasswordPromptViewController <SFThemeManagerStylableObject>
{
    BOOL _hideFormBackgroundView;
    id <SFUnlockPasswordPromptViewControllerDelegate> _unlockPasswordPromptDelegate;
    NSTextField *_titleLabel;
    SFEncryptionFormBGView *_formBackgroundView;
    SFStyleView *_passwordFieldBackgroundView;
    NSView *_placeholderView;
    NSLayoutConstraint *_bottomBackgroundLayoutConstraint;
    NSLayoutConstraint *_bottomErrorLayoutConstraint;
    NSLayoutConstraint *_verticalAlignmentFormLayoutConstraint;
}

@property(retain) NSLayoutConstraint *verticalAlignmentFormLayoutConstraint; // @synthesize verticalAlignmentFormLayoutConstraint=_verticalAlignmentFormLayoutConstraint;
@property(retain) NSLayoutConstraint *bottomErrorLayoutConstraint; // @synthesize bottomErrorLayoutConstraint=_bottomErrorLayoutConstraint;
@property(retain) NSLayoutConstraint *bottomBackgroundLayoutConstraint; // @synthesize bottomBackgroundLayoutConstraint=_bottomBackgroundLayoutConstraint;
@property(nonatomic) BOOL hideFormBackgroundView; // @synthesize hideFormBackgroundView=_hideFormBackgroundView;
@property NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property SFStyleView *passwordFieldBackgroundView; // @synthesize passwordFieldBackgroundView=_passwordFieldBackgroundView;
@property SFEncryptionFormBGView *formBackgroundView; // @synthesize formBackgroundView=_formBackgroundView;
@property NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property id <SFUnlockPasswordPromptViewControllerDelegate> unlockPasswordPromptDelegate; // @synthesize unlockPasswordPromptDelegate=_unlockPasswordPromptDelegate;
- (void).cxx_destruct;
- (void)cancelOperation:(id)arg1;
- (void)hideForm:(BOOL)arg1;
- (void)shakeWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)hideBiometryButton:(BOOL)arg1;
- (void)setBiometryType:(long long)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)setErrors:(id)arg1;
- (void)useBiometryButtonPressed:(id)arg1;
- (void)tryToUnlockNote;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFUnorderedListTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isFullLine;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (double)attachmentRightSpacing;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;

@end

@interface SFCodeSyntaxHighlighter : NSObject <SFThemeManagerStylableObject>
{
    id <SFCodeSyntaxHighlighterDelegate> _delegate;
    SFNotesTextThemeManager *_themeManager;
    double _coalescence;
    SFCHighlighter *_syntaxHighlighter;
    NSOperationQueue *_syntaxHighlightQueue;
    NSMutableDictionary *_coalescedStringsRanges;
}

+ (BOOL)isSourceCodeInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
@property(retain) NSMutableDictionary *coalescedStringsRanges; // @synthesize coalescedStringsRanges=_coalescedStringsRanges;
@property(retain) NSOperationQueue *syntaxHighlightQueue; // @synthesize syntaxHighlightQueue=_syntaxHighlightQueue;
@property(retain) SFCHighlighter *syntaxHighlighter; // @synthesize syntaxHighlighter=_syntaxHighlighter;
@property double coalescence; // @synthesize coalescence=_coalescence;
@property(retain, nonatomic) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property __weak id <SFCodeSyntaxHighlighterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (struct _NSRange)codeRangeForCodeUUID:(id)arg1 inAttributedString:(id)arg2;
- (id)highlightSyntax;
- (id)highlightSyntaxInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)setupSyntaxHighlighter;
- (void)styleObjectWithThemeManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFCodeSyntaxHighlightOperation : NSOperation
{
    BOOL _isExecuting;
    BOOL _isFinished;
    NSMutableAttributedString *_attributedString;
    NSString *_language;
    NSString *_codeUUID;
    SFCHighlighter *_syntaxHighlighter;
}

@property __weak SFCHighlighter *syntaxHighlighter; // @synthesize syntaxHighlighter=_syntaxHighlighter;
@property(copy) NSString *codeUUID; // @synthesize codeUUID=_codeUUID;
@property(retain) NSString *language; // @synthesize language=_language;
@property(retain) NSMutableAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
- (void).cxx_destruct;
- (void)start;

@end

@interface SFTodo : _SFTodo
{
}

+ (id)insertInManagedObjectContext:(id)arg1;

@end

@interface SFNoteHeaderEditorViewController : NSViewController <SFThemeManagerStylableObject>
{
    BOOL _copyLinkDisabled;
    SFNoteEditorViewController *_noteEditorViewController;
    NSTableView *_headersTableView;
    NSString *_headerLink;
    NSString *_headerText;
    NSString *_noteUUID;
    NSString *_noteTitle;
    NSFont *_itemTextFont;
    NSColor *_itemTextColor;
    NSColor *_itemMarkerColor;
    NSArray *_items;
    NSPopover *_popOver;
}

@property __weak NSPopover *popOver; // @synthesize popOver=_popOver;
@property(retain) NSArray *items; // @synthesize items=_items;
@property(retain) NSColor *itemMarkerColor; // @synthesize itemMarkerColor=_itemMarkerColor;
@property(retain) NSColor *itemTextColor; // @synthesize itemTextColor=_itemTextColor;
@property(retain) NSFont *itemTextFont; // @synthesize itemTextFont=_itemTextFont;
@property BOOL copyLinkDisabled; // @synthesize copyLinkDisabled=_copyLinkDisabled;
@property(retain) NSString *noteTitle; // @synthesize noteTitle=_noteTitle;
@property(retain) NSString *noteUUID; // @synthesize noteUUID=_noteUUID;
@property(retain) NSString *headerText; // @synthesize headerText=_headerText;
@property(retain) NSString *headerLink; // @synthesize headerLink=_headerLink;
@property __weak NSTableView *headersTableView; // @synthesize headersTableView=_headersTableView;
@property __weak SFNoteEditorViewController *noteEditorViewController; // @synthesize noteEditorViewController=_noteEditorViewController;
- (void).cxx_destruct;
- (id)copyLinkItem;
- (id)noHeadingStyleItem;
- (id)separatorStyleItem;
- (id)h3StyleItem;
- (id)h2StyleItem;
- (id)h1StyleItem;
- (void)copyLinkToHeader:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)updateHeadersTable;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)popoverWillShow:(id)arg1;
- (void)viewDidDisappear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFThumbFileManager : NSObject
{
    NSURL *_baseURL;
    NSMutableDictionary *_utiCache;
}

+ (id)thumbFileManagerForPathComponent:(id)arg1;
@property(retain) NSMutableDictionary *utiCache; // @synthesize utiCache=_utiCache;
@property(retain) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)applicationSupportURL;
- (id)folderURLForPathComponent:(id)arg1;
- (id)thumbExtensionForImageExtension:(id)arg1;
- (struct __CFString *)UTIFromExtension:(id)arg1;
- (id)stringFromOptions:(id)arg1;
- (id)defaultThumbOptions;
- (void)deleteAllThumbsForImageURL:(id)arg1;
- (void)thumbForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 preload:(BOOL)arg3 options:(id)arg4 success:(CDUnknownBlockType)arg5;
- (id)makeThumbForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 options:(id)arg3;
- (void)makeThumbForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 options:(id)arg3 success:(CDUnknownBlockType)arg4;
- (void)makeThumbForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 success:(CDUnknownBlockType)arg3;
- (id)thumbURLForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 options:(id)arg3;
- (id)thumbURLForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2;
- (id)thumbNameForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2 options:(id)arg3;
- (id)thumbNameForImageURL:(id)arg1 thumbSize:(struct CGSize)arg2;
- (id)baseThumbNameImageURL:(id)arg1;
- (id)initWithPathComponent:(id)arg1;
- (id)initWithBaseURL:(id)arg1;

@end

@interface SFDeviceUUID : NSObject
{
}

+ (id)deviceName;
+ (id)deviceUUID;

@end

@interface GRMustacheImplicitIteratorExpression : GRMustacheExpression
{
}

+ (id)expression;
+ (void)initialize;
- (BOOL)acceptVisitor:(id)arg1 error:(id *)arg2;
- (BOOL)isEqual:(id)arg1;

@end

@interface SFUnitTestUtils : NSObject
{
}

+ (BOOL)areWeBeingUnitTested;

@end

@interface SFLinkedNoteTextAttachment : SFNotesTextAttachment
{
    NSString *_fullRepresentedText;
}

+ (BOOL)isInline;
@property(retain) NSString *fullRepresentedText; // @synthesize fullRepresentedText=_fullRepresentedText;
- (void).cxx_destruct;
- (void)drawNoteLinkForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (double)attachmentLeftSpacing;
- (double)attachmentRightSpacing;
- (double)attachmentBaselineOffset;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;

@end

@interface SFApplicationLockViewController : NSViewController
{
    BOOL _mainLock;
    NSImageView *_placeholderImageView;
    NSButton *_unlockButton;
    NSTextField *_unlockLabel;
}

@property BOOL mainLock; // @synthesize mainLock=_mainLock;
@property NSTextField *unlockLabel; // @synthesize unlockLabel=_unlockLabel;
@property NSButton *unlockButton; // @synthesize unlockButton=_unlockButton;
@property NSImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)viewDidLoad;

@end

@interface SFPasswordID : NSManagedObjectID
{
}

@end

@interface _SFPassword : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)notesSet;
- (void)setPrimitiveEncryptionVersionValue:(short)arg1;
- (short)primitiveEncryptionVersionValue;
@property short encryptionVersionValue;
- (void)setPrimitiveBiometryValue:(BOOL)arg1;
- (BOOL)primitiveBiometryValue;
@property BOOL biometryValue;
@property(readonly, nonatomic) SFPasswordID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *biometry; // @dynamic biometry;
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSString *creationDevice; // @dynamic creationDevice;
@property(retain, nonatomic) NSData *encryptedData; // @dynamic encryptedData;
@property(retain, nonatomic) NSNumber *encryptionVersion; // @dynamic encryptionVersion;
@property(retain, nonatomic) NSData *hint; // @dynamic hint;
@property(retain, nonatomic) NSSet *notes; // @dynamic notes;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;

@end

@interface SFPasswordAttributes : NSObject
{
}

+ (id)uniqueIdentifier;
+ (id)hint;
+ (id)encryptionVersion;
+ (id)encryptedData;
+ (id)creationDevice;
+ (id)creationDate;
+ (id)biometry;

@end

@interface SFPasswordRelationships : NSObject
{
}

+ (id)notes;

@end

@interface SFDateHelper : NSObject
{
}

+ (id)shortDateFromString:(id)arg1;
+ (id)noSeparatorsDateformatter;
+ (id)ISO8061DateOnlyFormatter;
+ (id)ISO8061DateFormatter;
+ (id)currentISO8601DateWithFormat:(long long)arg1;
+ (id)currentDateWithFormat:(long long)arg1;

@end

@interface GRMustacheFilteredExpression : GRMustacheExpression
{
    GRMustacheExpression *_filterExpression;
    GRMustacheExpression *_argumentExpression;
    BOOL _curried;
}

+ (id)expressionWithFilterExpression:(id)arg1 argumentExpression:(id)arg2 curried:(BOOL)arg3;
@property(readonly, nonatomic, getter=isCurried) BOOL curried; // @synthesize curried=_curried;
@property(readonly, retain, nonatomic) GRMustacheExpression *argumentExpression; // @synthesize argumentExpression=_argumentExpression;
@property(readonly, retain, nonatomic) GRMustacheExpression *filterExpression; // @synthesize filterExpression=_filterExpression;
- (id)initWithFilterExpression:(id)arg1 argumentExpression:(id)arg2 curried:(BOOL)arg3;
- (BOOL)acceptVisitor:(id)arg1 error:(id *)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setToken:(id)arg1;
- (void)dealloc;

@end

@interface SFTXTNoteExporter : NSObject <SFNoteExporter>
{
    BOOL _exportTags;
    long long _syntax;
    NSDictionary *_fileDictionary;
}

@property(retain) NSDictionary *fileDictionary; // @synthesize fileDictionary=_fileDictionary;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
- (void).cxx_destruct;
- (id)exportNoteText:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property __weak NSManagedObjectContext *managedObjectContext;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface CDEvents : NSObject <NSCopying>
{
    CDUnknownBlockType _eventBlock;
    struct __FSEventStream *_eventStream;
    unsigned int _eventStreamCreationFlags;
    BOOL _ignoreEventsFromSubDirectories;
    id <CDEventsDelegate> _delegate;
    double _notificationLatency;
    unsigned long long _sinceEventIdentifier;
    CDEvent *_lastEvent;
    NSArray *_watchedURLs;
    NSArray *_excludedURLs;
}

+ (unsigned long long)currentEventIdentifier;
@property(copy) NSArray *excludedURLs; // @synthesize excludedURLs=_excludedURLs;
@property(copy) NSArray *watchedURLs; // @synthesize watchedURLs=_watchedURLs;
@property(retain) CDEvent *lastEvent; // @synthesize lastEvent=_lastEvent;
@property BOOL ignoreEventsFromSubDirectories; // @synthesize ignoreEventsFromSubDirectories=_ignoreEventsFromSubDirectories;
@property(readonly) unsigned long long sinceEventIdentifier; // @synthesize sinceEventIdentifier=_sinceEventIdentifier;
@property(readonly) double notificationLatency; // @synthesize notificationLatency=_notificationLatency;
@property id <CDEventsDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)disposeEventStream;
- (void)createEventStream;
- (id)streamDescription;
- (id)description;
- (void)flushAsynchronously;
- (void)flushSynchronously;
@property(readonly) CDUnknownBlockType eventBlock;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURLs:(id)arg1 block:(CDUnknownBlockType)arg2 onRunLoop:(id)arg3 sinceEventIdentifier:(unsigned long long)arg4 notificationLantency:(double)arg5 ignoreEventsFromSubDirs:(BOOL)arg6 excludeURLs:(id)arg7 streamCreationFlags:(unsigned int)arg8;
- (id)initWithURLs:(id)arg1 block:(CDUnknownBlockType)arg2 onRunLoop:(id)arg3;
- (id)initWithURLs:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithURLs:(id)arg1 delegate:(id)arg2 onRunLoop:(id)arg3 sinceEventIdentifier:(unsigned long long)arg4 notificationLantency:(double)arg5 ignoreEventsFromSubDirs:(BOOL)arg6 excludeURLs:(id)arg7 streamCreationFlags:(unsigned int)arg8;
- (id)initWithURLs:(id)arg1 delegate:(id)arg2 onRunLoop:(id)arg3;
- (id)initWithURLs:(id)arg1 delegate:(id)arg2;
- (void)dealloc;

@end

@interface SFPurchaseViewController : NSViewController <SFThemeManagerStylableObject>
{
    SFNotesIAPPurchases *_iapPurchases;
    id <SFPaymentDelegate> _paymentDelegate;
    SFStyleView *_backgroundView;
    SFStyleView *_firstSeparator;
    NSImageView *_headerImageView;
    NSScrollView *_contentScrollView;
    SFPushButton *_monthlyPurchaseButton;
    SFPushButton *_yearlyPurchaseButton;
    SFProgressIndicator *_monthlyProgressIndicator;
    SFProgressIndicator *_yearlyProgressIndicator;
    SFProgressIndicator *_restoreProgressIndicator;
    NSColor *_headerLabelColor;
    NSColor *_textLabelColor;
    NSImageView *_syncIconImageView;
    NSImageView *_themeIconImageView;
    NSImageView *_exportIconImageView;
    NSButton *_monthlyInfoButton;
    NSButton *_yearlyInfoButton;
    NSButton *_termOfServiceButton;
    NSButton *_privacyButton;
    NSTextField *_monthlyPurchaseTextField;
    NSTextField *_yearlyPurchaseTextField;
    NSTextField *_iAPInformation;
    SFIAPReceiptValidation *_appReceiptValidation;
}

@property(retain) SFIAPReceiptValidation *appReceiptValidation; // @synthesize appReceiptValidation=_appReceiptValidation;
@property __weak NSTextField *iAPInformation; // @synthesize iAPInformation=_iAPInformation;
@property __weak NSTextField *yearlyPurchaseTextField; // @synthesize yearlyPurchaseTextField=_yearlyPurchaseTextField;
@property __weak NSTextField *monthlyPurchaseTextField; // @synthesize monthlyPurchaseTextField=_monthlyPurchaseTextField;
@property __weak NSButton *privacyButton; // @synthesize privacyButton=_privacyButton;
@property __weak NSButton *termOfServiceButton; // @synthesize termOfServiceButton=_termOfServiceButton;
@property __weak NSButton *yearlyInfoButton; // @synthesize yearlyInfoButton=_yearlyInfoButton;
@property __weak NSButton *monthlyInfoButton; // @synthesize monthlyInfoButton=_monthlyInfoButton;
@property __weak NSImageView *exportIconImageView; // @synthesize exportIconImageView=_exportIconImageView;
@property __weak NSImageView *themeIconImageView; // @synthesize themeIconImageView=_themeIconImageView;
@property __weak NSImageView *syncIconImageView; // @synthesize syncIconImageView=_syncIconImageView;
@property NSColor *textLabelColor; // @synthesize textLabelColor=_textLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
@property __weak SFProgressIndicator *restoreProgressIndicator; // @synthesize restoreProgressIndicator=_restoreProgressIndicator;
@property __weak SFProgressIndicator *yearlyProgressIndicator; // @synthesize yearlyProgressIndicator=_yearlyProgressIndicator;
@property __weak SFProgressIndicator *monthlyProgressIndicator; // @synthesize monthlyProgressIndicator=_monthlyProgressIndicator;
@property __weak SFPushButton *yearlyPurchaseButton; // @synthesize yearlyPurchaseButton=_yearlyPurchaseButton;
@property __weak SFPushButton *monthlyPurchaseButton; // @synthesize monthlyPurchaseButton=_monthlyPurchaseButton;
@property __weak NSScrollView *contentScrollView; // @synthesize contentScrollView=_contentScrollView;
@property __weak NSImageView *headerImageView; // @synthesize headerImageView=_headerImageView;
@property __weak SFStyleView *firstSeparator; // @synthesize firstSeparator=_firstSeparator;
@property __weak SFStyleView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property __weak id <SFPaymentDelegate> paymentDelegate; // @synthesize paymentDelegate=_paymentDelegate;
@property __weak SFNotesIAPPurchases *iapPurchases; // @synthesize iapPurchases=_iapPurchases;
- (void).cxx_destruct;
- (void)setAutoRenewingSubscriptionInformationLabel;
- (id)styledAttributedSubscriptionInformationFromString:(id)arg1 titleStrings:(id)arg2 highlightStrings:(id)arg3;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)showPrivacyPolicy:(id)arg1;
- (void)showTermOfService:(id)arg1;
- (void)restoreSubscriptions:(id)arg1;
- (void)purchaseOneYearSubscription:(id)arg1;
- (void)purchaseOneMonthSubscription:(id)arg1;
- (void)validateICloudAccountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFManagedObjectObserver : NSObject
{
    NSManagedObject *_observedObject;
    NSMutableDictionary *_oldKeyPathsValues;
    CDUnknownBlockType _completionBlock;
}

@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain) NSMutableDictionary *oldKeyPathsValues; // @synthesize oldKeyPathsValues=_oldKeyPathsValues;
@property __weak NSManagedObject *observedObject; // @synthesize observedObject=_observedObject;
- (void).cxx_destruct;
- (void)managedObjectContextObjectsDidChange:(id)arg1;
- (void)observeManagedObject:(id)arg1 forKeyPaths:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)stopObserving;
- (void)dealloc;

@end

@interface SFNoteTextView : NSTextView <SFThemeManagerStylableObject, NSTextStorageDelegate, NSTextFinderClient>
{
    BOOL _insertingNewLine;
    BOOL _isSingleLineDragging;
    SFNotesTextStorage *_notesTextStorage;
    SFNoteTextKitStack *_noteTextKitStack;
    id <SFNoteTextViewTextChangeDelegate> _textChangeDelegate;
    NSAttributedString *_customPasteboardAttributedString;
    double _overscrollY;
    unsigned long long _endOfDragGlyphIndex;
    unsigned long long _lineInsertionIndexForLastDrag;
    struct _NSRange _initialInternalDraggingRange;
    struct CGRect _lineInsertionPointRect;
}

@property(nonatomic) unsigned long long lineInsertionIndexForLastDrag; // @synthesize lineInsertionIndexForLastDrag=_lineInsertionIndexForLastDrag;
@property(nonatomic) struct CGRect lineInsertionPointRect; // @synthesize lineInsertionPointRect=_lineInsertionPointRect;
@property(nonatomic) unsigned long long endOfDragGlyphIndex; // @synthesize endOfDragGlyphIndex=_endOfDragGlyphIndex;
@property(nonatomic) struct _NSRange initialInternalDraggingRange; // @synthesize initialInternalDraggingRange=_initialInternalDraggingRange;
@property(nonatomic) BOOL isSingleLineDragging; // @synthesize isSingleLineDragging=_isSingleLineDragging;
@property(nonatomic) BOOL insertingNewLine; // @synthesize insertingNewLine=_insertingNewLine;
@property(nonatomic) double overscrollY; // @synthesize overscrollY=_overscrollY;
@property(retain, nonatomic) NSAttributedString *customPasteboardAttributedString; // @synthesize customPasteboardAttributedString=_customPasteboardAttributedString;
@property(nonatomic) __weak id <SFNoteTextViewTextChangeDelegate> textChangeDelegate; // @synthesize textChangeDelegate=_textChangeDelegate;
@property(retain) SFNoteTextKitStack *noteTextKitStack; // @synthesize noteTextKitStack=_noteTextKitStack;
@property(retain) SFNotesTextStorage *notesTextStorage; // @synthesize notesTextStorage=_notesTextStorage;
- (void).cxx_destruct;
- (id)menuForEvent:(id)arg1;
- (void)handleTextCheckingResults:(id)arg1 forRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 orthography:(id)arg5 wordCount:(long long)arg6;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)setSpellingState:(long long)arg1 range:(struct _NSRange)arg2;
- (void)resetTextFinder;
- (void)keyDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (struct CGRect)lineInsertionPointRectAtPoint:(struct CGPoint)arg1 width:(double)arg2;
- (double)lineInsertionPointCapDiameter;
- (BOOL)shouldLineInsertForPasteboard:(id)arg1;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)drawLineInsertionPointInRect:(struct CGRect)arg1;
- (void)drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2 turnedOn:(BOOL)arg3;
- (void)_drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)pasteboardContainsValidFilesPromises:(id)arg1;
- (BOOL)pasteboardContainsValidFiles:(id)arg1;
- (id)pasteboardValidFileURLs:(id)arg1;
- (BOOL)insertFilesWithURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)insertFilesWithURLs:(id)arg1;
- (BOOL)readFilesFromPasteboard:(id)arg1;
- (id)plainTextNote;
- (id)readablePasteboardTypes;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)readFromContinuityPasteboard:(id)arg1 type:(id)arg2;
- (struct CGPoint)textContainerOrigin;
- (struct _NSRange)insertAttributedTextOnSingleLine:(id)arg1 replacementRange:(struct _NSRange)arg2 initialRange:(struct _NSRange)arg3;
- (void)insertAttributedTextWithSpaceBeforeAndAfter:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (BOOL)selectionInsideBlock;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)setString:(id)arg1;
- (void)removeAllObservers;
- (void)didUndoOrRedo:(id)arg1;
- (void)willUndoOrRedo:(id)arg1;
- (void)setupSpellCheckers;
- (void)setupUndoObserver;
- (void)setupNoteTextKitStack;
- (void)setupDefaultStyle;
- (id)typingAttributes;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)dealloc;
- (void)restoreStateWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) unsigned long long hash;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) Class superclass;
@property(readonly, copy) NSArray *visibleCharacterRanges;

@end

@interface SFNoteInlineArrowStyler : SFNoteAttachmentTextStyler
{
}

+ (id)arrowInlineEndPattern;
+ (id)arrrowInlineBeginPattern;
+ (id)stylerRegularExpression;
- (Class)stylerTextAttachmentClass;
- (id)attachmentRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFChangeItem : _SFChangeItem
{
}

@end

@interface SFNoteStylersManager : NSObject
{
    long long _syntax;
    id <SFNoteTextAttachmentConfigurator> _textAttachmentConfigurator;
    id <SFCodeSyntaxHighlighterDelegate> _syntaxHighlighterDelegate;
    SFNotesTextThemeManager *_themeManager;
    NSMutableArray *_textStylers;
    NSMutableArray *_multilineTextStylers;
}

+ (id)stringHumanizeStylersForTextAnalysis;
+ (id)stringHumanizeStylers;
+ (void)preloadRegexes;
+ (id)imageStylerForSyntax:(long long)arg1;
+ (id)genericFileStylerForSyntax:(long long)arg1;
+ (id)highlighterStyleForSyntax:(long long)arg1;
+ (id)headerStylerForSyntax:(long long)arg1;
+ (id)titledURLStylerForSyntax:(long long)arg1;
+ (id)codeInlineStylerForSyntax:(long long)arg1;
+ (id)codeBlockStylerForSyntax:(long long)arg1;
+ (id)colorStylerForSyntax:(long long)arg1;
+ (id)tagStylerForSyntax:(long long)arg1;
+ (id)checkboxStylerForSyntax:(long long)arg1;
@property(retain) NSMutableArray *multilineTextStylers; // @synthesize multilineTextStylers=_multilineTextStylers;
@property(retain) NSMutableArray *textStylers; // @synthesize textStylers=_textStylers;
@property(retain, nonatomic) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property(nonatomic) __weak id <SFCodeSyntaxHighlighterDelegate> syntaxHighlighterDelegate; // @synthesize syntaxHighlighterDelegate=_syntaxHighlighterDelegate;
@property(nonatomic) __weak id <SFNoteTextAttachmentConfigurator> textAttachmentConfigurator; // @synthesize textAttachmentConfigurator=_textAttachmentConfigurator;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
- (void).cxx_destruct;
- (id)orderedListStyler;
- (id)quoteStyler;
- (id)checkboxStyler;
- (id)unorderedListStyler;
- (id)lineSeparatorStyler;
- (id)urlStyler;
- (id)mdImageStyler;
- (id)markerStyler;
- (id)wikiStyler;
- (id)underlineStyler;
- (id)strikedStyler;
- (id)italicStyler;
- (id)boldStyler;
- (id)imageStyler;
- (id)genericFileStyler;
- (id)tagStyler;
- (id)addressStyler;
- (id)colorStyler;
- (id)inlineArrowStyler;
- (id)invalidCharactersStyler;
- (id)titledURLStyler;
- (id)linkedNoteStyler;
- (id)headerTextStyler;
- (id)codeHighlighterStyler;
- (id)codeInlineStyler;
- (id)codeBlockStyler;
- (id)normalTextStyler;
- (id)endOfSentenceStylers;
- (id)tabbableStylers;
- (id)repeatableStylers;
- (id)fullLineStylers;
- (id)doublePassStylersForStyler:(id)arg1;
- (id)stylerForClass:(Class)arg1;
- (id)defaultStylers;
- (void)updateSyntaxHihglighterTheme:(id)arg1;
- (void)setupSyntaxHighlighterDelegate;
- (void)setupTextAttachmentConfigurator;
- (void)setupThemeManager;
- (void)setupStylers;
- (id)initWithSyntax:(long long)arg1;
- (id)init;

@end

@interface SFNoteSyncNotifier : NSObject
{
    BOOL _longSync;
    unsigned long long _syncSessionCounter;
    NSTimer *_longSyncTimer;
}

@property(retain) NSTimer *longSyncTimer; // @synthesize longSyncTimer=_longSyncTimer;
@property(nonatomic) unsigned long long syncSessionCounter; // @synthesize syncSessionCounter=_syncSessionCounter;
@property(nonatomic, getter=isLongSync) BOOL longSync; // @synthesize longSync=_longSync;
- (void).cxx_destruct;
- (void)longSyncTimerFired:(id)arg1;
- (void)stopLongSyncTimer;
- (void)startLongSyncTimer;
- (void)endSyncSession;
- (void)beginSyncSession;
- (void)markAsLongSync;

@end

@interface SFNoteStrikedTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteGenericFileID : SFNoteFileID
{
}

@end

@interface _SFNoteGenericFile : SFNoteFile
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) SFNoteGenericFileID *objectID;

@end

@interface GRMustacheURLEscapeFilter : NSObject <GRMustacheFilter, GRMustacheRendering, GRMustacheTagDelegate>
{
}

- (id)escape:(id)arg1;
- (id)mustacheTag:(id)arg1 willRenderObject:(id)arg2;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL mustacheBoolValue;
@property(readonly) Class superclass;

@end

@interface SFNoteTodoPercentageView : NSView
{
    unsigned long long _completedPercentage;
}

@property(nonatomic) unsigned long long completedPercentage; // @synthesize completedPercentage=_completedPercentage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SFLocation : _SFLocation
{
}

@end

@interface SFBearParagraph : NSObject
{
    BOOL _isNewLine;
    BOOL _isNewParagraph;
    BOOL _isPreActive;
    BOOL _isQuoteActive;
    NSArray *_blocks;
    NSString *_linePrefix;
}

+ (id)balanceBlocks:(id)arg1;
+ (id)newParagraphWithBlocks:(id)arg1 quoteActive:(BOOL)arg2 preActive:(BOOL)arg3 linePrefix:(id)arg4;
+ (id)newLineWithBlocks:(id)arg1 quoteActive:(BOOL)arg2 preActive:(BOOL)arg3 linePrefix:(id)arg4;
@property(retain) NSString *linePrefix; // @synthesize linePrefix=_linePrefix;
@property BOOL isQuoteActive; // @synthesize isQuoteActive=_isQuoteActive;
@property BOOL isPreActive; // @synthesize isPreActive=_isPreActive;
@property BOOL isNewParagraph; // @synthesize isNewParagraph=_isNewParagraph;
@property BOOL isNewLine; // @synthesize isNewLine=_isNewLine;
@property(retain) NSArray *blocks; // @synthesize blocks=_blocks;
- (void).cxx_destruct;

@end

@interface SFNoteInfoExportViewController : NSViewController <SFThemeManagerStylableObject, SFClickableDraggableViewDraggingDataProvider, SFSwipeableViewDelegate>
{
    NSView *_exportItemContentView;
    NSButton *_firstPageButton;
    NSButton *_secondPageButton;
    SFClickableDraggableView *_pdfExportButton;
    SFClickableDraggableView *_htmlExportButton;
    SFClickableDraggableView *_mdExportButton;
    SFClickableDraggableView *_jpgExportButton;
    SFClickableDraggableView *_txtExportButton;
    SFClickableDraggableView *_docxExportButton;
    SFClickableDraggableView *_rtfExportButton;
    long long _currentPage;
}

@property(nonatomic) long long currentPage; // @synthesize currentPage=_currentPage;
@property __weak SFClickableDraggableView *rtfExportButton; // @synthesize rtfExportButton=_rtfExportButton;
@property __weak SFClickableDraggableView *docxExportButton; // @synthesize docxExportButton=_docxExportButton;
@property __weak SFClickableDraggableView *txtExportButton; // @synthesize txtExportButton=_txtExportButton;
@property __weak SFClickableDraggableView *jpgExportButton; // @synthesize jpgExportButton=_jpgExportButton;
@property __weak SFClickableDraggableView *mdExportButton; // @synthesize mdExportButton=_mdExportButton;
@property __weak SFClickableDraggableView *htmlExportButton; // @synthesize htmlExportButton=_htmlExportButton;
@property __weak SFClickableDraggableView *pdfExportButton; // @synthesize pdfExportButton=_pdfExportButton;
@property __weak NSButton *secondPageButton; // @synthesize secondPageButton=_secondPageButton;
@property __weak NSButton *firstPageButton; // @synthesize firstPageButton=_firstPageButton;
@property __weak NSView *exportItemContentView; // @synthesize exportItemContentView=_exportItemContentView;
- (void).cxx_destruct;
- (void)swipeEndedOnView:(id)arg1 withDeltaX:(float)arg2 andDeltaY:(float)arg3;
- (void)swipeInProgressOnView:(id)arg1 withDeltaX:(float)arg2 andDeltaY:(float)arg3;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)pan:(id)arg1;
- (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3 forClickableDraggableView:(id)arg4;
- (id)pasteboardDraggingTypesForClickableDraggableView:(id)arg1;
- (void)exportNotesAsRTF:(id)arg1;
- (void)exportNotesAsJPG:(id)arg1;
- (void)exportNotesAsDOCX:(id)arg1;
- (void)exportNotesAsMD:(id)arg1;
- (void)exportNotesAsHTML:(id)arg1;
- (void)exportNotesAsPDF:(id)arg1;
- (void)exportNotesAsTXT:(id)arg1;
- (id)exportCoreController;
- (BOOL)shouldProcedExport;
- (void)showSecondsExportItems:(id)arg1;
- (void)showFirstsExportItems:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)viewDidDisappear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteSearchSortManager : NSObject
{
}

+ (id)sortDescriptorsForNotes:(id)arg1 searchString:(id)arg2;

@end

@interface SFServerMetadata : _SFServerMetadata
{
}

+ (void)resetServerMetadataInManagedObjectContext:(id)arg1;
+ (void)resetServerChangeTokenInManagedObjectContext:(id)arg1;
+ (id)serverMetadataInManagedObjectContext:(id)arg1;
@property(retain, nonatomic) CKServerChangeToken *serverChangeToken;
@property(retain, nonatomic) CKRecordZoneID *noteZoneID;

@end

@interface SFNoteInfoPinItem : NSObject <SFNoteInfoItem>
{
    BOOL _shouldPin;
    NSArray *_notes;
    NSString *_actionItemTitle;
    NSImage *_actionItemImage;
    NSImage *_actionItemImageActive;
}

@property(nonatomic) BOOL shouldPin; // @synthesize shouldPin=_shouldPin;
@property(retain) NSImage *actionItemImageActive; // @synthesize actionItemImageActive=_actionItemImageActive;
@property(retain) NSImage *actionItemImage; // @synthesize actionItemImage=_actionItemImage;
@property(retain) NSString *actionItemTitle; // @synthesize actionItemTitle=_actionItemTitle;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (void)actionItemClicked:(id)arg1;
- (void)checkPinnedStatus;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GDataXMLNode : NSObject <NSCopying>
{
    struct _xmlNode *xmlNode_;
    BOOL shouldFreeXMLNode_;
    NSString *cachedName_;
    NSArray *cachedChildren_;
    NSArray *cachedAttributes_;
}

+ (id)prefixForName:(id)arg1;
+ (id)localNameForName:(id)arg1;
+ (id)nodeBorrowingXMLNode:(struct _xmlNode *)arg1;
+ (id)nodeConsumingXMLNode:(struct _xmlNode *)arg1;
+ (id)namespaceWithName:(id)arg1 stringValue:(id)arg2;
+ (id)textWithStringValue:(id)arg1;
+ (id)attributeWithName:(id)arg1 URI:(id)arg2 stringValue:(id)arg3;
+ (id)attributeWithName:(id)arg1 stringValue:(id)arg2;
+ (id)elementWithName:(id)arg1 URI:(id)arg2;
+ (id)elementWithName:(id)arg1 stringValue:(id)arg2;
+ (id)elementWithName:(id)arg1;
+ (void)load;
- (void).cxx_destruct;
- (void)setShouldFreeXMLNode:(BOOL)arg1;
- (BOOL)shouldFreeXMLNode;
- (struct _xmlNode *)XMLNode;
- (struct _xmlNode *)XMLNodeCopy;
- (id)methodSignatureForSelector:(SEL)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)nodesForXPath:(id)arg1 namespaces:(id)arg2 error:(id *)arg3;
- (id)nodesForXPath:(id)arg1 error:(id *)arg2;
- (unsigned long long)kind;
- (id)childAtIndex:(unsigned int)arg1;
- (id)children;
- (unsigned long long)childCount;
- (id)name;
- (id)qualifiedName;
- (id)URI;
- (id)prefix;
- (id)localName;
- (id)XMLString;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (void)dealloc;
- (id)stringFromXMLString:(const char *)arg1;
- (void)releaseCachedValues;
- (id)initBorrowingXMLNode:(struct _xmlNode *)arg1;
- (id)initConsumingXMLNode:(struct _xmlNode *)arg1;

@end

@interface GDataXMLElement : GDataXMLNode
{
}

+ (void)fixUpNamespacesForNode:(struct _xmlNode *)arg1 graftingToTreeNode:(struct _xmlNode *)arg2;
+ (void)fixUpNamespacesForNode:(struct _xmlNode *)arg1 graftingToTreeNode:(struct _xmlNode *)arg2 namespaceSubstitutionMap:(id)arg3;
+ (void)fixDuplicateNamespacesForNode:(struct _xmlNode *)arg1 graftingToTreeNode:(struct _xmlNode *)arg2 namespaceSubstitutionMap:(id)arg3;
+ (void)fixQualifiedNamesForNode:(struct _xmlNode *)arg1 graftingToTreeNode:(struct _xmlNode *)arg2;
+ (void)deleteNamespacePtr:(struct _xmlNs *)arg1 fromXMLNode:(struct _xmlNode *)arg2;
- (id)resolvePrefixForNamespaceURI:(id)arg1;
- (id)attributeForLocalName:(id)arg1 URI:(id)arg2;
- (id)attributeForName:(id)arg1;
- (id)attributeForXMLNode:(struct _xmlAttr *)arg1;
- (void)addAttribute:(id)arg1;
- (id)attributes;
- (id)elementsForLocalName:(id)arg1 URI:(id)arg2;
- (id)elementsForName:(id)arg1;
- (void)removeChild:(id)arg1;
- (void)addChild:(id)arg1;
- (void)addNamespace:(id)arg1;
- (void)setNamespaces:(id)arg1;
- (id)namespaces;
- (id)initWithXMLString:(id)arg1 error:(id *)arg2;

@end

@interface GDataXMLDocument : NSObject
{
    struct _xmlDoc *xmlDoc_;
}

- (id)nodesForXPath:(id)arg1 namespaces:(id)arg2 error:(id *)arg3;
- (id)nodesForXPath:(id)arg1 error:(id *)arg2;
- (void)setCharacterEncoding:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)XMLData;
- (id)rootElement;
- (void)dealloc;
- (id)description;
- (void)addStringsCacheToDoc;
- (id)initWithRootElement:(id)arg1;
- (id)initWithData:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithXMLString:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;

@end

@interface SFNoteImageMarkdownStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)titleRegularExpression;
+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarkerComponents;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)titleRegularExpression;
- (id)stylerRegularExpression;
- (Class)stylerTextAttachmentClass;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)getUrl:(id *)arg1 title:(id *)arg2 andAlt:(id *)arg3 fromAttributedString:(id)arg4 inRange:(struct _NSRange)arg5;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFRTFNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)exportNoteText:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFLocationID : NSManagedObjectID
{
}

@end

@interface _SFLocation : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveVerticalAccuracyValue:(double)arg1;
- (double)primitiveVerticalAccuracyValue;
@property double verticalAccuracyValue;
- (void)setPrimitiveSpeedValue:(double)arg1;
- (double)primitiveSpeedValue;
@property double speedValue;
- (void)setPrimitiveLongitudeValue:(double)arg1;
- (double)primitiveLongitudeValue;
@property double longitudeValue;
- (void)setPrimitiveLatitudeValue:(double)arg1;
- (double)primitiveLatitudeValue;
@property double latitudeValue;
- (void)setPrimitiveHorizontalAccuracyValue:(double)arg1;
- (double)primitiveHorizontalAccuracyValue;
@property double horizontalAccuracyValue;
- (void)setPrimitiveCourseValue:(double)arg1;
- (double)primitiveCourseValue;
@property double courseValue;
- (void)setPrimitiveAltitudeValue:(double)arg1;
- (double)primitiveAltitudeValue;
@property double altitudeValue;
@property(readonly, nonatomic) SFLocationID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *altitude; // @dynamic altitude;
@property(retain, nonatomic) NSNumber *course; // @dynamic course;
@property(retain, nonatomic) NSNumber *horizontalAccuracy; // @dynamic horizontalAccuracy;
@property(retain, nonatomic) NSNumber *latitude; // @dynamic latitude;
@property(retain, nonatomic) NSNumber *longitude; // @dynamic longitude;
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSNumber *speed; // @dynamic speed;
@property(retain, nonatomic) NSNumber *verticalAccuracy; // @dynamic verticalAccuracy;

@end

@interface SFLocationAttributes : NSObject
{
}

+ (id)verticalAccuracy;
+ (id)speed;
+ (id)longitude;
+ (id)latitude;
+ (id)horizontalAccuracy;
+ (id)course;
+ (id)altitude;

@end

@interface SFLocationRelationships : NSObject
{
}

+ (id)note;

@end

@interface SFDayOneNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)importV1NotesFromFileURL:(id)arg1;
- (id)parseDODate:(id)arg1;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFShortcutButtonCell : NSButtonCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface SFShortcutButton : MASShortcutView
{
    NSColor *_borderColor;
    NSColor *_backgroundColor;
    NSColor *_textColor;
    NSColor *_accentColor;
}

+ (Class)shortcutCellClass;
@property(retain) NSColor *accentColor; // @synthesize accentColor=_accentColor;
@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain) NSColor *borderColor; // @synthesize borderColor=_borderColor;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)loadDefaultColors;
- (id)initWithCoder:(id)arg1;

@end

@interface SFBearBlock : NSObject
{
    BOOL _isOpenerTag;
    BOOL _isCloserTag;
    BOOL _isLink;
    BOOL _isImage;
    NSString *_stringBlock;
}

+ (id)blockWithText:(id)arg1;
+ (id)imageblockWithCloserTag:(id)arg1;
+ (id)imageblockWithOpenerTag:(id)arg1;
+ (id)linkblockWithCloserTag:(id)arg1;
+ (id)linkblockWithOpenerTag:(id)arg1;
+ (id)blockWithCloserTag:(id)arg1;
+ (id)blockWithOpenerTag:(id)arg1;
@property BOOL isImage; // @synthesize isImage=_isImage;
@property BOOL isLink; // @synthesize isLink=_isLink;
@property BOOL isCloserTag; // @synthesize isCloserTag=_isCloserTag;
@property BOOL isOpenerTag; // @synthesize isOpenerTag=_isOpenerTag;
@property(retain) NSString *stringBlock; // @synthesize stringBlock=_stringBlock;
- (void).cxx_destruct;
- (BOOL)matchWithBlock:(id)arg1;

@end

@interface SFTodoSidebarItem : SFStaticSidebarItem
{
    BOOL hasNotes;
    id <SFSidebarItem> _father;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(nonatomic) id <SFSidebarItem> father; // @synthesize father=_father;
@property(nonatomic) BOOL hasNotes; // @synthesize hasNotes;
- (id)uniqueIdentifier;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFNoteVideoID : SFNoteFileID
{
}

@end

@interface _SFNoteVideo : SFNoteFile
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveWidthValue:(long long)arg1;
- (long long)primitiveWidthValue;
@property long long widthValue;
- (void)setPrimitiveHeightValue:(long long)arg1;
- (long long)primitiveHeightValue;
@property long long heightValue;
- (void)setPrimitiveDurationValue:(short)arg1;
- (short)primitiveDurationValue;
@property short durationValue;
@property(readonly, nonatomic) SFNoteVideoID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *duration; // @dynamic duration;
@property(retain, nonatomic) NSNumber *height; // @dynamic height;
@property(retain, nonatomic) NSNumber *width; // @dynamic width;

@end

@interface SFNoteVideoAttributes : NSObject
{
}

+ (id)width;
+ (id)height;
+ (id)duration;

@end

@interface SFNoteStrikedTextMarkdownStyler : SFNoteStrikedTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarker;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNotesSpacerSidebarItem : SFStaticSidebarItem
{
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
- (id)uniqueIdentifier;

@end

@interface SFEmojiCompletionItem : NSObject <SFEditorAutoCompleteItem>
{
    NSString *_autoCompleteItemTitle;
    NSString *_autoCompleteItemTextRepresentation;
    unsigned long long _matchLocation;
    unsigned long long _emojiNumber;
}

@property unsigned long long emojiNumber; // @synthesize emojiNumber=_emojiNumber;
@property unsigned long long matchLocation; // @synthesize matchLocation=_matchLocation;
@property(retain) NSString *autoCompleteItemTextRepresentation; // @synthesize autoCompleteItemTextRepresentation=_autoCompleteItemTextRepresentation;
@property(retain) NSString *autoCompleteItemTitle; // @synthesize autoCompleteItemTitle=_autoCompleteItemTitle;
- (void).cxx_destruct;
- (id)autoCompleteItemIcon:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEmojiAutoCompletionItemsProvider : NSObject <SFEditorAutoCompleteItemsProvider>
{
    unsigned long long _maxNumberOfCompletions;
    NSArray *_itemsForCompletion;
    NSArray *_emojis;
}

@property(retain) NSArray *emojis; // @synthesize emojis=_emojis;
@property(retain) NSArray *itemsForCompletion; // @synthesize itemsForCompletion=_itemsForCompletion;
@property(nonatomic) unsigned long long maxNumberOfCompletions; // @synthesize maxNumberOfCompletions=_maxNumberOfCompletions;
- (void).cxx_destruct;
- (id)completionSortDescriptors;
- (void)loadEmojiData;
- (void)updateCompletionForPartiaString:(id)arg1 fullText:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTodoID : NSManagedObjectID
{
}

@end

@interface _SFTodo : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveOrderValue:(long long)arg1;
- (long long)primitiveOrderValue;
@property long long orderValue;
@property(readonly, nonatomic) SFTodoID *objectID;

// Remaining properties
@property(retain, nonatomic) NSDate *completionDate; // @dynamic completionDate;
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSNumber *order; // @dynamic order;
@property(retain, nonatomic) NSString *text; // @dynamic text;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;

@end

@interface SFTodoAttributes : NSObject
{
}

+ (id)uniqueIdentifier;
+ (id)text;
+ (id)order;
+ (id)modificationDate;
+ (id)creationDate;
+ (id)completionDate;

@end

@interface SFTodoRelationships : NSObject
{
}

+ (id)note;

@end

@interface SFAppLockingController : NSObject
{
    BOOL _isApplicationLocked;
    id <SFAppLockingControllerDelegate> _delegate;
    SFAuthenticationManager *_authenticationManager;
    SFEncryptionPreferencesManager *_encryptionPreferencesManager;
}

@property(retain) SFEncryptionPreferencesManager *encryptionPreferencesManager; // @synthesize encryptionPreferencesManager=_encryptionPreferencesManager;
@property(retain) SFAuthenticationManager *authenticationManager; // @synthesize authenticationManager=_authenticationManager;
@property BOOL isApplicationLocked; // @synthesize isApplicationLocked=_isApplicationLocked;
@property id <SFAppLockingControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)unlockApplicationWithCompletion:(CDUnknownBlockType)arg1;
- (void)lockApplication;
- (BOOL)canAuthenticateUser;
- (BOOL)isApplicationLockEnabled;
- (id)init;

@end

@interface SFBackgroundStateManager : NSObject
{
}

+ (BOOL)preventExecutionFromBGState;

@end

@interface SFSpecialNotesSidebarItem : SFStaticSidebarItem
{
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
- (id)uniqueIdentifier;
- (BOOL)canPinNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)managedObjectContext;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFNoteVideo : _SFNoteVideo
{
}

@end

@interface IACRequest : NSObject
{
    NSString *_requestID;
    IACClient *_client;
    NSString *_action;
    NSDictionary *_parameters;
    CDUnknownBlockType _successCalback;
    CDUnknownBlockType _errorCalback;
}

@property(copy, nonatomic) CDUnknownBlockType errorCalback; // @synthesize errorCalback=_errorCalback;
@property(copy, nonatomic) CDUnknownBlockType successCalback; // @synthesize successCalback=_successCalback;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
@property(retain, nonatomic) IACClient *client; // @synthesize client=_client;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
- (void).cxx_destruct;
- (id)init;

@end

@interface SFNoteStyleEditorResult : NSObject
{
    NSAttributedString *_replamentAttributedString;
    struct _NSRange _replacementRange;
    struct _NSRange _proposedSelectionRange;
}

@property(nonatomic) struct _NSRange proposedSelectionRange; // @synthesize proposedSelectionRange=_proposedSelectionRange;
@property(nonatomic) struct _NSRange replacementRange; // @synthesize replacementRange=_replacementRange;
@property(retain) NSAttributedString *replamentAttributedString; // @synthesize replamentAttributedString=_replamentAttributedString;
- (void).cxx_destruct;
- (id)description;

@end

@interface SFNoteStyleEditor : NSObject
{
    SFNoteStylersManager *_noteStylerManager;
}

@property(retain) SFNoteStylersManager *noteStylerManager; // @synthesize noteStylerManager=_noteStylerManager;
- (void).cxx_destruct;
- (struct _NSRange)trimmedRangeForString:(id)arg1 inRange:(struct _NSRange)arg2;
- (long long)counterForOrderedListItemInAttributedString:(id)arg1 styleName:(id)arg2 atRange:(struct _NSRange)arg3;
- (struct _NSRange)rangeToCheckForOrderedListItemInAttributedString:(id)arg1 styleName:(id)arg2 atRange:(struct _NSRange)arg3;
- (id)ensureOrderedListOrderInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyMultilineCodeStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyMarkerStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyInlineCodeStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyStrikedStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyUnderlineStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyItalicStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyBoldStyleInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyOrderedListInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyHeaderLevel:(unsigned long long)arg1 inAttributedString:(id)arg2 range:(struct _NSRange)arg3;
- (id)applyQuoteInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyCheckboxInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyUnorderedListInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyLineSeparatorInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)applyInlineStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 needTrimming:(BOOL)arg4 needExternalBoundarySpaces:(BOOL)arg5 range:(struct _NSRange)arg6 inAttributedString:(id)arg7;
- (struct _NSRange)toggleInlineStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 inRange:(struct _NSRange)arg4 needTrimming:(BOOL)arg5 needExternalBoundarySpaces:(BOOL)arg6 attributedString:(id)arg7;
- (id)applyFullLineStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 supportIndent:(BOOL)arg4 range:(struct _NSRange)arg5 inAttributedString:(id)arg6 customAddStyleBlock:(CDUnknownBlockType)arg7;
- (id)applyFullLineStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 supportIndent:(BOOL)arg4 range:(struct _NSRange)arg5 inAttributedString:(id)arg6;
- (struct _NSRange)addFullLineStyleMarker:(id)arg1 supportIndent:(BOOL)arg2 toAttributedString:(id)arg3 inRange:(struct _NSRange)arg4;
- (struct _NSRange)removeFullLineStyleMarker:(id)arg1 fromAttributedString:(id)arg2 inRange:(struct _NSRange)arg3;
- (struct _NSRange)removeAllFullLineAttachmentsFromAttributedString:(id)arg1 inRange:(struct _NSRange)arg2;
- (BOOL)isAttributedString:(id)arg1 fullyStyledInRange:(struct _NSRange)arg2 forFullLineStyler:(id)arg3;
- (id)applyTypingStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 styleEnclosingStrings:(id)arg4 range:(struct _NSRange)arg5 inAttributedString:(id)arg6;
- (id)toggleMultiLineStyle:(id)arg1 styleMarker:(id)arg2 styleMarkerName:(id)arg3 range:(struct _NSRange)arg4 inAttributedString:(id)arg5;

@end

@interface SFNoteItalicTextStyler : NSObject <SFItalicDataDetectorDelegate, SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
    NSAttributedString *_currentAttributedString;
    NSRegularExpression *_stylerRegularExpression;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain, nonatomic) NSRegularExpression *stylerRegularExpression; // @synthesize stylerRegularExpression=_stylerRegularExpression;
@property(nonatomic) __weak NSAttributedString *currentAttributedString; // @synthesize currentAttributedString=_currentAttributedString;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (BOOL)dataDetector:(id)arg1 shouldMatchEndMarkerInRange:(struct _NSRange)arg2;
- (BOOL)dataDetector:(id)arg1 shouldMatchBeginMarkerInRange:(struct _NSRange)arg2;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteFileID : NSManagedObjectID
{
}

@end

@interface _SFNoteFile : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveUploadedValue:(BOOL)arg1;
- (BOOL)primitiveUploadedValue;
@property BOOL uploadedValue;
- (void)setPrimitiveUnusedValue:(BOOL)arg1;
- (BOOL)primitiveUnusedValue;
@property BOOL unusedValue;
- (void)setPrimitiveSkipSyncValue:(BOOL)arg1;
- (BOOL)primitiveSkipSyncValue;
@property BOOL skipSyncValue;
- (void)setPrimitivePermanentlyDeletedValue:(BOOL)arg1;
- (BOOL)primitivePermanentlyDeletedValue;
@property BOOL permanentlyDeletedValue;
- (void)setPrimitiveIndexValue:(long long)arg1;
- (long long)primitiveIndexValue;
@property long long indexValue;
- (void)setPrimitiveFileSizeValue:(long long)arg1;
- (long long)primitiveFileSizeValue;
@property long long fileSizeValue;
- (void)setPrimitiveDownloadedValue:(BOOL)arg1;
- (BOOL)primitiveDownloadedValue;
@property BOOL downloadedValue;
@property(readonly, nonatomic) SFNoteFileID *objectID;

// Remaining properties
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSNumber *downloaded; // @dynamic downloaded;
@property(retain, nonatomic) NSNumber *fileSize; // @dynamic fileSize;
@property(retain, nonatomic) NSString *filename; // @dynamic filename;
@property(retain, nonatomic) NSNumber *index; // @dynamic index;
@property(retain, nonatomic) NSString *lastEditingDevice; // @dynamic lastEditingDevice;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) NSString *normalizedFileExtension; // @dynamic normalizedFileExtension;
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSNumber *permanentlyDeleted; // @dynamic permanentlyDeleted;
@property(retain, nonatomic) SFNoteFileServerData *serverData; // @dynamic serverData;
@property(retain, nonatomic) NSNumber *skipSync; // @dynamic skipSync;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;
@property(retain, nonatomic) NSNumber *unused; // @dynamic unused;
@property(retain, nonatomic) NSNumber *uploaded; // @dynamic uploaded;
@property(retain, nonatomic) NSDate *uploadedDate; // @dynamic uploadedDate;

@end

@interface SFNoteFileAttributes : NSObject
{
}

+ (id)uploadedDate;
+ (id)uploaded;
+ (id)unused;
+ (id)uniqueIdentifier;
+ (id)skipSync;
+ (id)permanentlyDeleted;
+ (id)normalizedFileExtension;
+ (id)modificationDate;
+ (id)lastEditingDevice;
+ (id)index;
+ (id)filename;
+ (id)fileSize;
+ (id)downloaded;
+ (id)creationDate;

@end

@interface SFNoteFileRelationships : NSObject
{
}

+ (id)serverData;
+ (id)note;

@end

@interface SFNoteTagRenameViewController : NSViewController
{
    id <SFNoteTagRenameViewControllerDelegate> _delegate;
    SFNoteTag *_tag;
    SFTextField *_textField;
    SFEncryptionUIController *_encryptionUIController;
    NSPopover *_popover;
}

@property NSPopover *popover; // @synthesize popover=_popover;
@property(retain) SFEncryptionUIController *encryptionUIController; // @synthesize encryptionUIController=_encryptionUIController;
@property SFTextField *textField; // @synthesize textField=_textField;
@property(nonatomic) SFNoteTag *tag; // @synthesize tag=_tag;
@property(nonatomic) __weak id <SFNoteTagRenameViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setupTheme;
- (void)renameTag:(id)arg1;
- (void)cancelRename:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)viewDidLoad;

@end

@interface SFURL : _SFURL
{
    BOOL isGoingToBeDeleted;
}

+ (void)deleteAllUnusedURLsInManagedObjectContext:(id)arg1;
+ (id)getOrCreateURLWithURL:(id)arg1 note:(id)arg2 inManagedObjectContext:(id)arg3 createdNew:(char *)arg4;
+ (id)addNewURLWithURL:(id)arg1 note:(id)arg2 inManagedObjectContext:(id)arg3;
+ (id)urlWithURL:(id)arg1 note:(id)arg2 inManagedObjectContext:(id)arg3;
+ (id)noteUrlsInManagedObjectContext:(id)arg1 limit:(unsigned long long)arg2 sortDescriptors:(id)arg3;
+ (id)urlsInManagedObjectContext:(id)arg1 withPredicate:(id)arg2 limit:(unsigned long long)arg3 sortDescriptors:(id)arg4;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (id)youtubeUrlsForNote:(id)arg1;
+ (id)youtubeUrlsInManagedObjectContext:(id)arg1 limit:(unsigned long long)arg2 sortDescriptors:(id)arg3;
@property BOOL isGoingToBeDeleted; // @synthesize isGoingToBeDeleted;
- (id)ISO8601DateString;
- (void)updateOpenGraphData:(id)arg1;
- (void)updateTitle:(id)arg1;
- (id)wellFormedURL;
- (void)prepareForDeletion;

@end

@interface SFNoteInfoDateItem : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    SFNote *_note;
    NSString *_day;
    NSString *_monthYearTime;
    NSString *_label;
    NSColor *_textColor;
    NSColor *_labelColor;
}

@property(retain) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(retain) NSString *label; // @synthesize label=_label;
@property(retain) NSString *monthYearTime; // @synthesize monthYearTime=_monthYearTime;
@property(retain) NSString *day; // @synthesize day=_day;
@property __weak SFNote *note; // @synthesize note=_note;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (void)formatStringDateFromDate:(id)arg1;
- (double)cellHeight;
- (id)identifier;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteImageStyler : SFNoteGenericFileStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerComponents;
- (Class)stylerTextAttachmentClass;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (id)attributedStringWithTextAttachmentForRepresentedText:(id)arg1;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)removeInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)imagesURLInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNoteTextCompletionViewController : NSViewController <SFThemeManagerStylableObject>
{
    id <SFNoteTextCompletionViewControllerDelegate> _delegate;
    NSTableView *_tableView;
    NSString *_currentPartialString;
    NSArray *_completionItems;
    struct CGRect _initialTextRect;
}

@property(retain) NSArray *completionItems; // @synthesize completionItems=_completionItems;
@property(copy) NSString *currentPartialString; // @synthesize currentPartialString=_currentPartialString;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) struct CGRect initialTextRect; // @synthesize initialTextRect=_initialTextRect;
@property(nonatomic) id <SFNoteTextCompletionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (id)attributedStringForTitle:(id)arg1 partialString:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (long long)numberOfItems;
- (id)currentSelectedCompletionItem;
- (void)updateWindowPosition;
- (void)updateCompletionWithItems:(id)arg1 partialString:(id)arg2;
- (void)tableViewDidDoubleClickCell:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteOrderedListTextStyler : NSObject <SFNoteTextStyler>
{
    NSCache *_stylerCache;
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerMarker;
+ (id)stylerAttributeName;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property(retain) NSCache *stylerCache; // @synthesize stylerCache=_stylerCache;
- (void).cxx_destruct;
- (id)attachmentParagraphStyleForAttributeRange:(struct _NSRange)arg1 attributedString:(id)arg2 paragraphRange:(struct _NSRange)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)init;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)textListItemsFromIndentPrefixes:(id)arg1;
- (long long)DOCXizeListTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2 listIndex:(long long)arg3;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2 addStartAttribute:(BOOL)arg3;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesIAPPurchases : NSObject <SFIAPManagerDelegate>
{
    BOOL _subscriptionValidated;
    id <SFNotesIAPPurchasesDelegate> _delegate;
    SFNoteCloudKitSync *_cloudKitSyncManager;
    SFIAPManager *_iapManager;
    SFIAPReceiptValidation *_appReceiptValidation;
    NSDictionary *_products;
    CDUnknownBlockType _paymentCompletionBlock;
}

@property(nonatomic) BOOL subscriptionValidated; // @synthesize subscriptionValidated=_subscriptionValidated;
@property(copy) CDUnknownBlockType paymentCompletionBlock; // @synthesize paymentCompletionBlock=_paymentCompletionBlock;
@property(retain) NSDictionary *products; // @synthesize products=_products;
@property(retain) SFIAPReceiptValidation *appReceiptValidation; // @synthesize appReceiptValidation=_appReceiptValidation;
@property(retain) SFIAPManager *iapManager; // @synthesize iapManager=_iapManager;
@property __weak SFNoteCloudKitSync *cloudKitSyncManager; // @synthesize cloudKitSyncManager=_cloudKitSyncManager;
@property __weak id <SFNotesIAPPurchasesDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)iapManager:(id)arg1 shouldAddStorePayment:(id)arg2 forProduct:(id)arg3;
- (void)iapManager:(id)arg1 didFailPurchaseWithTransaction:(id)arg2;
- (void)iapManager:(id)arg1 didRestorePurcaseWithTransaction:(id)arg2;
- (void)iapManager:(id)arg1 didPurchaseWithTransaction:(id)arg2;
- (void)processTransaction:(id)arg1 withIapManager:(id)arg2;
- (void)purchaseProductWithIdentifier:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)manageSubscriptionURL;
- (void)updateProductInformationithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setupIAP;
- (id)localizedProductsPrices;
- (void)getProductsPricesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)validateSyncSubscriptionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)checkICloudAccountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)purchaseOneYearSyncSubscriptionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)purchaseOneMonthSyncSubscriptionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithCloudKitSyncManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFSearchAds : NSObject
{
}

+ (void)getSearchAdsInfoWithAppReceipt:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface SFNotesLayoutManager : NSLayoutManager
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)rectArrayForGlyphRange:(struct _NSRange)arg1 withinSelectedGlyphRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4 forLayoutManager:(id)arg5;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 withMaximumDistance:(double)arg3 fractionOfDistanceBetweenInsertionPoints:(double *)arg4;
- (void)enumerateAttribute:(id)arg1 nearPoint:(struct CGPoint)arg2 withDelta:(double)arg3 inTextContainer:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (BOOL)layoutManager:(id)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (BOOL)layoutManager:(id)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (double)layoutManager:(id)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (BOOL)isRectContainedInLastLineFragment:(struct CGRect)arg1;
- (BOOL)isGlyphIndexContainedInLastLineFragment:(long long)arg1;
- (void)getSelectedImagesRectangles:(id)arg1 forGlyphRange:(struct _NSRange)arg2 atPoint:(struct CGPoint)arg3;
- (id)getTagsRectanglesForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (id)rectArrayForGlyphRange:(struct _NSRange)arg1 inTextContainer:(id)arg2;
- (void)drawImageSelectionBorderForRects:(id)arg1;
- (BOOL)drawInlineCodeBackgroundForGlyphRange:(struct _NSRange *)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)drawMarkerBackgroundForGlyphRange:(struct _NSRange *)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawCodeBackgroundForGlyphRange:(struct _NSRange *)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawTagBackgroundForRectsCollections:(id)arg1 drawSelected:(BOOL)arg2;
- (void)drawQuoteBackgroundForGlyphRange:(struct _NSRange *)arg1 atPoint:(struct CGPoint)arg2;
- (void)fillBackgroundRectArray:(const struct CGRect *)arg1 count:(unsigned long long)arg2 forCharacterRange:(struct _NSRange)arg3 color:(id)arg4;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (id)init;

@end

@interface SFNotesTextAttributePosition : NSObject
{
    id _value;
    double _distance;
    struct _NSRange _range;
}

@property double distance; // @synthesize distance=_distance;
@property struct _NSRange range; // @synthesize range=_range;
@property(retain) id value; // @synthesize value=_value;
- (void).cxx_destruct;

@end

@interface SFInlineAttributeRectCollection : NSObject
{
    BOOL _selected;
    NSMutableArray *_attributeRects;
}

@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(retain) NSMutableArray *attributeRects; // @synthesize attributeRects=_attributeRects;
- (void).cxx_destruct;
- (void)enumerateRectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)addRect:(struct CGRect)arg1;
- (id)init;

@end

@interface GRMustacheHTMLEscapeFilter : NSObject <GRMustacheFilter, GRMustacheRendering, GRMustacheTagDelegate>
{
}

- (id)mustacheTag:(id)arg1 willRenderObject:(id)arg2;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL mustacheBoolValue;
@property(readonly) Class superclass;

@end

@interface SFLoadingWindowController : NSWindowController <SFThemeManagerStylableObject>
{
    SFLoadingViewController *_loadingViewController;
}

@property(nonatomic) SFLoadingViewController *loadingViewController; // @synthesize loadingViewController=_loadingViewController;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)dealloc;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFCodeLanguageDetector : NSObject
{
}

+ (BOOL)checkIfSwiftAgainstObjectiveC:(id)arg1;
+ (BOOL)checkIfSwiftAgainstJavascript:(id)arg1;
+ (BOOL)isNearTop:(long long)arg1 lines:(id)arg2;
- (void)updateResultArray:(id)arg1 withLanguage:(id)arg2 points:(long long)arg3;
- (id)buildResultsArray;
- (id)languages;
- (id)detectLanguageWithString:(id)arg1;

@end

@interface SFRTFNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

+ (id)stringByReplacingImagesWithBearTagsInAttributedString:(id)arg1 withSyntax:(long long)arg2 andMoc:(id)arg3;
@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)attrStringWithURL:(id)arg1;
- (id)stringFromRTF:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFPreferencesToolbarViewController : NSViewController <SFThemeManagerStylableObject>
{
    NSTabViewController *_tabViewController;
    SFGeneralPreferencesViewController *_generalPreferencesViewController;
    SFSyncViewController *_syncViewController;
    SFThemesPreferencesViewController *_themesViewController;
    SFEditorPreferencesViewController *_editorViewController;
    SFSyncPreferencesViewController *_syncStatusViewController;
    NSColor *_labelColor;
    NSColor *_labelLightColor;
    SFStyleView *_toolbarSeparatorView;
    NSButton *_generalButton;
    NSButton *_proButton;
    NSButton *_editorButton;
    NSButton *_themesButton;
    NSButton *_syncButton;
}

@property __weak NSButton *syncButton; // @synthesize syncButton=_syncButton;
@property __weak NSButton *themesButton; // @synthesize themesButton=_themesButton;
@property __weak NSButton *editorButton; // @synthesize editorButton=_editorButton;
@property __weak NSButton *proButton; // @synthesize proButton=_proButton;
@property __weak NSButton *generalButton; // @synthesize generalButton=_generalButton;
@property __weak SFStyleView *toolbarSeparatorView; // @synthesize toolbarSeparatorView=_toolbarSeparatorView;
@property NSColor *labelLightColor; // @synthesize labelLightColor=_labelLightColor;
@property NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property __weak SFSyncPreferencesViewController *syncStatusViewController; // @synthesize syncStatusViewController=_syncStatusViewController;
@property __weak SFEditorPreferencesViewController *editorViewController; // @synthesize editorViewController=_editorViewController;
@property __weak SFThemesPreferencesViewController *themesViewController; // @synthesize themesViewController=_themesViewController;
@property __weak SFSyncViewController *syncViewController; // @synthesize syncViewController=_syncViewController;
@property __weak SFGeneralPreferencesViewController *generalPreferencesViewController; // @synthesize generalPreferencesViewController=_generalPreferencesViewController;
@property __weak NSTabViewController *tabViewController; // @synthesize tabViewController=_tabViewController;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)updateSelectedToolbarItem;
- (void)showViewController:(id)arg1 animated:(BOOL)arg2;
- (void)showSyncPreferences:(id)arg1;
- (void)showThemesPreferences:(id)arg1;
- (void)showEditorPreferences:(id)arg1;
- (void)showBearProPreferences:(id)arg1;
- (void)showGeneralPreferences:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFMercuryParserClient : NSObject
{
}

+ (id)resolveAMPURL:(id)arg1;
+ (id)parseHtmlURLString;
+ (id)parseURLString;
+ (void)parseHTML:(id)arg1 andURL:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)parseURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

@end

@interface SFNoteTagIconPickerCoreController : NSObject
{
    NSArray *_allObjects;
    NSArray *_arrangedObjects;
    NSArray *_arrangedObjectsCategorized;
}

@property(readonly, nonatomic) NSArray *arrangedObjectsCategorized; // @synthesize arrangedObjectsCategorized=_arrangedObjectsCategorized;
@property(retain, nonatomic) NSArray *arrangedObjects; // @synthesize arrangedObjects=_arrangedObjects;
@property(retain, nonatomic) NSArray *allObjects; // @synthesize allObjects=_allObjects;
- (void).cxx_destruct;
- (id)indexPathForCategorizedIconIdentifier:(id)arg1;
- (unsigned long long)indexForIconIdentifier:(id)arg1;
- (void)setIconIdentifier:(id)arg1 forName:(id)arg2;
- (id)iconIdentifierForName:(id)arg1;
- (void)setupTagIconObjects;
- (id)tagIconCoreController;
- (id)init;

@end

@interface SFTagIconObject : NSObject
{
    NSString *_iconIdentifier;
    NSArray *_iconKeywords;
}

@property(retain) NSArray *iconKeywords; // @synthesize iconKeywords=_iconKeywords;
@property(retain) NSString *iconIdentifier; // @synthesize iconIdentifier=_iconIdentifier;
- (void).cxx_destruct;
- (id)iconImageSelected:(BOOL)arg1;

@end

@interface SFNotesAppThemeManager : SFThemeManager
{
    BOOL _useLargeSidebarIcons;
}

+ (id)sharedThemeManager;
@property(nonatomic) BOOL useLargeSidebarIcons; // @synthesize useLargeSidebarIcons=_useLargeSidebarIcons;
- (long long)themeAppearance;
- (id)proBadgeIconSmall;
- (id)proBadgeIcon;
- (id)switchOffBorderColorForBackgroundColor:(id)arg1;
- (id)headingPopoverLinkToHeaderIconActive;
- (id)headingPopoverNoHeaderIconActive;
- (id)passwordPlaceholderImage;
- (id)noNoteInListPlaceholderImage;
- (id)emptyTrashPlaceholderImage;
- (id)noSearchResultPlaceholderImage;
- (id)onlyBackgroundPlacehoderImage;
- (id)defaultPlaceholderImage;
- (id)sidebarSelectedIconColor;
- (id)genericCompletionLanguageIconSelected:(BOOL)arg1;
- (id)genericCompletionNoteIconSelected:(BOOL)arg1;
- (id)genericCompletionTagIconSelected:(BOOL)arg1;
- (id)noteTableConflictedIconNoBackground;
- (id)noteTableConflictedIcon;
- (id)noteTablePinIcon;
- (id)sidebarCloseDisclosureButtonSelected:(BOOL)arg1;
- (id)sidebarOpenDisclosureButtonSelected:(BOOL)arg1;
- (id)sunMountainRiverPlacehoderImage;
- (id)preferencesDebugIconSelected:(BOOL)arg1;
- (id)preferencesSyncIconSelected:(BOOL)arg1;
- (id)preferencesTypographyIconSelected:(BOOL)arg1;
- (id)preferencesThemesIconSelected:(BOOL)arg1;
- (id)preferencesProIconSelected:(BOOL)arg1;
- (id)preferencesGeneralIconSelected:(BOOL)arg1;
- (id)sidebarSettingsIconSelected:(BOOL)arg1;
- (id)sidebarSyncUnexpectedErrorIconSelected:(BOOL)arg1;
- (id)sidebarSyncExpectedErrorIconSelected:(BOOL)arg1;
- (id)sidebarSyncingIconSelected:(BOOL)arg1;
- (id)sidebarSettingIconSelected:(BOOL)arg1;
- (id)touchBarFileIcon;
- (id)touchBarLinkIcon;
- (id)touchBarCheckboxIcon;
- (id)touchBarMarkIcon;
- (id)touchBarCodeBlockIcon;
- (id)touchBarInlineCodeIcon;
- (id)touchBarQuoteIcon;
- (id)touchBarOLIcon;
- (id)touchBarULIcon;
- (id)touchBarStrikeIcon;
- (id)touchBarUnderlineIcon;
- (id)touchBarItalicIcon;
- (id)touchBarBoldIcon;
- (id)touchBarHRIcon;
- (id)touchBarH6Icon;
- (id)touchBarH5Icon;
- (id)touchBarH4Icon;
- (id)touchBarH3Icon;
- (id)touchBarH2Icon;
- (id)touchBarH1Icon;
- (id)touchBarHIcon;
- (id)touchBarStylesPopoverIcon;
- (id)touchBarGoToPopoverTrashIcon;
- (id)touchBarGoToPopoverAllNotesIcon;
- (id)touchBarGoToPopoverIcon;
- (id)touchBarSidebarsPopoverEditorOnlyIcon;
- (id)touchBarSidebarsPopoverNotesEditorIcon;
- (id)touchBarSidebarsPopoverTagsNotesEditorIcon;
- (id)touchBarSidebarsPopoverIcon;
- (id)touchBarShowInfoPanelIcon;
- (id)touchBarRestoreIcon;
- (id)touchBarTrashIcon;
- (id)touchBarUnpinIcon;
- (id)touchBarPinIcon;
- (id)touchBarNewNoteIcon;
- (id)styleEditorFileIcon;
- (id)styleEditorMarkerIcon;
- (id)styleEditorLinkIcon;
- (id)styleEditorCheckboxIcon;
- (id)styleEditorCodeBlockIcon;
- (id)styleEditorInlineCodeIcon;
- (id)styleEditorQuoteIcon;
- (id)styleEditorOLIcon;
- (id)styleEditorULIcon;
- (id)styleEditorStrikeIcon;
- (id)styleEditorUnderlineIcon;
- (id)styleEditorItalicIcon;
- (id)styleEditorBoldIcon;
- (id)styleEditorHRIcon;
- (id)styleEditorH3IconActive:(BOOL)arg1;
- (id)styleEditorH2IconActive:(BOOL)arg1;
- (id)styleEditorH1IconActive:(BOOL)arg1;
- (id)sidebarTogglePanelToggle1ColumnIconActive:(BOOL)arg1;
- (id)sidebarTogglePanelToggle2ColumnsIconActive:(BOOL)arg1;
- (id)sidebarTogglePanelToggle3ColumnsIconActive:(BOOL)arg1;
- (id)infoPanelRTFExportIcon;
- (id)infoPanelJPGExportIcon;
- (id)infoPanelImagesExportIcon;
- (id)infoPanelDOCXExportIcon;
- (id)infoPanelTXTExportIcon;
- (id)infoPanelMDExportIcon;
- (id)infoPanelHTMLExportIcon;
- (id)infoPanelPDFExportIcon;
- (id)infoPanelCopyNoteLinkIconActive:(BOOL)arg1;
- (id)infoPanelCopyNoteTextIconActive:(BOOL)arg1;
- (id)infoPanelUnpinIconActive:(BOOL)arg1;
- (id)infoPanelPinIconActive:(BOOL)arg1;
- (id)editLinkPanelDeleteIconActive:(BOOL)arg1;
- (id)panelIndicatorIconActive:(BOOL)arg1;
- (id)panelDetachIconActive:(BOOL)arg1;
- (id)panelCloseIconActive:(BOOL)arg1;
- (id)noteTableActionDeleteIcon;
- (id)noteTableActionRestoreIcon;
- (id)noteTableActionTrashIcon;
- (id)noteTableActionUnpinIcon;
- (id)noteTableActionPinIcon;
- (id)purchaseExportLockedIconWithTitle:(id)arg1;
- (id)purchaseThemeLock;
- (id)purchaseExportIconActive:(BOOL)arg1;
- (id)purchaseThemeIconActive:(BOOL)arg1;
- (id)purchaseSyncIconActive:(BOOL)arg1;
- (id)actionFloatOnTopIconSelectedActive:(BOOL)arg1;
- (id)actionFloatOnTopIconActive:(BOOL)arg1;
- (id)actionSidebarToggleIconActive:(BOOL)arg1;
- (id)actionStylesIconActive:(BOOL)arg1;
- (id)actionDeleteIconActive:(BOOL)arg1;
- (id)actionRestoreIconActive:(BOOL)arg1;
- (id)actionTrashIconActive:(BOOL)arg1;
- (id)actionShareIconActive:(BOOL)arg1;
- (id)actionMoreIconActive:(BOOL)arg1;
- (id)actionInfoIconActive:(BOOL)arg1;
- (id)noteTableAddIconActive:(BOOL)arg1;
- (id)cachedImageForKey:(id)arg1 imageProviderBlock:(CDUnknownBlockType)arg2;
- (void)loadDefaultTheme;
- (id)init;
- (id)tagPickerTagIconSelected:(BOOL)arg1;
- (id)sidebarLockedIconSelected:(BOOL)arg1 empty:(BOOL)arg2;
- (id)sidebarUntaggedIconSelected:(BOOL)arg1 empty:(BOOL)arg2;
- (id)sidebarTodayIconSelected:(BOOL)arg1 empty:(BOOL)arg2;
- (id)sidebarTodoIconSelected:(BOOL)arg1 empty:(BOOL)arg2;
- (id)sidebarTagIconSelected:(BOOL)arg1;
- (id)sidebarArchiveIconSelected:(BOOL)arg1;
- (id)sidebarTrashIconSelected:(BOOL)arg1 empty:(BOOL)arg2;
- (id)sidebarSpecialIconSelected:(BOOL)arg1;
- (id)sidebarNoteIconSelected:(BOOL)arg1;
- (id)specialIconForCategory:(id)arg1 imageKey:(id)arg2 color:(id)arg3 fallback:(CDUnknownBlockType)arg4;
- (id)specialIconForTagPicker:(id)arg1 selected:(BOOL)arg2;
- (id)specialIconForAutocomplete:(id)arg1 selected:(BOOL)arg2;
- (id)specialIconForSidebar:(id)arg1 selected:(BOOL)arg2;

@end

@interface SFXurlTokenController : NSObject
{
    NSURL *_baseURL;
}

@property(retain) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)applicationSupportURL;
- (id)folderURLForPathComponent:(id)arg1;
- (id)saveToken:(id)arg1;
- (id)generateToken;
- (id)token;
- (id)init;

@end

@interface GRMustachePartialNode : NSObject <GRMustacheTemplateASTNode>
{
    NSString *_name;
    GRMustacheTemplateAST *_templateAST;
}

+ (id)partialNodeWithTemplateAST:(id)arg1 name:(id)arg2;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, retain, nonatomic) GRMustacheTemplateAST *templateAST; // @synthesize templateAST=_templateAST;
- (id)initWithTemplateAST:(id)arg1 name:(id)arg2;
- (id)resolveTemplateASTNode:(id)arg1;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTitledLinkEditorManager : NSObject
{
}

+ (id)proposedLinkAndTitleForSelectedText:(id)arg1 andClipboardText:(id)arg2;
+ (BOOL)validateURLString:(id)arg1;

@end

@interface SFSidebarOutlineView : NSOutlineView
{
    long long _rightClickedRow;
}

@property(nonatomic) long long rightClickedRow; // @synthesize rightClickedRow=_rightClickedRow;
- (void)keyDown:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)arg1;
- (id)menuForEvent:(id)arg1;
- (void)drawContextMenuHighlightForRow:(long long)arg1;
- (id)makeViewWithIdentifier:(id)arg1 owner:(id)arg2;

@end

@interface SFBearifierRTF : SFBearifier
{
    SFNoteStylersManager *_stylersManager;
    long long _h1size;
    long long _h2size;
    long long _h3size;
}

@property long long h3size; // @synthesize h3size=_h3size;
@property long long h2size; // @synthesize h2size=_h2size;
@property long long h1size; // @synthesize h1size=_h1size;
@property(retain) SFNoteStylersManager *stylersManager; // @synthesize stylersManager=_stylersManager;
- (void).cxx_destruct;
- (id)linkStringWithTitle:(id)arg1 andURL:(id)arg2;
- (BOOL)isBeginOftheLine:(id)arg1 range:(struct _NSRange)arg2;
- (void)initializeFontSizesWithAttributedString:(id)arg1;
- (void)replaceListSymbol:(id)arg1 withMarker:(id)arg2 inString:(id)arg3;
- (id)applyInlineMarker:(id)arg1 toString:(id)arg2;
- (id)bearify;

@end

@interface SFNoteServerData : _SFNoteServerData
{
}

+ (void)deleteAllObjectsInManagedObjectContext:(id)arg1;
@property(nonatomic) __weak CKRecord *ckRecord;

@end

@interface SFSpotlightIndexOperation : NSOperation
{
    BOOL _isExecuting;
    BOOL _isFinished;
    long long _operationKind;
    NSArray *_searchableItemsIdentifiers;
    NSManagedObjectContext *_moc;
}

@property(retain) NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property(retain) NSArray *searchableItemsIdentifiers; // @synthesize searchableItemsIdentifiers=_searchableItemsIdentifiers;
@property long long operationKind; // @synthesize operationKind=_operationKind;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
- (void).cxx_destruct;
- (id)objectsIDsForSearchableItemsWithIdentifiers:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)objectsForEntity:(id)arg1 objectsIDs:(id)arg2 inManagedObjectContext:(id)arg3;
- (id)searchableItemsForNote:(id)arg1;
- (id)searchableItemsFromManagedObjects:(id)arg1;
- (id)searchableItemsFromInternalChanges:(id)arg1 inManagedObjectContext:(id)arg2;
- (void)deleteIndexAndStartReindexingWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)indexAllSearchableItemsWithIdentifiers:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)indexAllSearchableItemsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)deleteSearchableItems:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)indexSearchableItems:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)updateIndexWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)finish;
- (void)start;
- (id)initWithManagedObjectContext:(id)arg1 operationKind:(long long)arg2;

@end

@interface SFMainWindowRestoration : NSObject
{
}

+ (void)encodeRestorableState:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GRMustacheVariableTag : GRMustacheTag
{
    GRMustacheExpression *_expression;
    BOOL _escapesHTML;
    unsigned long long _contentType;
}

+ (id)variableTagWithExpression:(id)arg1 escapesHTML:(BOOL)arg2 contentType:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL escapesHTML; // @synthesize escapesHTML=_escapesHTML;
@property(readonly, retain, nonatomic) GRMustacheExpression *expression; // @synthesize expression=_expression;
- (id)initWithExpression:(id)arg1 escapesHTML:(BOOL)arg2 contentType:(unsigned long long)arg3;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (id)renderContentWithContext:(id)arg1 HTMLSafe:(char *)arg2 error:(id *)arg3;
- (id)innerTemplateString;
- (BOOL)isInverted;
- (unsigned long long)type;
- (id)description;
- (void)dealloc;

@end

@interface SFImportTagDetector : NSObject
{
}

+ (BOOL)isRange:(struct _NSRange)arg1 includedInRages:(id)arg2;
+ (id)escapeTagsInString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface DTTimePeriodCollection : DTTimePeriodGroup
{
}

+ (id)collection;
- (id)copy;
- (void)setVariablesNil;
- (void)updateVariables;
- (BOOL)isEqualToCollection:(id)arg1 considerOrder:(BOOL)arg2;
- (id)periodsOverlappedByPeriod:(id)arg1;
- (id)periodsIntersectedByPeriod:(id)arg1;
- (id)periodsIntersectedByDate:(id)arg1;
- (id)periodsInside:(id)arg1;
- (void)sortByDurationDescending;
- (void)sortByDurationAscending;
- (void)sortByEndDescending;
- (void)sortByEndAscending;
- (void)sortByStartDescending;
- (void)sortByStartAscending;
- (void)removeTimePeriodAtIndex:(long long)arg1;
- (void)insertTimePeriod:(id)arg1 atIndex:(long long)arg2;
- (void)addTimePeriod:(id)arg1;

@end

@interface SFVesperNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    SFNoteStylersManager *_stylersManager;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property(retain) SFNoteStylersManager *stylersManager; // @synthesize stylersManager=_stylersManager;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)bearNoteWithText:(id)arg1 andPicturesFolder:(id)arg2;
- (id)importFilesFromFolder:(id)arg1 archive:(BOOL)arg2;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface GRMustacheEachFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedDictionary:(id)arg1;
- (id)transformedArray:(id)arg1;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFIAPManager : NSObject <SKPaymentTransactionObserver, SKProductsRequestDelegate>
{
    id <SFIAPManagerDelegate> _delegate;
    SKProductsRequest *_productsRequest;
    NSMutableDictionary *_productDictionary;
    CDUnknownBlockType _productRequestCompletionBlock;
}

@property(copy) CDUnknownBlockType productRequestCompletionBlock; // @synthesize productRequestCompletionBlock=_productRequestCompletionBlock;
@property(retain) NSMutableDictionary *productDictionary; // @synthesize productDictionary=_productDictionary;
@property(retain) SKProductsRequest *productsRequest; // @synthesize productsRequest=_productsRequest;
@property __weak id <SFIAPManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)getProductsInformationForIdentifiers:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)purchaseProduct:(id)arg1 quantity:(long long)arg2;
- (void)restorePurchases;
- (void)markTransactionAsCompleted:(id)arg1;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTagDataDetector : NSRegularExpression
{
}

+ (id)splitTagsInString:(id)arg1;
+ (id)stringByAddingHashtags:(id)arg1 toString:(id)arg2;
+ (id)stringByReplacingHashtag:(id)arg1 withHastag:(id)arg2 inString:(id)arg3;
+ (id)diacriticTagComponentsFromString:(id)arg1;
+ (id)hashtagsFromTagsStrings:(id)arg1;
+ (id)hashTagStringForTagName:(id)arg1;
+ (BOOL)isSingleTag:(id)arg1;
+ (unsigned long long)regularExpressionRepresentedTextGroupIndex;
+ (id)tagRegularExpressionForHashtagString:(id)arg1;
+ (id)singleTagRegularExpression;
+ (id)multiWordTagRegularExpressionPattern;
+ (id)singleTagRegularExpressionPattern;
- (void)removeTagsInString:(id)arg1 withMatches:(id)arg2 inRange:(struct _NSRange)arg3;
- (id)removeTagsInString:(id)arg1 range:(struct _NSRange)arg2;
- (id)init;

@end

@interface SFNoteCloudKitFileDownloadOperation : NSOperation
{
    BOOL _isExecuting;
    BOOL _isFinished;
    NSManagedObjectContext *_moc;
    CKRecordZoneID *_zoneID;
    CKDatabase *_database;
    NSArray *_fileUniqueIdentifiers;
    NSMutableDictionary *_filesToDownload;
    NSMutableDictionary *_ckRecordsDownloaded;
}

@property(retain) NSMutableDictionary *ckRecordsDownloaded; // @synthesize ckRecordsDownloaded=_ckRecordsDownloaded;
@property(retain) NSMutableDictionary *filesToDownload; // @synthesize filesToDownload=_filesToDownload;
@property(retain) NSArray *fileUniqueIdentifiers; // @synthesize fileUniqueIdentifiers=_fileUniqueIdentifiers;
@property __weak CKDatabase *database; // @synthesize database=_database;
@property __weak CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
@property __weak NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
- (void).cxx_destruct;
- (id)pagedArraysFromArray:(id)arg1 pageSize:(unsigned long long)arg2;
- (void)downloadFileForCKRecord:(id)arg1;
- (id)getDowloadFilesOperationWithRecordsToDownload:(id)arg1;
- (BOOL)downloadFiles;
- (id)ckRecordIDsToDowload;
- (void)finish;
- (void)start;
- (id)initWithFileUniqueIdentifier:(id)arg1;

@end

@interface SFThemeEditorTableView : NSTableView
{
}

@end

@interface SFSidebarViewController : NSViewController <SFNoteSidebarCoreControllerDelegate, SFThemeManagerStylableObject, SFNoteTagRenameViewControllerDelegate, SFTagIconPickerViewControllerDelegate, NSOutlineViewDelegate>
{
    BOOL _isSafeMode;
    BOOL _skipDelegateNotification;
    BOOL _isSyncing;
    id <SFSidebarViewControllerDelegate> _delegate;
    NSManagedObjectContext *_managedObjectContext;
    NSOutlineView *_sidebarOutlineView;
    SFStyleView *_headerView;
    NSButton *_preferencesButton;
    NSButton *_syncButton;
    NSLayoutConstraint *_minimumWidthConstraint;
    SFEncryptionUIController *_encryptionUIController;
    SFNoteSidebarCoreController *_sidebarCoreController;
    NSMutableArray *_itemUpdatedDuringModelUpdate;
    NSMutableArray *_itemUniqueIDsToExpandAfterLaunch;
    NSError *_currentSyncError;
    SFNoteTag *_selectedTagBeforeRename;
}

@property __weak SFNoteTag *selectedTagBeforeRename; // @synthesize selectedTagBeforeRename=_selectedTagBeforeRename;
@property(nonatomic) BOOL isSyncing; // @synthesize isSyncing=_isSyncing;
@property(retain, nonatomic) NSError *currentSyncError; // @synthesize currentSyncError=_currentSyncError;
@property(nonatomic) BOOL skipDelegateNotification; // @synthesize skipDelegateNotification=_skipDelegateNotification;
@property(retain, nonatomic) NSMutableArray *itemUniqueIDsToExpandAfterLaunch; // @synthesize itemUniqueIDsToExpandAfterLaunch=_itemUniqueIDsToExpandAfterLaunch;
@property(retain, nonatomic) NSMutableArray *itemUpdatedDuringModelUpdate; // @synthesize itemUpdatedDuringModelUpdate=_itemUpdatedDuringModelUpdate;
@property(retain) SFNoteSidebarCoreController *sidebarCoreController; // @synthesize sidebarCoreController=_sidebarCoreController;
@property BOOL isSafeMode; // @synthesize isSafeMode=_isSafeMode;
@property(retain) SFEncryptionUIController *encryptionUIController; // @synthesize encryptionUIController=_encryptionUIController;
@property __weak NSLayoutConstraint *minimumWidthConstraint; // @synthesize minimumWidthConstraint=_minimumWidthConstraint;
@property __weak NSButton *syncButton; // @synthesize syncButton=_syncButton;
@property __weak NSButton *preferencesButton; // @synthesize preferencesButton=_preferencesButton;
@property __weak SFStyleView *headerView; // @synthesize headerView=_headerView;
@property __weak NSOutlineView *sidebarOutlineView; // @synthesize sidebarOutlineView=_sidebarOutlineView;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property __weak id <SFSidebarViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)showSyncButton:(BOOL)arg1 animated:(BOOL)arg2;
- (void)hideSyncButton;
- (void)showSyncUnexpectedErrorIcon;
- (void)showSyncExpectedErrorIcon;
- (void)showSyncingIcon;
- (void)updateSyncUI;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)sidebarController:(id)arg1 didUpdateItemValue:(id)arg2;
- (void)sidebarController:(id)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 progressiveIndex:(unsigned long long)arg4 forChangeType:(unsigned long long)arg5 progressiveChangeType:(unsigned long long)arg6 newIndex:(unsigned long long)arg7 newProgressiveIndex:(unsigned long long)arg8;
- (void)updateSidebarAfterControllerDidChangeContent;
- (void)sidebarControllerDidChangeContent:(id)arg1;
- (void)sidebarControllerWillChangeContent:(id)arg1;
- (BOOL)sidebarOutlineView:(id)arg1 shouldShowMenuForItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)tagIconPickerViewController:(id)arg1 didChangeIconForSidebarItem:(id)arg2;
- (void)tagRenameViewController:(id)arg1 didRenameTag:(id)arg2 resultingTag:(id)arg3;
- (void)openRenamePopoverForRow:(long long)arg1;
- (void)setSelectedSidebarItemWithUniqueIdentifier:(id)arg1 animated:(BOOL)arg2;
- (void)setSelectedSidebarItemWithUniqueIdentifier:(id)arg1;
- (id)selectedSidebarItemUniqueIdentifier;
- (void)setSelectedSidebarItem:(id)arg1 animated:(BOOL)arg2;
- (void)setSelectedSidebarItem:(id)arg1;
- (id)selectedSidebarItem;
- (void)setSelectedItems:(id)arg1;
- (void)ChangeSidebarItemIcon:(id)arg1;
- (void)deleteSidebaritem:(id)arg1;
- (void)renameSidebaritem:(id)arg1;
- (void)pinSidebaritem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFServerMetadataID : NSManagedObjectID
{
}

@end

@interface _SFServerMetadata : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) SFServerMetadataID *objectID;

// Remaining properties
@property(retain, nonatomic) NSData *noteZoneIDData; // @dynamic noteZoneIDData;
@property(retain, nonatomic) NSString *noteZoneSubscriptionID; // @dynamic noteZoneSubscriptionID;
@property(retain, nonatomic) NSData *serverChangeTokenData; // @dynamic serverChangeTokenData;

@end

@interface SFServerMetadataAttributes : NSObject
{
}

+ (id)serverChangeTokenData;
+ (id)noteZoneSubscriptionID;
+ (id)noteZoneIDData;

@end

@interface SFSyncViewController : NSTabViewController <SFPaymentDelegate>
{
    SFNoteCloudKitSync *_cloudKitSyncManager;
    SFNotesIAPPurchases *_iapPurchases;
    SFPurchaseViewController *_purchaseViewController;
    SFPurchaseStatusViewController *_purchaseStatusViewController;
}

@property __weak SFPurchaseStatusViewController *purchaseStatusViewController; // @synthesize purchaseStatusViewController=_purchaseStatusViewController;
@property __weak SFPurchaseViewController *purchaseViewController; // @synthesize purchaseViewController=_purchaseViewController;
@property __weak SFNotesIAPPurchases *iapPurchases; // @synthesize iapPurchases=_iapPurchases;
@property __weak SFNoteCloudKitSync *cloudKitSyncManager; // @synthesize cloudKitSyncManager=_cloudKitSyncManager;
- (void).cxx_destruct;
- (void)validateUIElements;
- (struct CGSize)preferredContentSize;
- (void)showSyncStatusViewController;
- (void)showPurchaseViewController;
- (void)viewControllerDidFailPayment:(id)arg1;
- (void)viewControllerDidReceivePayment:(id)arg1;
- (void)viewControllerWillBeginPayment:(id)arg1;
- (void)viewWillAppear;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTTimePeriodChain : DTTimePeriodGroup
{
    DTTimePeriod *First;
    DTTimePeriod *Last;
}

+ (id)chain;
- (void).cxx_destruct;
- (void)setVariablesNil;
- (void)updateVariables;
@property(readonly, nonatomic) DTTimePeriod *Last;
@property(readonly, nonatomic) DTTimePeriod *First;
- (BOOL)isEqualToChain:(id)arg1;
- (void)removeEarliestTimePeriod;
- (void)removeLatestTimePeriod;
- (void)removeTimePeriodAtIndex:(long long)arg1;
- (void)insertTimePeriod:(id)arg1 atInedx:(long long)arg2;
- (void)addTimePeriod:(id)arg1;

@end

@interface SFNotePasteFromCoreController : NSObject
{
}

- (id)pasteStringFromRTF:(id)arg1;
- (id)pasteStringFromCode:(id)arg1;
- (id)pasteStringFromHTML:(id)arg1;
- (id)pasteStringFromMarkdown:(id)arg1;

@end

@interface SFArrowTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isInline;
- (void)drawLeftArrowForAttachmentRect:(struct CGRect)arg1;
- (void)drawRightArrowForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (BOOL)canBeDraggedAlone;
- (BOOL)needWrappingCharaters;
- (BOOL)isFlipped;

@end

@interface SFTextAnalyzer : NSObject
{
    NSOperationQueue *_operationQueue;
    double _averageWordPerMinuteForSpacedScripts;
    double _averageWordPerMinuteForNonSpacedScripts;
    NSRegularExpression *_contLatinsNumbersRe;
    NSRegularExpression *_contMCharsRe;
    NSRegularExpression *_contSpacesRetsRe;
    NSRegularExpression *_emojiRe;
    NSRegularExpression *_retRe;
}

@property(retain) NSRegularExpression *retRe; // @synthesize retRe=_retRe;
@property(retain) NSRegularExpression *emojiRe; // @synthesize emojiRe=_emojiRe;
@property(retain) NSRegularExpression *contSpacesRetsRe; // @synthesize contSpacesRetsRe=_contSpacesRetsRe;
@property(retain) NSRegularExpression *contMCharsRe; // @synthesize contMCharsRe=_contMCharsRe;
@property(retain) NSRegularExpression *contLatinsNumbersRe; // @synthesize contLatinsNumbersRe=_contLatinsNumbersRe;
@property(nonatomic) double averageWordPerMinuteForNonSpacedScripts; // @synthesize averageWordPerMinuteForNonSpacedScripts=_averageWordPerMinuteForNonSpacedScripts;
@property(nonatomic) double averageWordPerMinuteForSpacedScripts; // @synthesize averageWordPerMinuteForSpacedScripts=_averageWordPerMinuteForSpacedScripts;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (void).cxx_destruct;
- (id)makeSpacesRetsRe;
- (id)makeMCharsRe;
- (id)makeLatinsNumbersRe;
- (id)makeRetRe;
- (id)makeEmojiRe;
- (unsigned long long)readTimeForSpacedWordCount:(unsigned long long)arg1 andNonSpacedWordCount:(unsigned long long)arg2;
- (unsigned long long)sentenceCountForString:(id)arg1 range:(struct _NSRange)arg2;
- (id)keywordDensityForString:(id)arg1 range:(struct _NSRange)arg2 totalWords:(unsigned long long *)arg3;
- (unsigned long long)paragraphCountForString:(id)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)characterCountForString:(id)arg1 range:(struct _NSRange)arg2;
- (id)wordCountDictForString:(id)arg1 range:(struct _NSRange)arg2 andOperationQueue:(id)arg3;
- (unsigned long long)wordCountForString:(id)arg1 range:(struct _NSRange)arg2;
- (void)analyzeText:(id)arg1 rawText:(id)arg2 withOptions:(unsigned long long)arg3 success:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface MRTSearchField : NSControl <NSTextFieldDelegate>
{
    BOOL _editing;
    BOOL _stillAnimatingToLeft;
    long long _searchIconRightSpacing;
    long long _borderSize;
    long long _leftRightPadding;
    NSFont *_searchTextFont;
    NSColor *_searchTextColor;
    NSColor *_searchTextSelectedTextColor;
    NSColor *_searchTextSelectedTextBackgroundColor;
    NSColor *_searchTextPlaceholderColor;
    NSColor *_backgroundColor;
    NSColor *_borderColor;
    NSColor *_borderFocusColor;
    NSColor *_insertionPointColor;
    NSImage *_searchButtonImage;
    NSColor *_searchButtonImageColor;
    NSImage *_cancelButtonImage;
    NSColor *_cancelButtonColor;
    NSString *_placeholderString;
    id _delegate;
    NSButton *_cancelButton;
    NSButton *_searchButton;
    NSTextField *_searchTextField;
    NSLayoutConstraint *_searchTextFieldWidthConstraint;
    NSLayoutConstraint *_textFieldFullWidthConstraint;
    NSArray *_searchButtonSearchFieldCenteringConstraints;
    NSArray *_searchButtonSearchFieldExpandedConstraints;
    NSArray *_cancelButtonSizeConstraints;
    NSMutableArray *_internalLayoutConstraints;
}

@property(nonatomic) BOOL stillAnimatingToLeft; // @synthesize stillAnimatingToLeft=_stillAnimatingToLeft;
@property(retain) NSMutableArray *internalLayoutConstraints; // @synthesize internalLayoutConstraints=_internalLayoutConstraints;
@property(retain) NSArray *cancelButtonSizeConstraints; // @synthesize cancelButtonSizeConstraints=_cancelButtonSizeConstraints;
@property(retain) NSArray *searchButtonSearchFieldExpandedConstraints; // @synthesize searchButtonSearchFieldExpandedConstraints=_searchButtonSearchFieldExpandedConstraints;
@property(retain) NSArray *searchButtonSearchFieldCenteringConstraints; // @synthesize searchButtonSearchFieldCenteringConstraints=_searchButtonSearchFieldCenteringConstraints;
@property(retain) NSLayoutConstraint *textFieldFullWidthConstraint; // @synthesize textFieldFullWidthConstraint=_textFieldFullWidthConstraint;
@property(retain) NSLayoutConstraint *searchTextFieldWidthConstraint; // @synthesize searchTextFieldWidthConstraint=_searchTextFieldWidthConstraint;
@property(retain) NSTextField *searchTextField; // @synthesize searchTextField=_searchTextField;
@property(retain) NSButton *searchButton; // @synthesize searchButton=_searchButton;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(retain) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property __weak id delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *placeholderString; // @synthesize placeholderString=_placeholderString;
@property(copy, nonatomic) NSColor *cancelButtonColor; // @synthesize cancelButtonColor=_cancelButtonColor;
@property(copy, nonatomic) NSImage *cancelButtonImage; // @synthesize cancelButtonImage=_cancelButtonImage;
@property(copy, nonatomic) NSColor *searchButtonImageColor; // @synthesize searchButtonImageColor=_searchButtonImageColor;
@property(copy, nonatomic) NSImage *searchButtonImage; // @synthesize searchButtonImage=_searchButtonImage;
@property(copy, nonatomic) NSColor *insertionPointColor; // @synthesize insertionPointColor=_insertionPointColor;
@property(copy, nonatomic) NSColor *borderFocusColor; // @synthesize borderFocusColor=_borderFocusColor;
@property(copy, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSColor *searchTextPlaceholderColor; // @synthesize searchTextPlaceholderColor=_searchTextPlaceholderColor;
@property(copy, nonatomic) NSColor *searchTextSelectedTextBackgroundColor; // @synthesize searchTextSelectedTextBackgroundColor=_searchTextSelectedTextBackgroundColor;
@property(copy, nonatomic) NSColor *searchTextSelectedTextColor; // @synthesize searchTextSelectedTextColor=_searchTextSelectedTextColor;
@property(copy, nonatomic) NSColor *searchTextColor; // @synthesize searchTextColor=_searchTextColor;
@property(copy, nonatomic) NSFont *searchTextFont; // @synthesize searchTextFont=_searchTextFont;
@property(nonatomic) long long leftRightPadding; // @synthesize leftRightPadding=_leftRightPadding;
@property(nonatomic) long long borderSize; // @synthesize borderSize=_borderSize;
@property(nonatomic) long long searchIconRightSpacing; // @synthesize searchIconRightSpacing=_searchIconRightSpacing;
- (void).cxx_destruct;
- (id)imageOfCancelIconWithFrame:(struct CGRect)arg1 crossColor:(id)arg2 circleColor:(id)arg3;
- (void)drawCancelIconWithFrame:(struct CGRect)arg1 crossColor:(id)arg2 circleColor:(id)arg3;
- (id)imageOfSearchIconWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2;
- (void)drawSearchIconWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2;
- (void)informDelegateThatSearchDidChange;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)currentEditor;
- (void)setAttributedStringValue:(id)arg1;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateAllConstraints;
- (void)setupConstraints;
- (void)setupSearchTextFieldConstraints;
- (void)setupSearchField;
- (void)setupSearchButtonConstraints;
- (void)setupSearchButton;
- (void)setupCancelButtonConstraint;
- (void)setupCancelButton;
- (void)animateSearchButtonToCenter;
- (void)animateSearchButtonToLeft;
- (void)focusSearchTextField:(id)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)searchButtonClicked:(id)arg1;
- (void)updatePlaceholderAttributes;
- (void)updateButtonImages;
- (void)inspectableDefaults;
- (void)setNeedsDisplay:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MRTTextField : NSTextField
{
}

- (BOOL)isOpaque;
- (BOOL)becomeFirstResponder;

@end

@interface MRTTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)focusRingMaskBoundsForFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)setUpFieldEditorAttributes:(id)arg1;

@end

@interface SFSpacerTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isInline;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (BOOL)needWrappingCharaters;

@end

@interface SFDraftsImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    SFNoteStylersManager *_stylersManager;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property(retain) SFNoteStylersManager *stylersManager; // @synthesize stylersManager=_stylersManager;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)draft5DateFormatter;
- (id)draft4DateFormatter;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface SFIAPReceiptValidation : NSObject <SKRequestDelegate>
{
    CDUnknownBlockType _receiptRefreshtCompletionBlock;
    SKReceiptRefreshRequest *_receiptRequest;
}

@property(retain) SKReceiptRefreshRequest *receiptRequest; // @synthesize receiptRequest=_receiptRequest;
@property(copy) CDUnknownBlockType receiptRefreshtCompletionBlock; // @synthesize receiptRefreshtCompletionBlock=_receiptRefreshtCompletionBlock;
- (void).cxx_destruct;
- (id)appReceiptDateFromString:(id)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)requestDidFinish:(id)arg1;
- (void)refreshAppReceiptWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)parseReceipt:(id)arg1 usingAppleSandboxServer:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)parseReceipt:(id)arg1 usingAppleServerWithCompletionBlock:(CDUnknownBlockType)arg2;
- (void)getSubscriptionExpirationDateFromAppReceipt:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)getLocalReceiptRefreshIfNeeded:(BOOL)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)getSubscriptionExpirationDateFromLocalAppReceiptRefreshIfNeeded:(BOOL)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFPopUpButton : NSPopUpButton
{
    NSColor *_borderColor;
    NSColor *_backgroundColor;
    NSColor *_textColor;
}

@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain) NSColor *borderColor; // @synthesize borderColor=_borderColor;
- (void).cxx_destruct;
- (void)loadDefaultColors;
- (id)initWithCoder:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;

@end

@interface SFPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface SFBearifierHTML : SFBearifier
{
    SFNoteStylersManager *_stylersManager;
}

+ (id)findSrcLinkInsideString:(id)arg1;
+ (id)findHrefLinkInsideString:(id)arg1;
@property(retain) SFNoteStylersManager *stylersManager; // @synthesize stylersManager=_stylersManager;
- (void).cxx_destruct;
- (id)replaceInvalidCharactersInText:(id)arg1;
- (id)listPrefixForNestingLevel:(unsigned long long)arg1;
- (id)avoidInvolontaryBearMarkupInText:(id)arg1 inMarkup:(BOOL)arg2 beginOftheParagraph:(BOOL)arg3;
- (id)bearify;

@end

@interface GRMustacheJavascriptEscaper : NSObject <GRMustacheFilter, GRMustacheRendering, GRMustacheTagDelegate>
{
}

- (id)escape:(id)arg1;
- (id)mustacheTag:(id)arg1 willRenderObject:(id)arg2;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL mustacheBoolValue;
@property(readonly) Class superclass;

@end

@interface SFNoteItalicTextMarkdownStyler : SFNoteItalicTextStyler <SFItalicDataDetectorDelegate>
{
    NSRegularExpression *_stylerRegularExpression;
    NSAttributedString *_currentAttributedString;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarker;
@property(nonatomic) __weak NSAttributedString *currentAttributedString; // @synthesize currentAttributedString=_currentAttributedString;
@property(retain, nonatomic) NSRegularExpression *stylerRegularExpression; // @synthesize stylerRegularExpression=_stylerRegularExpression;
- (void).cxx_destruct;
- (BOOL)dataDetector:(id)arg1 shouldMatchEndMarkerInRange:(struct _NSRange)arg2;
- (BOOL)dataDetector:(id)arg1 shouldMatchBeginMarkerInRange:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheExpressionParser : NSObject
{
}

- (id)parseExpression:(id)arg1 empty:(char *)arg2 error:(id *)arg3;

@end

@interface SFNoteUnderlineTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFDeviceInfoLogger : NSObject
{
}

+ (void)logDeviceInfo;

@end

@interface SFTagSidebarItem : NSObject <SFSidebarItem>
{
    NSManagedObjectContext *managedObjectContext;
    SFNoteTag *_tag;
    SFTagSidebarItem *_father;
    NSMutableArray *_childs;
}

+ (id)sidebarItemFromTag:(id)arg1 father:(id)arg2 childsDictionary:(id)arg3;
+ (id)sidebarItemsFromRootTags:(id)arg1 childTags:(id)arg2;
+ (id)tagsSortDescriptors;
@property(retain, nonatomic) NSMutableArray *childs; // @synthesize childs=_childs;
@property(nonatomic) __weak SFTagSidebarItem *father; // @synthesize father=_father;
@property(retain) SFNoteTag *tag; // @synthesize tag=_tag;
@property(nonatomic) __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *debugDescription;
- (BOOL)groupConflictedNotes;
- (BOOL)canPinNotes;
- (BOOL)canShareNotes;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)uniqueIdentifier;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (BOOL)isSeparator;
- (BOOL)isGroup;
- (id)selectedIcon;
- (id)icon;
- (id)tagString;
- (id)title;
- (void)addNotes:(id)arg1;
@property(nonatomic, getter=isPinned) BOOL pinned;
- (void)deleteItem;
- (void)updateChilds;
- (id)initWithTag:(id)arg1 father:(id)arg2;
- (id)initWithTag:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL hasNotes;
@property(readonly) Class superclass;

@end

@interface SFNoteCodeInlineTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (id)textAttributes;
- (id)markerAttributes;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFBearNoteExporter : NSObject <SFNoteExporter>
{
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFNoteTagIconsConstants : NSObject
{
}

- (id)tagsIconIdentifiersCategorized;
- (id)tagsIconIdentifiers;

@end

@interface GRMustacheRendering : NSObject
{
}

+ (void)registerRenderIMP:(CDUnknownFunctionPointerType)arg1 forClass:(Class)arg2;
+ (void)registerRenderWithIterationSupportIMP:(CDUnknownFunctionPointerType)arg1 boolValueIMP:(CDUnknownFunctionPointerType)arg2 forClass:(Class)arg3;
+ (unsigned long long)currentContentType;
+ (void)popCurrentContentType;
+ (void)pushCurrentContentType:(unsigned long long)arg1;
+ (id)currentTemplateRepository;
+ (void)popCurrentTemplateRepository;
+ (void)pushCurrentTemplateRepository:(id)arg1;
+ (id)renderingObjectWithBlock:(CDUnknownBlockType)arg1;
+ (id)renderingObjectForObject:(id)arg1;
+ (void)initialize;

@end

@interface GRMustacheNilRendering : NSObject <GRMustacheRenderingWithIterationSupport>
{
}

- (id)renderForMustacheTag:(id)arg1 asEnumerationItem:(BOOL)arg2 context:(id)arg3 HTMLSafe:(char *)arg4 error:(id *)arg5;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
@property(readonly, nonatomic) BOOL mustacheBoolValue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheBlockRendering : NSObject <GRMustacheRenderingWithIterationSupport>
{
    CDUnknownBlockType _renderingBlock;
}

- (id)renderForMustacheTag:(id)arg1 asEnumerationItem:(BOOL)arg2 context:(id)arg3 HTMLSafe:(char *)arg4 error:(id *)arg5;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
@property(readonly, nonatomic) BOOL mustacheBoolValue;
- (id)initWithRenderingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheConfiguration : NSObject <NSCopying>
{
    unsigned long long _contentType;
    NSString *_tagStartDelimiter;
    NSString *_tagEndDelimiter;
    GRMustacheContext *_baseContext;
    BOOL _locked;
}

+ (id)configuration;
+ (id)defaultConfiguration;
@property(readonly, nonatomic, getter=isLocked) BOOL locked; // @synthesize locked=_locked;
@property(retain, nonatomic) GRMustacheContext *baseContext; // @synthesize baseContext=_baseContext;
@property(copy, nonatomic) NSString *tagEndDelimiter; // @synthesize tagEndDelimiter=_tagEndDelimiter;
@property(copy, nonatomic) NSString *tagStartDelimiter; // @synthesize tagStartDelimiter=_tagStartDelimiter;
@property(nonatomic) unsigned long long contentType; // @synthesize contentType=_contentType;
- (void)assertNotLocked;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)extendBaseContextWithTagDelegate:(id)arg1;
- (void)extendBaseContextWithProtectedObject:(id)arg1;
- (void)extendBaseContextWithObject:(id)arg1;
- (void)lock;
- (id)init;
- (void)dealloc;

@end

@interface SFNotesTableViewController : NSViewController <NSTouchBarDelegate, MRTFetchedResultsControllerDelegate, SFThemeManagerStylableObject, NSMenuDelegate>
{
    BOOL _windowLocked;
    id <SFNotesTableViewControllerDelegate> _delegate;
    SFNotesTableView *_notesTableView;
    SFStyleView *_headerView;
    MRTSearchField *_notesSearchField;
    NSButton *_addNoteButton;
    NSLayoutConstraint *_topLayoutConstraint;
    NSView *_placeholderView;
    NSImageView *_placeholderImageView;
    NSButton *_lockNotesButton;
    NSLayoutConstraint *_lockNotesButtonBottomConstraint;
    SFEncryptionUIController *_encryptionUIController;
    NSArray *_selectedNotesBeforeSearch;
    NSNumber *_scrollPositionBeforeSearch;
    NSLayoutConstraint *_minimumWidthConstraint;
    MRTFetchedResultsController *_fetchedResultController;
    NSMutableIndexSet *_rowsToUpdatedAfterModelUpdate;
    SFNoteTableCellTextRenderer *_noteTableCellTextRenderer;
    SFThemeManager *_themeManager;
}

@property(retain, nonatomic) SFThemeManager *themeManager; // @synthesize themeManager=_themeManager;
@property(retain, nonatomic) SFNoteTableCellTextRenderer *noteTableCellTextRenderer; // @synthesize noteTableCellTextRenderer=_noteTableCellTextRenderer;
@property(retain, nonatomic) NSMutableIndexSet *rowsToUpdatedAfterModelUpdate; // @synthesize rowsToUpdatedAfterModelUpdate=_rowsToUpdatedAfterModelUpdate;
@property(retain, nonatomic) MRTFetchedResultsController *fetchedResultController; // @synthesize fetchedResultController=_fetchedResultController;
@property(nonatomic, getter=isWindowLocked) BOOL windowLocked; // @synthesize windowLocked=_windowLocked;
@property __weak NSLayoutConstraint *minimumWidthConstraint; // @synthesize minimumWidthConstraint=_minimumWidthConstraint;
@property(retain, nonatomic) NSNumber *scrollPositionBeforeSearch; // @synthesize scrollPositionBeforeSearch=_scrollPositionBeforeSearch;
@property(retain, nonatomic) NSArray *selectedNotesBeforeSearch; // @synthesize selectedNotesBeforeSearch=_selectedNotesBeforeSearch;
@property(retain) SFEncryptionUIController *encryptionUIController; // @synthesize encryptionUIController=_encryptionUIController;
@property __weak NSLayoutConstraint *lockNotesButtonBottomConstraint; // @synthesize lockNotesButtonBottomConstraint=_lockNotesButtonBottomConstraint;
@property __weak NSButton *lockNotesButton; // @synthesize lockNotesButton=_lockNotesButton;
@property __weak NSImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
@property __weak NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property __weak NSLayoutConstraint *topLayoutConstraint; // @synthesize topLayoutConstraint=_topLayoutConstraint;
@property __weak NSButton *addNoteButton; // @synthesize addNoteButton=_addNoteButton;
@property __weak MRTSearchField *notesSearchField; // @synthesize notesSearchField=_notesSearchField;
@property __weak SFStyleView *headerView; // @synthesize headerView=_headerView;
@property __weak SFNotesTableView *notesTableView; // @synthesize notesTableView=_notesTableView;
@property __weak id <SFNotesTableViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)isNoteVisible:(id)arg1;
- (BOOL)typeToSearchForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)tableView:(id)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (void)tableViewDidDoubleClickCell:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 progressiveIndex:(unsigned long long)arg4 forChangeType:(unsigned long long)arg5 forProgressiveChangeType:(unsigned long long)arg6 newIndex:(unsigned long long)arg7 newProgressiveIndex:(unsigned long long)arg8;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controllerWillChangeContent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)unremoveTag:(id)arg1 fromNotes:(id)arg2;
- (void)removeTag:(id)arg1 fromNotes:(id)arg2;
- (void)removeSelectedTag:(id)arg1;
- (void)unmergeNotes:(id)arg1 andResultNote:(id)arg2;
- (void)mergeNotes:(id)arg1;
- (void)merge:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)setCopyAsTags:(id)arg1;
- (void)copyHighlightedPartsOnly:(id)arg1;
- (void)copyAsRTF:(id)arg1;
- (void)copyAsPlainText:(id)arg1;
- (void)copyAsMarkDown:(id)arg1;
- (void)copyAsHTML:(id)arg1;
- (void)unarchiveSelectedNotes:(id)arg1;
- (void)archiveSelectedNotes:(id)arg1;
- (void)unpinSelectedNotes:(id)arg1;
- (void)pinSelectedNotes:(id)arg1;
- (void)restoreSelectedNotes:(id)arg1;
- (void)delete:(id)arg1;
- (void)unarchiveNotes:(id)arg1;
- (void)archiveNotes:(id)arg1;
- (void)unpinNotes:(id)arg1;
- (void)pinNotes:(id)arg1;
- (void)restoreNotes:(id)arg1;
- (BOOL)deleteNotes:(id)arg1;
- (void)addNewNote;
- (id)createNewNote;
- (void)makeSelectedNotesVisibles;
- (void)scrollToSelectedNotes;
- (struct CGPoint)scrollPointForSelectedNotesWithScrollPercentage:(double)arg1;
- (double)scrollPercentageForSelectedRows;
- (void)reloadAllAvailableRows;
- (void)updateTableRowForItem:(id)arg1;
- (void)selectPrevRow;
- (void)selectNextRow;
- (void)setSelectedNotesWithURIRepresentations:(id)arg1;
- (id)selectedNotesURIRepresentations;
- (void)setSelectedNotes:(id)arg1;
- (id)selectedOrDisplayedNotes;
- (id)selectedNotes;
- (id)currentlyDisplayedNotes;
- (unsigned long long)rowForNote:(id)arg1;
- (id)notesAtIndexes:(id)arg1;
- (id)itemAtRow:(long long)arg1;
- (void)updateSearchFieldPlaceholder;
- (void)setCurrentSearch:(id)arg1;
- (id)currentSearch;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)searchFieldUpdated:(id)arg1;
- (void)showHideTablePlaceholder;
- (void)setTopToolbarExpanded:(BOOL)arg1 animated:(BOOL)arg2;
- (void)copy:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)reinsertTableSeparators;
- (void)themeManagerDidChangeStyles:(id)arg1;
- (void)themeManagerWillChangeStyles:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)setRepresentedObject:(id)arg1;
- (void)viewDidLoad;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFClickableDraggableView : NSControl <NSDraggingSource, NSPasteboardItemDataProvider, NSAccessibilityButton>
{
    BOOL _isDragging;
    BOOL _userHasClicked;
    BOOL _dragEnabled;
    id <NSPasteboardItemDataProvider><SFClickableDraggableViewDraggingDataProvider> _draggingDataProvider;
    NSImage *_image;
    CIImage *_darkImageMask;
    NSString *_voiceOverLabel;
    NSString *_viewIdentifier;
}

@property BOOL dragEnabled; // @synthesize dragEnabled=_dragEnabled;
@property BOOL userHasClicked; // @synthesize userHasClicked=_userHasClicked;
@property BOOL isDragging; // @synthesize isDragging=_isDragging;
@property(retain, nonatomic) NSString *viewIdentifier; // @synthesize viewIdentifier=_viewIdentifier;
@property(retain, nonatomic) NSString *voiceOverLabel; // @synthesize voiceOverLabel=_voiceOverLabel;
@property(retain, nonatomic) CIImage *darkImageMask; // @synthesize darkImageMask=_darkImageMask;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property __weak id <NSPasteboardItemDataProvider><SFClickableDraggableViewDraggingDataProvider> draggingDataProvider; // @synthesize draggingDataProvider=_draggingDataProvider;
- (void).cxx_destruct;
- (BOOL)accessibilityPerformPress;
- (id)accessibilityLabel;
- (void)drawRect:(struct CGRect)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3;
- (void)mouseDragged:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFSidebarCellView : NSTableCellView
{
    NSImageView *_iconImageView;
    NSString *_voiceOverLabel;
}

@property(retain, nonatomic) NSString *voiceOverLabel; // @synthesize voiceOverLabel=_voiceOverLabel;
@property __weak NSImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
- (void).cxx_destruct;
- (void)setHighlighted:(BOOL)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFNoteEditorViewController : NSViewController <SFNoteTextCompletionViewControllerDelegate, NSTouchBarDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate, NSTextViewDelegate, SFNoteTextViewDelegate, SFNoteTextStyleEditorViewControllerDelegate, SFNoteTextViewTextChangeDelegate, SFNoteTextAttachmentConfigurator>
{
    BOOL _autocompleteEnabled;
    BOOL _overscrollEnabled;
    BOOL _usingTemporarySearchHighlights;
    BOOL _preventDelegateDidChangeSelection;
    id <SFNoteEditorViewControllerDelegate> _delegate;
    SFNoteEditorCoreController *_noteEditorCoreController;
    SFEditorAutoCompleteCoreController *_editorAutoCompleteCoreController;
    SFEditorStateController *_editorStateController;
    SFNoteTextCompletionWindowController *_textCompletionWindowController;
    NSArray *_textCompletionObservers;
    NSScrollView *_noteTextScrollView;
    SFNoteTextView *_noteTextView;
    SFNotesActionsViewController *_notesActionsViewController;
    NSLayoutConstraint *_actionButtonsViewTopLayoutConstraint;
    NSView *_headerDraggingView;
    NSWindowController *_textStyleEditorDetachedWindowController;
    NSTouchBarItem *_styleTouchBarItem;
    NSTouchBarItem *_headersTouchBarItem;
    NSTouchBarItem *_todoTouchBarItem;
    NSTouchBarItem *_boldTouchBarItem;
    NSTouchBarItem *_italicTouchBarItem;
    NSTouchBarItem *_underlineTouchBarItem;
    NSTouchBarItem *_headersPopoverH1TouchBarItem;
    NSTouchBarItem *_headersPopoverH2TouchBarItem;
    NSTouchBarItem *_headersPopoverH3TouchBarItem;
    NSTouchBarItem *_headersPopoverH4TouchBarItem;
    NSTouchBarItem *_headersPopoverH5TouchBarItem;
    NSTouchBarItem *_headersPopoverH6TouchBarItem;
    NSButton *_stylePopoverH1Button;
    NSButton *_stylePopoverH2Button;
    NSButton *_stylePopoverH3Button;
    NSButton *_stylePopoverLineSeparatorButton;
    NSButton *_stylePopoverBoldButton;
    NSButton *_stylePopoverItalicButton;
    NSButton *_stylePopoverUnderlineButton;
    NSButton *_stylePopoverStrikeButton;
    NSButton *_stylePopoverLinkButton;
    NSButton *_stylePopoverUnorderedListButton;
    NSButton *_stylePopoverOrderedListButton;
    NSButton *_stylePopoverQuoteButton;
    NSButton *_stylePopoverTodoButton;
    NSButton *_stylePopoverInlineCodeButton;
    NSButton *_stylePopoverMultilineCodeButton;
    NSButton *_stylePopoverMarkerButton;
    NSButton *_stylePopoverFileButton;
    SFNoteTitledLinkEditorViewController *_titledLinkEditorViewController;
    SFNoteTextAttachmentConfigurator *_textAttachmentConfigurator;
    SFCoreLocationManager *_coreLocationManager;
    SFNoteStyleEditor *_noteStyleEditor;
    SFNoteTextStyleEditorViewController *_stylesViewController;
    NSData *_currentNoteVectorClock;
    NSTimer *_autosaveTimer;
    NSMutableArray *_observerTokens;
    SFManagedObjectObserver *_noteObserver;
}

@property BOOL preventDelegateDidChangeSelection; // @synthesize preventDelegateDidChangeSelection=_preventDelegateDidChangeSelection;
@property(retain) SFManagedObjectObserver *noteObserver; // @synthesize noteObserver=_noteObserver;
@property(retain) NSMutableArray *observerTokens; // @synthesize observerTokens=_observerTokens;
@property(nonatomic) BOOL usingTemporarySearchHighlights; // @synthesize usingTemporarySearchHighlights=_usingTemporarySearchHighlights;
@property(retain) NSTimer *autosaveTimer; // @synthesize autosaveTimer=_autosaveTimer;
@property(retain, nonatomic) NSData *currentNoteVectorClock; // @synthesize currentNoteVectorClock=_currentNoteVectorClock;
@property __weak SFNoteTextStyleEditorViewController *stylesViewController; // @synthesize stylesViewController=_stylesViewController;
@property(retain) SFNoteStyleEditor *noteStyleEditor; // @synthesize noteStyleEditor=_noteStyleEditor;
@property(retain) SFCoreLocationManager *coreLocationManager; // @synthesize coreLocationManager=_coreLocationManager;
@property(retain) SFNoteTextAttachmentConfigurator *textAttachmentConfigurator; // @synthesize textAttachmentConfigurator=_textAttachmentConfigurator;
@property __weak SFNoteTitledLinkEditorViewController *titledLinkEditorViewController; // @synthesize titledLinkEditorViewController=_titledLinkEditorViewController;
@property(nonatomic) __weak NSButton *stylePopoverFileButton; // @synthesize stylePopoverFileButton=_stylePopoverFileButton;
@property(nonatomic) __weak NSButton *stylePopoverMarkerButton; // @synthesize stylePopoverMarkerButton=_stylePopoverMarkerButton;
@property(nonatomic) __weak NSButton *stylePopoverMultilineCodeButton; // @synthesize stylePopoverMultilineCodeButton=_stylePopoverMultilineCodeButton;
@property(nonatomic) __weak NSButton *stylePopoverInlineCodeButton; // @synthesize stylePopoverInlineCodeButton=_stylePopoverInlineCodeButton;
@property(nonatomic) __weak NSButton *stylePopoverTodoButton; // @synthesize stylePopoverTodoButton=_stylePopoverTodoButton;
@property(nonatomic) __weak NSButton *stylePopoverQuoteButton; // @synthesize stylePopoverQuoteButton=_stylePopoverQuoteButton;
@property(nonatomic) __weak NSButton *stylePopoverOrderedListButton; // @synthesize stylePopoverOrderedListButton=_stylePopoverOrderedListButton;
@property(nonatomic) __weak NSButton *stylePopoverUnorderedListButton; // @synthesize stylePopoverUnorderedListButton=_stylePopoverUnorderedListButton;
@property(nonatomic) __weak NSButton *stylePopoverLinkButton; // @synthesize stylePopoverLinkButton=_stylePopoverLinkButton;
@property(nonatomic) __weak NSButton *stylePopoverStrikeButton; // @synthesize stylePopoverStrikeButton=_stylePopoverStrikeButton;
@property(nonatomic) __weak NSButton *stylePopoverUnderlineButton; // @synthesize stylePopoverUnderlineButton=_stylePopoverUnderlineButton;
@property(nonatomic) __weak NSButton *stylePopoverItalicButton; // @synthesize stylePopoverItalicButton=_stylePopoverItalicButton;
@property(nonatomic) __weak NSButton *stylePopoverBoldButton; // @synthesize stylePopoverBoldButton=_stylePopoverBoldButton;
@property(nonatomic) __weak NSButton *stylePopoverLineSeparatorButton; // @synthesize stylePopoverLineSeparatorButton=_stylePopoverLineSeparatorButton;
@property(nonatomic) __weak NSButton *stylePopoverH3Button; // @synthesize stylePopoverH3Button=_stylePopoverH3Button;
@property(nonatomic) __weak NSButton *stylePopoverH2Button; // @synthesize stylePopoverH2Button=_stylePopoverH2Button;
@property(nonatomic) __weak NSButton *stylePopoverH1Button; // @synthesize stylePopoverH1Button=_stylePopoverH1Button;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH6TouchBarItem; // @synthesize headersPopoverH6TouchBarItem=_headersPopoverH6TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH5TouchBarItem; // @synthesize headersPopoverH5TouchBarItem=_headersPopoverH5TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH4TouchBarItem; // @synthesize headersPopoverH4TouchBarItem=_headersPopoverH4TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH3TouchBarItem; // @synthesize headersPopoverH3TouchBarItem=_headersPopoverH3TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH2TouchBarItem; // @synthesize headersPopoverH2TouchBarItem=_headersPopoverH2TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersPopoverH1TouchBarItem; // @synthesize headersPopoverH1TouchBarItem=_headersPopoverH1TouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *underlineTouchBarItem; // @synthesize underlineTouchBarItem=_underlineTouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *italicTouchBarItem; // @synthesize italicTouchBarItem=_italicTouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *boldTouchBarItem; // @synthesize boldTouchBarItem=_boldTouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *todoTouchBarItem; // @synthesize todoTouchBarItem=_todoTouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *headersTouchBarItem; // @synthesize headersTouchBarItem=_headersTouchBarItem;
@property(nonatomic) __weak NSTouchBarItem *styleTouchBarItem; // @synthesize styleTouchBarItem=_styleTouchBarItem;
@property(retain) NSWindowController *textStyleEditorDetachedWindowController; // @synthesize textStyleEditorDetachedWindowController=_textStyleEditorDetachedWindowController;
@property(retain) NSView *headerDraggingView; // @synthesize headerDraggingView=_headerDraggingView;
@property __weak NSLayoutConstraint *actionButtonsViewTopLayoutConstraint; // @synthesize actionButtonsViewTopLayoutConstraint=_actionButtonsViewTopLayoutConstraint;
@property __weak SFNotesActionsViewController *notesActionsViewController; // @synthesize notesActionsViewController=_notesActionsViewController;
@property(nonatomic) BOOL overscrollEnabled; // @synthesize overscrollEnabled=_overscrollEnabled;
@property(nonatomic) BOOL autocompleteEnabled; // @synthesize autocompleteEnabled=_autocompleteEnabled;
@property(retain) SFNoteTextView *noteTextView; // @synthesize noteTextView=_noteTextView;
@property __weak NSScrollView *noteTextScrollView; // @synthesize noteTextScrollView=_noteTextScrollView;
@property(retain) NSArray *textCompletionObservers; // @synthesize textCompletionObservers=_textCompletionObservers;
@property(retain) SFNoteTextCompletionWindowController *textCompletionWindowController; // @synthesize textCompletionWindowController=_textCompletionWindowController;
@property(retain) SFEditorStateController *editorStateController; // @synthesize editorStateController=_editorStateController;
@property(retain) SFEditorAutoCompleteCoreController *editorAutoCompleteCoreController; // @synthesize editorAutoCompleteCoreController=_editorAutoCompleteCoreController;
@property(retain) SFNoteEditorCoreController *noteEditorCoreController; // @synthesize noteEditorCoreController=_noteEditorCoreController;
@property __weak id <SFNoteEditorViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)saveNote:(id)arg1 forceSave:(BOOL)arg2;
- (void)saveNote:(id)arg1;
- (void)markForAutoSave;
- (void)autoSaveTimerFire:(id)arg1;
- (void)actualSize:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)insertISO8601Hours:(id)arg1;
- (void)insertHours:(id)arg1;
- (void)insertISO8601ShortDate:(id)arg1;
- (void)insertShortDate:(id)arg1;
- (void)insertISO8601LongDate:(id)arg1;
- (void)insertLongDate:(id)arg1;
- (void)insertISO8601LongDateHours:(id)arg1;
- (void)insertLongDateHours:(id)arg1;
- (BOOL)selectionNotEmpty;
- (BOOL)selectionContainsIncompletedTodo;
- (BOOL)rangeContainsCompletedTodos:(struct _NSRange)arg1;
- (BOOL)selectionContainsCompletedTodos;
- (BOOL)selectionContainCodeBlock;
- (BOOL)selectionContainsImages;
- (id)fileUrlFromCurrentSelection;
- (void)moveParagraphDown:(id)arg1;
- (void)moveParagraphUp:(id)arg1;
- (void)shiftLeft:(id)arg1;
- (void)shiftRight:(id)arg1;
- (void)openSelectedFile:(id)arg1;
- (void)saveFileAs:(id)arg1;
- (void)pasteFromTXT:(id)arg1;
- (BOOL)pasteFromRTFFromPasteboard:(id)arg1;
- (void)pasteFromRTF:(id)arg1;
- (void)pasteFromCode:(id)arg1;
- (void)pasteFromHTML:(id)arg1;
- (void)pasteFromMarkdown:(id)arg1;
- (void)copyCodeBlock:(id)arg1;
- (void)copyHeaderLink:(id)arg1;
- (void)setCopyAsTags:(id)arg1;
- (void)copyAsRTF:(id)arg1;
- (void)copyAsPlainText:(id)arg1;
- (void)copyAsMarkDown:(id)arg1;
- (void)copyAsHTML:(id)arg1;
- (void)printDebugNote:(id)arg1;
- (void)noteEndEditing:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setStyleEditorEnabled:(BOOL)arg1;
- (void)validateStyleEditor;
- (BOOL)canEditStyles;
- (void)toggleStyleEditor:(id)arg1;
- (void)insertFile:(id)arg1;
- (void)insertLink:(id)arg1;
- (void)openTitledURLEditorForCharactersRange:(struct _NSRange)arg1;
- (void)openHeaderEditorForCharactersRange:(struct _NSRange)arg1;
- (BOOL)isSearchUIVisible;
- (void)setSearchString:(id)arg1;
- (void)showImagesAsSmallThumbnails;
- (void)showImagesAsNormalThumbnails;
- (void)showImagesAsNormalThumbnails:(id)arg1;
- (void)showImagesAsSmallThumbnails:(id)arg1;
- (void)toggleShowImagesAsSmallThumbnails:(id)arg1;
- (void)markCheckboxesAsIncomplete:(id)arg1;
- (void)markCheckboxesAsCompleted:(id)arg1;
- (void)toggleCheckboxes:(id)arg1;
- (void)autoFoldCompletedTodo:(id)arg1;
- (void)foldCompletedTodo:(id)arg1;
- (void)unfoldCompletedTodo:(id)arg1;
- (void)insertCurrentLocation:(id)arg1;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (void)updateTextAttachmentsMaxSizes;
- (double)attachmentsMaxHeight;
- (double)attachmentsMaxWidth;
- (BOOL)sfNoteTextView:(id)arg1 shouldInsertTab:(BOOL)arg2;
- (BOOL)sfNoteTextViewShouldInsertNewLine:(id)arg1;
- (void)sfNoteTextViewDidChangeText:(id)arg1;
- (void)textView:(id)arg1 willRestyleWithThemeManager:(id)arg2;
- (void)insertMenuItem:(id)arg1 inMenu:(id)arg2 afterSelector:(SEL)arg3;
- (BOOL)textViewCanOpenQuickLook:(id)arg1;
- (void)textView:(id)arg1 rightClickMenu:(id)arg2;
- (BOOL)textView:(id)arg1 canImportPDFData:(id)arg2;
- (BOOL)textView:(id)arg1 canImportTiffData:(id)arg2;
- (BOOL)textView:(id)arg1 canImportFilePromise:(id)arg2;
- (BOOL)textView:(id)arg1 canImportFileURLs:(id)arg2;
- (void)textView:(id)arg1 didProcessKeyDown:(id)arg2;
- (void)textView:(id)arg1 willProcessKeyDown:(id)arg2 handledByDelegate:(char *)arg3;
- (void)textView:(id)arg1 willReadFromPasteboard:(id)arg2 handledByDelegate:(char *)arg3;
- (id)textView:(id)arg1 didReceiveFilesDrop:(id)arg2 atGlyphIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 mouseMoved:(id)arg2 handledByDelegate:(char *)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)clickOnCheckboxWithAttachment:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (id)undoManagerForTextView:(id)arg1;
- (void)updateOverscrolling;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (void)scrollToCharacterRange:(struct _NSRange)arg1;
- (void)scrollToCursor;
- (void)enableTextViewScroll;
- (void)disableTextViewScroll;
- (id)managedObjectContext;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeAllObservers;
- (void)setupObservers;
- (void)dealloc;
- (void)updateTextViewMarkupSyntax;
- (void)updateRepresentedObject;
- (void)setRepresentedObject:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (id)keycodeToSkip;
- (void)closeTextCompletionAnimated:(BOOL)arg1;
- (void)closeTextCompletion;
- (struct CGRect)selectedRectFrameForCompletionAtRange:(struct _NSRange)arg1;
- (void)openTextCompletionAtRange:(struct _NSRange)arg1;
- (BOOL)isTextCompletionOpen;
- (void)tearDownCompletionObservers;
- (void)setupCompletionObservers;
- (void)insertCompletionItem:(id)arg1;
- (void)insertCurrentlySelectedCompletionItem;
- (void)textCompletionViewController:(id)arg1 didSelectCompletionItem:(id)arg2;
- (long long)numberOfAvailableCompletions;
- (void)updateTextCompletion;
- (id)autoCompleteCoreController;
- (BOOL)handleKeyDownEventForAutoComplete:(id)arg1 inTextView:(id)arg2;
- (BOOL)autocompleteHandledKeyDownEvent:(id)arg1 inTextView:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)applyMarkStyle:(id)arg1;
- (void)applyMultilineCodeStyle:(id)arg1;
- (void)applyLineSeparatorStyle:(id)arg1;
- (void)applyH6Style:(id)arg1;
- (void)applyH5Style:(id)arg1;
- (void)applyH4Style:(id)arg1;
- (void)applyH3Style:(id)arg1;
- (void)applyH2Style:(id)arg1;
- (void)applyH1Style:(id)arg1;
- (void)applyNoHeaderStyle:(id)arg1;
- (void)applyQuoteStyle:(id)arg1;
- (void)applyTodoStyle:(id)arg1;
- (void)applyOrderedListStyle:(id)arg1;
- (void)applyUnorderedListStyle:(id)arg1;
- (void)applyInlineCodeStyle:(id)arg1;
- (void)applyStrikedStyle:(id)arg1;
- (void)applyUnderlineStyle:(id)arg1;
- (void)applyItalicStyle:(id)arg1;
- (void)applyBoldStyle:(id)arg1;
- (void)applyStylerResults:(id)arg1;
- (void)loadEditingStateForNote:(id)arg1;
- (void)saveEditingStateForNote:(id)arg1;
- (id)editorStateForNote:(id)arg1 createIfNecessary:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteHistoryState : NSObject
{
    SFNote *_note;
    id <SFSidebarItem> _sidebarItem;
}

@property(retain) id <SFSidebarItem> sidebarItem; // @synthesize sidebarItem=_sidebarItem;
@property(retain) SFNote *note; // @synthesize note=_note;
- (void).cxx_destruct;

@end

@interface SFNoteHistoryManager : NSObject
{
    NSMutableArray *_states;
    long long _currentStateIndex;
    long long _maximumHistoryStates;
}

@property(nonatomic) long long maximumHistoryStates; // @synthesize maximumHistoryStates=_maximumHistoryStates;
@property(nonatomic) long long currentStateIndex; // @synthesize currentStateIndex=_currentStateIndex;
@property(retain) NSMutableArray *states; // @synthesize states=_states;
- (void).cxx_destruct;
- (BOOL)hasPrevState;
- (BOOL)hasNextState;
- (BOOL)hasCurrentState;
- (id)prevState;
- (id)nextState;
- (id)currentState;
- (void)cleanInvalidStates;
- (void)cleanEccedingStates;
- (void)cleanForwardHistory;
- (void)addNote:(id)arg1 sidebarItem:(id)arg2;
- (id)init;

@end

@interface SFHTMLLinkUtils : NSObject
{
}

+ (void)convertRelativeToAbsoluteURLInHTML:(id)arg1 withURL:(id)arg2;

@end

@interface SFMDNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    NSString *_attachmentsRelativePath;
    NSDictionary *_fileDictionary;
}

@property(retain) NSDictionary *fileDictionary; // @synthesize fileDictionary=_fileDictionary;
@property(retain) NSString *attachmentsRelativePath; // @synthesize attachmentsRelativePath=_attachmentsRelativePath;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)correctFileNamesInNoteText:(id)arg1 withDictionary:(id)arg2;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)exportNoteText:(id)arg1 withFilenane:(id)arg2 toURL:(id)arg3 error:(id *)arg4;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFWatchNoteExporter : NSObject
{
    long long _syntax;
}

@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
- (id)exportNote:(id)arg1 error:(id *)arg2;
- (id)exportNotes:(id)arg1 error:(id *)arg2;

@end

@interface GRMustacheSectionTag : GRMustacheTag
{
    GRMustacheExpression *_expression;
    BOOL _inverted;
    NSString *_templateString;
    struct _NSRange _innerRange;
    GRMustacheTemplateAST *_templateAST;
}

+ (id)sectionTagWithExpression:(id)arg1 inverted:(BOOL)arg2 templateString:(id)arg3 innerRange:(struct _NSRange)arg4 templateAST:(id)arg5;
- (BOOL)isInverted;
@property(readonly, retain, nonatomic) GRMustacheTemplateAST *templateAST; // @synthesize templateAST=_templateAST;
@property(readonly, retain, nonatomic) GRMustacheExpression *expression; // @synthesize expression=_expression;
- (id)initWithExpression:(id)arg1 inverted:(BOOL)arg2 templateString:(id)arg3 innerRange:(struct _NSRange)arg4 templateAST:(id)arg5;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (id)renderContentWithContext:(id)arg1 HTMLSafe:(char *)arg2 error:(id *)arg3;
- (unsigned long long)type;
- (id)innerTemplateString;
- (id)description;
- (void)dealloc;

@end

@interface SFEPubNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    BOOL _exportCustomNoteInfo;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    long long _bundleType;
}

@property(nonatomic) BOOL exportCustomNoteInfo; // @synthesize exportCustomNoteInfo=_exportCustomNoteInfo;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long bundleType; // @synthesize bundleType=_bundleType;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)thumbForImageAtURL:(id)arg1;
- (id)prepareImageNoteFiles:(id)arg1 withFileWriter:(id)arg2 andResultingText:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFTodaySidebarItem : SFStaticSidebarItem
{
    BOOL hasNotes;
    id <SFSidebarItem> _father;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(nonatomic) id <SFSidebarItem> father; // @synthesize father=_father;
@property(nonatomic) BOOL hasNotes; // @synthesize hasNotes;
- (id)uniqueIdentifier;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFMarkedPreviewManager : NSObject
{
    NSMutableDictionary *_openFilePreviews;
    NSMutableDictionary *_runningTimers;
    NSMutableDictionary *_openNotes;
}

@property(retain) NSMutableDictionary *openNotes; // @synthesize openNotes=_openNotes;
@property(retain) NSMutableDictionary *runningTimers; // @synthesize runningTimers=_runningTimers;
@property(retain) NSMutableDictionary *openFilePreviews; // @synthesize openFilePreviews=_openFilePreviews;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)timerExpired:(id)arg1;
- (void)setTimerForNote:(id)arg1;
- (id)previewUrlForNote:(id)arg1 create:(BOOL)arg2;
- (void)openNoteInMarked:(id)arg1;
- (id)init;

@end

@interface SFCheckBoxTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isFullLine;
- (void)drawCheckboxCheckForCheckboxRect:(struct CGRect)arg1;
- (void)drawCheckboxBodyForCheckboxRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentRightSpacing;
- (double)checkboxCornerRadiusForRect:(struct CGRect)arg1;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (void)toggleCheck;
- (void)uncheck;
- (void)check;
- (BOOL)isMarkdown;
- (BOOL)isChecked;

@end

@interface SFExternalChanges : _SFExternalChanges
{
}

+ (id)newExternalChangeForModelObject:(id)arg1 changeType:(unsigned long long)arg2;
+ (id)newExternalChangesForInsertedObjects:(id)arg1 updatedObjects:(id)arg2 deletedObjects:(id)arg3 inManagedObjectContext:(id)arg4;
+ (void)updateExternalChangesInManagedObjectContext:(id)arg1;
+ (id)mergeExternalChangesInManagedObjectContext:(id)arg1;
+ (id)externalChangesInManagedObjectContext:(id)arg1;
- (id)managedObjectIDInManagedObjectContext:(id)arg1;

@end

@interface SFTextViewOnTopView : NSView
{
    NSTrackingArea *_cursorTrackingArea;
}

@property(retain) NSTrackingArea *cursorTrackingArea; // @synthesize cursorTrackingArea=_cursorTrackingArea;
- (void).cxx_destruct;
- (void)mouseMoved:(id)arg1;
- (void)resetCursorRects;
- (void)updateTrackingAreas;
- (void)setupTrackingArea;
- (id)initWithCoder:(id)arg1;

@end

@interface SFAddress : _SFAddress
{
}

@end

@interface GRMustacheTag : NSObject <GRMustacheTemplateASTNode>
{
}

- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (id)resolveTemplateASTNode:(id)arg1;
@property(readonly, nonatomic, getter=isInverted) BOOL inverted;
- (id)renderContentWithContext:(id)arg1 HTMLSafe:(char *)arg2 error:(id *)arg3;
@property(readonly, nonatomic) NSString *innerTemplateString;
@property(readonly, nonatomic) GRMustacheTemplateRepository *templateRepository;
@property(readonly, nonatomic) unsigned long long type;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesIconStyleKit : NSObject
{
}

+ (id)imageOfEncryptionPasswordButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (id)imageOfEncryptionTouchIDButtonSmallWithStrokeColor:(id)arg1;
+ (id)imageOfEncryptionLockAllNotesButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 shadowColor:(id)arg4;
+ (id)imageOfEncryptionTouchIDButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (id)imageOfEncryptionFormEnterButtonWithFillColor:(id)arg1;
+ (id)imageOfTouchBarUnarchiveIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarArchiveIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleMarkerIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarGoToIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarSidebar1ColumnIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarSidebar2ColumnsIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarNoteIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarInfoIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarSidebar3ColumnsIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStylesIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarNewNoteIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarPinIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarUnpinIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarRestoreIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarTrashIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleBoldIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleUnderlineIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleQuoteIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleOLIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH2IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleLinkIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH6IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH5IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleHRIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleStrikeIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleItalicIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleCodeBlockIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH4IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleCheckboxIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleInlineCodeIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH3IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleClipIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleHIconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleH1IconWithStrokeColor:(id)arg1;
+ (id)imageOfTouchBarStyleULIconWithStrokeColor:(id)arg1;
+ (id)imageOfDefaultThemeDarkWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (id)imageOfDefaultThemeLightWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (id)imageOfProBadgeSmallWithFillColor:(id)arg1 iconTextColor:(id)arg2 proLabel:(id)arg3;
+ (id)imageOfProBadgeWithFillColor:(id)arg1 iconTextColor:(id)arg2 proLabel:(id)arg3;
+ (id)imageOfActionMoreIconWithStrokeColor:(id)arg1;
+ (id)imageOfHeadingPopoverNoHeaderIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfHeadingPopoverLinkToHeaderIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfSidebarSyncSyncingIconWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarToggle3ColumnsBadgeWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfActionToggleSidebarIconBadgeWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfNoteTableCellConflictIconNoBackgroundWithStrokeColor:(id)arg1;
+ (id)imageOfNoteTableCellConflictIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfSidebarSyncExpectedErrorIconWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarSyncUnexpectedErrorIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfPreferencesSyncIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionUnarchiveWithStrokeColor:(id)arg1;
+ (id)imageOfActionToggleOnTopWithStrokeColor:(id)arg1;
+ (id)imageOfActionToggleOnTopActiveWithStrokeColor:(id)arg1;
+ (id)imageOfStyleMarkerIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleHIconWithFillColor:(id)arg1;
+ (id)imageOfStyleH5IconWithFillColor:(id)arg1;
+ (id)imageOfStyleH6IconWithFillColor:(id)arg1;
+ (id)imageOfStyleH4IconWithFillColor:(id)arg1;
+ (id)imageOfLockedExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 iconTextColor:(id)arg4 buttonTitle:(id)arg5 proLabel:(id)arg6;
+ (id)imageOfPurchaseThemeLockWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (id)imageOfPurchaseThemeIconWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (id)imageOfPurchaseSyncIconWithStrokeColor:(id)arg1;
+ (id)imageOfPushButtonWithSize:(struct CGSize)arg1 strokeColor:(id)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4 shadowColor:(id)arg5 buttonTitle:(id)arg6;
+ (id)imageOfSidebarCloseDisclosureWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarOpenDisclosureWithStrokeColor:(id)arg1;
+ (id)imageOfTableViewActionTrashWithStrokeColor:(id)arg1;
+ (id)imageOfTableViewActionRestoreWithStrokeColor:(id)arg1;
+ (id)imageOfTableViewActionDeleteWithStrokeColor:(id)arg1;
+ (id)imageOfTableViewActionUnpinWithStrokeColor:(id)arg1;
+ (id)imageOfTableViewActionPinWithStrokeColor:(id)arg1;
+ (id)imageOfRtfExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfPreferencesTypographyIconWithStrokeColor:(id)arg1;
+ (id)imageOfPreferencesThemesIconWithStrokeColor:(id)arg1 strokeLightColor:(id)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4;
+ (id)imageOfStyleClipIconWithFillColor:(id)arg1;
+ (id)imageOfPreferencesDebugIconWithStrokeColor:(id)arg1;
+ (id)imageOfPreferencesProIconWithStrokeColor:(id)arg1;
+ (id)imageOfDocxExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfImagesExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfSidebarCloudIconWithStrokeColor:(id)arg1;
+ (id)imageOfImagePlaceholderWithSize:(struct CGSize)arg1 strokeColor:(id)arg2 strokeLightColor:(id)arg3 fillColor:(id)arg4;
+ (id)imageOfSidebarSettingIconsWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (id)imageOfPdfExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfHtmlExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfMdExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfTxtExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfJpgExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (id)imageOfPanelCloseIconWithStrokeColor:(id)arg1;
+ (id)imageOfStyleLinkIconWithFillColor:(id)arg1;
+ (id)imageOfStyleCheckboxIconWithFillColor:(id)arg1;
+ (id)imageOfStyleCodeBlockIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleInlineCodeIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleQuoteIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleOLIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleULIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleStrikeIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleUnderlineIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleItalicIconWithFillColor:(id)arg1;
+ (id)imageOfStyleBoldIconWithFillColor:(id)arg1;
+ (id)imageOfStyleHRIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (id)imageOfStyleH3IconWithFillColor:(id)arg1;
+ (id)imageOfStyleH2IconWithFillColor:(id)arg1;
+ (id)imageOfStyleH1IconWithFillColor:(id)arg1;
+ (id)imageOfSidebarToggle1ColumnWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarToggle2ColumnsWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarToggle3ColumnsWithStrokeColor:(id)arg1;
+ (id)imageOfPanelIndicatorIconWithFillColor:(id)arg1;
+ (id)imageOfPanelDetachIconWithStrokeColor:(id)arg1;
+ (id)imageOfInfoCopyNoteLinkIconWithStrokeColor:(id)arg1;
+ (id)imageOfInfoCopyNoteTextIconWithStrokeColor:(id)arg1;
+ (id)imageOfInfoPinIconWithStrokeColor:(id)arg1;
+ (id)imageOfInfoUnpinIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionToggleSidebarIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionStylesIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionDeleteIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionRestoreIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionTrashIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionShareIconWithStrokeColor:(id)arg1;
+ (id)imageOfActionInfoIconWithStrokeColor:(id)arg1;
+ (id)imageOfNoteTableNewNoteIconMacWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarTagIconWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarTrashIconWithStrokeColor:(id)arg1 strokeLightColor:(id)arg2;
+ (id)imageOfSidebarSpecialIconWithStrokeColor:(id)arg1;
+ (id)imageOfSidebarNoteIconWithStrokeColor:(id)arg1;
+ (id)imageOfNoteTableCellPinIconWithStrokeColor:(id)arg1;
+ (void)drawEncryptionPasswordButtonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 fillColor:(id)arg4 accentFillColor:(id)arg5 encryptionBoxShadow:(id)arg6;
+ (void)drawEncryptionPasswordButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (void)drawEncryptionTouchIDButtonSmallWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3;
+ (void)drawEncryptionTouchIDButtonSmallWithStrokeColor:(id)arg1;
+ (void)drawEncryptionFormBGWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2 fillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (void)drawEncryptionLockAllNotesButtonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 fillColor:(id)arg4 accentFillColor:(id)arg5 shadowColor:(id)arg6;
+ (void)drawEncryptionLockAllNotesButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 shadowColor:(id)arg4;
+ (void)drawEncryptionTouchIDButtonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 fillColor:(id)arg4 accentFillColor:(id)arg5 encryptionBoxShadow:(id)arg6;
+ (void)drawEncryptionTouchIDButtonWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (void)drawEncryptionFormEnterButtonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawEncryptionFormEnterButtonWithFillColor:(id)arg1;
+ (void)drawEncryptionFormBGWithHoleWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2 fillColor:(id)arg3 encryptionBoxShadow:(id)arg4;
+ (void)drawTouchBarUnarchiveIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarArchiveIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleMarkerIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarGoToIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarSidebar1ColumnIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarSidebar2ColumnsIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarNoteIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarInfoIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarSidebar3ColumnsIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStylesIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarNewNoteIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarPinIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarUnpinIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarRestoreIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarTrashIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleBoldIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleUnderlineIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleQuoteIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleOLIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH2IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleLinkIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH6IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH5IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleHRIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleStrikeIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleItalicIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleCodeBlockIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH4IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleCheckboxIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleInlineCodeIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH3IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleClipIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleHIconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleH1IconWithStrokeColor:(id)arg1;
+ (void)drawTouchBarStyleULIconWithStrokeColor:(id)arg1;
+ (void)drawDefaultThemeDarkWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 fillColor:(id)arg4;
+ (void)drawDefaultThemeDarkWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (void)drawDefaultThemeLightWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 fillColor:(id)arg4;
+ (void)drawDefaultThemeLightWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (void)drawProBadgeSmallWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4 proLabel:(id)arg5;
+ (void)drawProBadgeSmallWithFillColor:(id)arg1 iconTextColor:(id)arg2 proLabel:(id)arg3;
+ (void)drawProBadgeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4 proLabel:(id)arg5;
+ (void)drawProBadgeWithFillColor:(id)arg1 iconTextColor:(id)arg2 proLabel:(id)arg3;
+ (void)drawActionMoreIconWithStrokeColor:(id)arg1;
+ (void)drawHeadingPopoverNoHeaderIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawHeadingPopoverLinkToHeaderIconWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 accentFillColor:(id)arg4;
+ (void)drawHeadingPopoverLinkToHeaderIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawSidebarSyncSyncingIconWithStrokeColor:(id)arg1;
+ (void)drawSidebarToggle3ColumnsBadgeWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawActionToggleSidebarIconBadgeWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawNoteTableCellConflictIconNoBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3;
+ (void)drawNoteTableCellConflictIconNoBackgroundWithStrokeColor:(id)arg1;
+ (void)drawNoteTableCellConflictIconWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 strokeColor:(id)arg3 accentFillColor:(id)arg4;
+ (void)drawNoteTableCellConflictIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawSidebarSyncExpectedErrorIconWithStrokeColor:(id)arg1;
+ (void)drawSidebarSyncUnexpectedErrorIconWithStrokeColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawPreferencesSyncIconWithStrokeColor:(id)arg1;
+ (void)drawActionUnarchiveWithStrokeColor:(id)arg1;
+ (void)drawActionToggleOnTopWithStrokeColor:(id)arg1;
+ (void)drawActionToggleOnTopActiveWithStrokeColor:(id)arg1;
+ (void)drawStyleMarkerIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleHIconWithFillColor:(id)arg1;
+ (void)drawStyleH5IconWithFillColor:(id)arg1;
+ (void)drawStyleH6IconWithFillColor:(id)arg1;
+ (void)drawStyleH4IconWithFillColor:(id)arg1;
+ (void)drawLockedExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 accentFillColor:(id)arg3 iconTextColor:(id)arg4 buttonTitle:(id)arg5 proLabel:(id)arg6;
+ (void)drawPurchaseThemeLockWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (void)drawPurchaseThemeIconWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (void)drawPurchaseSyncIconWithStrokeColor:(id)arg1;
+ (void)drawPushButtonWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4 shadowColor:(id)arg5 buttonTitle:(id)arg6;
+ (void)drawSidebarCloseDisclosureWithStrokeColor:(id)arg1;
+ (void)drawSidebarOpenDisclosureWithStrokeColor:(id)arg1;
+ (void)drawTableViewActionTrashWithStrokeColor:(id)arg1;
+ (void)drawTableViewActionRestoreWithStrokeColor:(id)arg1;
+ (void)drawTableViewActionDeleteWithStrokeColor:(id)arg1;
+ (void)drawTableViewActionUnpinWithStrokeColor:(id)arg1;
+ (void)drawTableViewActionPinWithStrokeColor:(id)arg1;
+ (void)drawRtfExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawPreferencesTypographyIconWithStrokeColor:(id)arg1;
+ (void)drawPreferencesThemesIconWithStrokeColor:(id)arg1 strokeLightColor:(id)arg2 fillColor:(id)arg3 iconTextColor:(id)arg4;
+ (void)drawStyleClipIconWithFillColor:(id)arg1;
+ (void)drawPreferencesDebugIconWithStrokeColor:(id)arg1;
+ (void)drawPreferencesProIconWithStrokeColor:(id)arg1;
+ (void)drawDocxExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawImagesExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawSidebarCloudIconWithStrokeColor:(id)arg1;
+ (void)drawImagePlaceholderWithFrame:(struct CGRect)arg1 strokeColor:(id)arg2 strokeLightColor:(id)arg3 fillColor:(id)arg4;
+ (void)drawSidebarSettingIconsWithStrokeColor:(id)arg1 fillColor:(id)arg2;
+ (void)drawPdfExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawHtmlExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawMdExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawTxtExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawJpgExportIconWithStrokeColor:(id)arg1 fillColor:(id)arg2 iconTextColor:(id)arg3;
+ (void)drawPanelCloseIconWithStrokeColor:(id)arg1;
+ (void)drawStyleLinkIconWithFillColor:(id)arg1;
+ (void)drawStyleCheckboxIconWithFillColor:(id)arg1;
+ (void)drawStyleCodeBlockIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleInlineCodeIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleQuoteIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleOLIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleULIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleStrikeIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleUnderlineIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleItalicIconWithFillColor:(id)arg1;
+ (void)drawStyleBoldIconWithFillColor:(id)arg1;
+ (void)drawStyleHRIconWithFillColor:(id)arg1 accentFillColor:(id)arg2;
+ (void)drawStyleH3IconWithFillColor:(id)arg1;
+ (void)drawStyleH2IconWithFillColor:(id)arg1;
+ (void)drawStyleH1IconWithFillColor:(id)arg1;
+ (void)drawSidebarToggle1ColumnWithStrokeColor:(id)arg1;
+ (void)drawSidebarToggle2ColumnsWithStrokeColor:(id)arg1;
+ (void)drawSidebarToggle3ColumnsWithStrokeColor:(id)arg1;
+ (void)drawPanelIndicatorIconWithFillColor:(id)arg1;
+ (void)drawPanelDetachIconWithStrokeColor:(id)arg1;
+ (void)drawInfoCopyNoteLinkIconWithStrokeColor:(id)arg1;
+ (void)drawInfoCopyNoteTextIconWithStrokeColor:(id)arg1;
+ (void)drawInfoPinIconWithStrokeColor:(id)arg1;
+ (void)drawInfoUnpinIconWithStrokeColor:(id)arg1;
+ (void)drawActionToggleSidebarIconWithStrokeColor:(id)arg1;
+ (void)drawActionStylesIconWithStrokeColor:(id)arg1;
+ (void)drawActionDeleteIconWithStrokeColor:(id)arg1;
+ (void)drawActionRestoreIconWithStrokeColor:(id)arg1;
+ (void)drawActionTrashIconWithStrokeColor:(id)arg1;
+ (void)drawActionShareIconWithStrokeColor:(id)arg1;
+ (void)drawActionInfoIconWithStrokeColor:(id)arg1;
+ (void)drawNoteTableNewNoteIconMacWithStrokeColor:(id)arg1;
+ (void)drawSidebarTagIconWithStrokeColor:(id)arg1;
+ (void)drawSidebarTrashIconWithStrokeColor:(id)arg1 strokeLightColor:(id)arg2;
+ (void)drawSidebarSpecialIconWithStrokeColor:(id)arg1;
+ (void)drawSidebarNoteIconWithStrokeColor:(id)arg1;
+ (void)drawNoteTableCellPinIconWithStrokeColor:(id)arg1;
+ (void)initialize;

@end

@interface SFNoteServerDataID : NSManagedObjectID
{
}

@end

@interface _SFNoteServerData : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) SFNoteServerDataID *objectID;

// Remaining properties
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSData *systemFields; // @dynamic systemFields;

@end

@interface SFNoteServerDataAttributes : NSObject
{
}

+ (id)systemFields;

@end

@interface SFNoteServerDataRelationships : NSObject
{
}

+ (id)note;

@end

@interface SFNoteCopyAsCoreController : NSObject <SFNoteTextAttachmentConfigurator>
{
    NSManagedObjectContext *_managedObjectContext;
}

+ (id)subTextStorageIncludingFullLinesWithRange:(struct _NSRange)arg1 andTextStorage:(id)arg2;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)textStorageWithNote:(id)arg1;
- (id)copyAsRTFD:(id)arg1 withRange:(struct _NSRange)arg2 andTags:(BOOL)arg3;
- (id)copyAsRTF:(id)arg1 withRange:(struct _NSRange)arg2 andTags:(BOOL)arg3;
- (id)copyAsPlainText:(id)arg1 withRange:(struct _NSRange)arg2 andTags:(BOOL)arg3;
- (id)copyAsHTML:(id)arg1 withRange:(struct _NSRange)arg2 andTags:(BOOL)arg3;
- (id)copyAsMarkdown:(id)arg1 withRange:(struct _NSRange)arg2 andTags:(BOOL)arg3;
- (id)copyNotesHighlightsOnly:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsTXT:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsRTFD:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsRTF:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsPlainText:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsHTML:(id)arg1 withTags:(BOOL)arg2 withAttachments:(BOOL)arg3;
- (id)copyNotesAsHTML:(id)arg1 withTags:(BOOL)arg2;
- (id)copyNotesAsMarkdown:(id)arg1 withTags:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteSearchManager : NSObject
{
}

+ (id)defaultSearchRegexForSearchString:(id)arg1 titleSearch:(char *)arg2;
+ (id)defaultSearchRegexForSearchString:(id)arg1;
+ (id)likeOrRegexForSearchString:(id)arg1 titleSearch:(char *)arg2;
+ (id)likeOrRegexForSearchString:(id)arg1;
+ (id)quotedSearchRegularExpression;
+ (id)tagSearchRegularExpression;
+ (void)endAndBeginOfDayDatesFromDate:(id)arg1 beginDate:(id *)arg2 endDate:(id *)arg3;
+ (id)isString:(id)arg1 specialSearch:(id)arg2;
+ (id)mainSpecialForString:(id)arg1;
+ (id)lastDaySpecialSearchEndPartWithInitialPart:(id)arg1;
+ (id)attributedStringForSearchString:(id)arg1 withThemeManager:(id)arg2;
+ (id)predicateStringForSpecialSearch:(id)arg1 notSearch:(BOOL)arg2;
+ (id)predicateStringForSpecialSearch:(id)arg1;
+ (id)predicateForSearchString:(id)arg1;
+ (id)likeOrPatternForSearchString:(id)arg1 titleSearch:(char *)arg2;
+ (id)likeOrPatternForSearchString:(id)arg1;

@end

@interface GRMustacheKeyAccess : NSObject
{
}

+ (void)stopPreventingNSUndefinedKeyExceptionFromObject:(id)arg1;
+ (void)startPreventingNSUndefinedKeyExceptionFromObject:(id)arg1;
+ (void)setupNSUndefinedKeyExceptionPrevention;
+ (void)preventNSUndefinedKeyExceptionAttack;
+ (id)propertyGettersForClass:(Class)arg1;
+ (BOOL)isSafeMustacheKey:(id)arg1 forObject:(id)arg2;
+ (id)allPublicKeysForClass:(Class)arg1;
+ (void)setupSafeKeyAccessForFoundationClasses;
+ (id)valueForMustacheKey:(id)arg1 inFoundationCollectionObject:(id)arg2;
+ (BOOL)objectIsFoundationCollectionWhoseImplementationOfValueForKeyReturnsAnotherCollection:(id)arg1;
+ (id)valueForMustacheKey:(id)arg1 inObject:(id)arg2 unsafeKeyAccess:(BOOL)arg3;
+ (void)initialize;

@end

@interface SFStaticNote : _SFStaticNote
{
    SFStaticNoteItem *staticNote;
}

+ (void)setupStaticNotes;
@property(retain, nonatomic) SFStaticNoteItem *staticNote; // @synthesize staticNote;
- (void).cxx_destruct;
- (id)activityItems;
- (BOOL)hasEncryptionAndIsLocked;
- (BOOL)hasEncryption;
- (BOOL)isArchived;
- (BOOL)isTrashed;
- (BOOL)isEditable;
- (BOOL)hasFilesValue;
- (id)hasFiles;
- (BOOL)hasImagesValue;
- (id)hasImages;
- (id)files;
- (unsigned long long)completedToDoPercentage;
- (id)orderedImages;
- (id)noteInfoItems;
- (id)creationDate;
- (id)modificationDate;
- (id)subtitle;
- (id)title;
- (id)text;
- (id)uniqueIdentifier;
- (BOOL)hasConflictedNotes;
- (BOOL)isPinned;
- (BOOL)isStatic;

@end

@interface SFNoteTableCellTextRenderer : NSObject
{
    SFNotesTextThemeManager *_textThemeManager;
    SFNotesAppThemeManager *_appThemeManager;
    NSCache *_cache;
}

@property(retain) NSCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) SFNotesAppThemeManager *appThemeManager; // @synthesize appThemeManager=_appThemeManager;
@property(retain, nonatomic) SFNotesTextThemeManager *textThemeManager; // @synthesize textThemeManager=_textThemeManager;
- (void).cxx_destruct;
- (id)dateAttributes;
- (id)subtitleAttributes;
- (id)titleAttributesIsPlaceholder:(BOOL)arg1;
- (id)dateFont;
- (id)subtitleFont;
- (id)titleFont;
- (id)baseTextSizeKey;
- (id)subtitleFromText:(id)arg1 search:(id)arg2 searchRegex:(id)arg3;
- (id)noteTableCellInfoAttributedStringForNote:(id)arg1;
- (id)noteConflictedTableCellAttributedStringForNote:(id)arg1 searchText:(id)arg2 isHeader:(BOOL)arg3;
- (id)noteTableCellAttributedStringForNote:(id)arg1 searchText:(id)arg2;
- (id)init;

@end

@interface SFNoteTextStyleEditorTableRowView : NSTableRowView
{
    BOOL _mouseInside;
    BOOL _shouldDrawHoverState;
    NSTrackingArea *_trackingArea;
}

@property(retain) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property BOOL shouldDrawHoverState; // @synthesize shouldDrawHoverState=_shouldDrawHoverState;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)ensureTrackingArea;
@property(nonatomic) BOOL mouseInside; // @synthesize mouseInside=_mouseInside;
- (void)drawUserFeedbackInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FTWDevice : NSObject
{
    BOOL hasRetinaDisplay;
    int deviceFamily;
    NSString *name;
    NSString *localizedName;
    NSString *systemName;
    NSString *systemVersion;
    NSString *model;
    NSString *MACAddress;
    NSString *platform;
    NSString *hwmodel;
    unsigned long long CPUFrequency;
    unsigned long long busFrequency;
    unsigned long long CPUCount;
    unsigned long long totalMemory;
    unsigned long long userMemory;
    NSNumber *totalDiskSpace;
    NSNumber *freeDiskSpace;
    NSString *serialNumber;
}

+ (id)currentDevice;
@property(retain, nonatomic) NSString *serialNumber; // @synthesize serialNumber;
@property(nonatomic) int deviceFamily; // @synthesize deviceFamily;
@property(nonatomic) BOOL hasRetinaDisplay; // @synthesize hasRetinaDisplay;
@property(retain, nonatomic) NSNumber *freeDiskSpace; // @synthesize freeDiskSpace;
@property(retain, nonatomic) NSNumber *totalDiskSpace; // @synthesize totalDiskSpace;
@property(nonatomic) unsigned long long userMemory; // @synthesize userMemory;
@property(nonatomic) unsigned long long totalMemory; // @synthesize totalMemory;
@property(nonatomic) unsigned long long CPUCount; // @synthesize CPUCount;
@property(nonatomic) unsigned long long busFrequency; // @synthesize busFrequency;
@property(nonatomic) unsigned long long CPUFrequency; // @synthesize CPUFrequency;
@property(retain, nonatomic) NSString *hwmodel; // @synthesize hwmodel;
@property(nonatomic) NSString *platform; // @synthesize platform;
@property(retain, nonatomic) NSString *MACAddress; // @synthesize MACAddress;
@property(retain, nonatomic) NSString *model; // @synthesize model;
@property(retain, nonatomic) NSString *systemVersion; // @synthesize systemVersion;
@property(retain, nonatomic) NSString *systemName; // @synthesize systemName;
@property(retain, nonatomic) NSString *localizedName; // @synthesize localizedName;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (unsigned long long)maxSocketBufferSize;
- (unsigned long long)getSysInfo:(unsigned int)arg1;
- (id)getSysInfoByName:(char *)arg1;
- (id)init;

@end

@interface CDEvent : NSObject <NSCoding, NSCopying>
{
    unsigned int _flags;
    unsigned long long _identifier;
    NSDate *_date;
    NSURL *_URL;
}

+ (id)eventWithIdentifier:(unsigned long long)arg1 date:(id)arg2 URL:(id)arg3 flags:(unsigned int)arg4;
@property(readonly) unsigned int flags; // @synthesize flags=_flags;
@property(readonly) NSURL *URL; // @synthesize URL=_URL;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) unsigned long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
@property(readonly) BOOL isSymlink;
@property(readonly) BOOL isDir;
@property(readonly) BOOL isFile;
@property(readonly) BOOL isXattrModified;
@property(readonly) BOOL didChangeOwner;
@property(readonly) BOOL isFinderInfoModified;
@property(readonly) BOOL isModified;
@property(readonly) BOOL isRenamed;
@property(readonly) BOOL isInodeMetadataModified;
@property(readonly) BOOL isRemoved;
@property(readonly) BOOL isCreated;
@property(readonly) BOOL didVolumeUnmount;
@property(readonly) BOOL didVolumeMount;
@property(readonly) BOOL isRootChanged;
@property(readonly) BOOL isHistoryDone;
@property(readonly) BOOL isEventIdentifiersWrapped;
@property(readonly) BOOL isKernelDropped;
@property(readonly) BOOL isUserDropped;
@property(readonly) BOOL mustRescanSubDirectories;
@property(readonly) BOOL isGenericChange;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithIdentifier:(unsigned long long)arg1 date:(id)arg2 URL:(id)arg3 flags:(unsigned int)arg4;

@end

@interface SFWebsiteParser : NSObject <NSURLSessionDataDelegate>
{
    NSURL *_websiteURL;
    NSURLSession *_urlSession;
    HTMLDocument *_htmlDocument;
    NSMutableData *_htmlData;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _errorBlock;
}

@property(copy) CDUnknownBlockType errorBlock; // @synthesize errorBlock=_errorBlock;
@property(copy) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(retain) NSMutableData *htmlData; // @synthesize htmlData=_htmlData;
@property(retain) HTMLDocument *htmlDocument; // @synthesize htmlDocument=_htmlDocument;
@property(retain) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(retain, nonatomic) NSURL *websiteURL; // @synthesize websiteURL=_websiteURL;
- (void).cxx_destruct;
- (id)pageTitle;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)parseHTMLData:(id)arg1 contentType:(id)arg2;
- (void)parseWebsiteURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFRedabilityParserClient : NSObject
{
}

+ (void)parseURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

@end

@interface SFNotesExportViewController : NSViewController
{
    BOOL _hasAttachments;
    NSPopUpButton *_formatPopUpButton;
    NSButton *_attachmentsButton;
    NSButton *_mergeButton;
    double _scaleFactor;
    NSArray *_extensions;
    SFLoadingWindowController *_loadingWindowController;
}

@property(retain, nonatomic) SFLoadingWindowController *loadingWindowController; // @synthesize loadingWindowController=_loadingWindowController;
@property(retain) NSArray *extensions; // @synthesize extensions=_extensions;
@property(nonatomic) double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property BOOL hasAttachments; // @synthesize hasAttachments=_hasAttachments;
@property __weak NSButton *mergeButton; // @synthesize mergeButton=_mergeButton;
@property __weak NSButton *attachmentsButton; // @synthesize attachmentsButton=_attachmentsButton;
@property __weak NSPopUpButton *formatPopUpButton; // @synthesize formatPopUpButton=_formatPopUpButton;
- (void).cxx_destruct;
- (void)hideLoadingWindow;
- (void)showLoadingWindow;
- (BOOL)someNoteHasAttachments:(id)arg1;
- (void)disableMergeWithCurrentFormat;
- (void)selectFormatWithExtension:(id)arg1;
- (void)disableAttachmentsWithNotes:(id)arg1;
- (void)extensionChanged:(id)arg1;
- (void)exportNotes:(id)arg1 withExtension:(id)arg2 andWindow:(id)arg3;
- (void)backupNotes:(id)arg1;
- (void)exportNotesImages:(id)arg1;
- (void)exportNotesToePub:(id)arg1;
- (void)exportNotesToTaskPaper:(id)arg1;
- (void)exportNotesToJPG:(id)arg1;
- (void)exportNotesToDOCX:(id)arg1;
- (void)exportNotesToRTF:(id)arg1;
- (void)exportNotesToMD:(id)arg1;
- (void)exportNotesToHTML:(id)arg1;
- (void)exportNotesToTXT:(id)arg1;
- (void)exportNotesToPDF:(id)arg1;
- (void)exportNotes:(id)arg1 withWindow:(id)arg2;
- (void)exportNotes:(id)arg1;
- (id)exportOpenPanelWithFormatSelector:(BOOL)arg1 notes:(id)arg2 defaultExtension:(id)arg3;
- (id)exportOpenPanelForMultipleFiles:(BOOL)arg1 notes:(id)arg2 defaultExtension:(id)arg3;
- (id)exportCoreControllerWithFileDictionary:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)viewDidLoad;
- (id)init;

@end

@interface SFNotesTextStorage : NSTextStorage <SFCodeSyntaxHighlighterDelegate>
{
    NSMutableAttributedString *_imp;
    BOOL _previousEditInsertedNewline;
    SFNoteStylersManager *_noteStylersManager;
    long long _previousChangeInLength;
    struct _NSRange _previousEditedRange;
}

@property(nonatomic) BOOL previousEditInsertedNewline; // @synthesize previousEditInsertedNewline=_previousEditInsertedNewline;
@property(nonatomic) long long previousChangeInLength; // @synthesize previousChangeInLength=_previousChangeInLength;
@property(nonatomic) struct _NSRange previousEditedRange; // @synthesize previousEditedRange=_previousEditedRange;
@property(retain) SFNoteStylersManager *noteStylersManager; // @synthesize noteStylersManager=_noteStylersManager;
- (void).cxx_destruct;
- (id)subTextStorageWithRange:(struct _NSRange)arg1;
- (BOOL)canEditTextInRange:(struct _NSRange)arg1;
- (BOOL)lastEditDidDeleteText;
- (void)codeSyntaxHighlighter:(id)arg1 highlightedString:(id)arg2 forCodeUUID:(id)arg3;
- (struct _NSRange)multipleParagraphStyleRangeForEditedParagraphRange:(struct _NSRange)arg1 insertedNewline:(BOOL)arg2 attributedString:(id)arg3;
- (struct _NSRange)rangeToStyleFromEditedRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 insertedNewline:(BOOL)arg3;
- (struct _NSRange)rangeToStyle;
- (id)styleTextInRange:(struct _NSRange)arg1 selectionRange:(struct _NSRange)arg2 proposedSelectionRange:(struct _NSRange *)arg3;
- (void)applyStylingInRange:(struct _NSRange)arg1;
- (void)processEditing;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributedString:(id)arg1;
- (void)createAttachmentFileWrappersInRange:(struct _NSRange)arg1;
- (BOOL)hasTabbableStyleInRange:(struct _NSRange)arg1 stylerMarkerRange:(struct _NSRange *)arg2;
- (BOOL)hasRepeatableNewLineStyleInRange:(struct _NSRange)arg1 stylerMarkerRange:(struct _NSRange *)arg2 stylerMarker:(id *)arg3;
- (void)enumerateHeadersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFilesAttachmentsInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateFilesAttachmentsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateImagesAttachmentsInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateImagesAttachmentsUsingBlock:(CDUnknownBlockType)arg1;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1 expandTextAttachment:(BOOL)arg2;
- (id)stringWithExpandedTextAttachmentsFromAttributedString:(id)arg1;
- (id)stringWithExpandedTextAttachmentsWithRange:(struct _NSRange)arg1;
- (id)stringWithExpandedTextAttachments;
- (id)string;
- (id)styledAttributedStringFromString:(id)arg1 ifItWasInsertedInRange:(struct _NSRange)arg2;
- (id)styledAttributedStringFromAttributedString:(id)arg1;
- (id)styledAttributedStringFromString:(id)arg1;
- (void)loadString:(id)arg1;
- (id)init;
- (id)createThumbsForImages:(id)arg1;
- (id)docxDataWithDelegate:(id)arg1;
- (id)rtfdStringWithRange:(struct _NSRange)arg1;
- (id)rtfdString;
- (void)escapeAttributedString:(id)arg1;
- (void)preEscapeAttributedString:(id)arg1;
- (id)ePubChapters;
- (id)ePubStringWithRange:(struct _NSRange)arg1;
- (id)ePubString;
- (id)taskPaperStringWithRange:(struct _NSRange)arg1;
- (id)taskPaperString;
- (id)htmlStringWithRange:(struct _NSRange)arg1 usingBR:(BOOL)arg2 syntColors:(BOOL)arg3;
- (id)htmlStringWithoutBr;
- (id)htmlStringWithoutSyntaxHighlighting;
- (id)htmlString;
- (void)removeFiles;
- (void)removeTagsWithSyntax:(long long)arg1;
- (void)removeInvalidUnicodeAttributes;
- (void)removeSpacerTextAttachments;
- (void)removeURLAttributes;
- (void)removeInternalURLsAttributes;
- (void)removeQuoteMarkersWithSyntax:(long long)arg1;
- (void)removeAllStylerMarkerCharactersWithSyntax:(long long)arg1;
- (id)markdownAddPathComponentToImages:(id)arg1 inString:(id)arg2;
- (id)markdownStringWithRange:(struct _NSRange)arg1;
- (id)markdownString;
- (id)plainTextStringWithoutFiles;
- (id)plainTextStringWithRange:(struct _NSRange)arg1;
- (id)plainTextString;
- (id)rtfStringWithRange:(struct _NSRange)arg1;
- (id)rtfString;
- (id)highlightsString;
- (id)watchParagraphs;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEncryptionStrings : NSObject
{
}

+ (id)localizedAuthenticationType;
+ (id)newPasswordForDeviceEnableBiometryString;
+ (id)preferencesRequireAuthenticationToOpenBearString;
+ (id)localizedBearEncryptionKitString:(id)arg1;
+ (id)strengthScoreForPasswordString:(id)arg1;
+ (void)load;

@end

@interface SFColorTextAttachment : SFNotesTextAttachment
{
    NSColor *_representedColor;
    NSString *_fullRepresentedText;
}

+ (BOOL)isInline;
@property(retain) NSString *fullRepresentedText; // @synthesize fullRepresentedText=_fullRepresentedText;
@property(retain) NSColor *representedColor; // @synthesize representedColor=_representedColor;
- (void).cxx_destruct;
- (id)colorFromHEX:(id)arg1;
- (void)drawColorForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentRightSpacing;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (BOOL)needWrappingCharaters;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithRepresentedText:(id)arg1 themeManager:(id)arg2;

@end

@interface SFNoteTitledLinkEditorViewController : NSViewController
{
    NSTextView *_textView;
    NSTextField *_titleTextField;
    NSTextField *_urlTextField;
    NSTextField *_titleLabelTextField;
    NSTextField *_urlLabelTextField;
    NSButton *_deleteURLButton;
    NSColor *_labelColor;
    NSColor *_textColor;
    NSColor *_linkColor;
    NSPopover *_popover;
    unsigned long long _status;
    struct _NSRange _editedRange;
}

@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property __weak NSColor *linkColor; // @synthesize linkColor=_linkColor;
@property __weak NSColor *textColor; // @synthesize textColor=_textColor;
@property __weak NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property __weak NSButton *deleteURLButton; // @synthesize deleteURLButton=_deleteURLButton;
@property __weak NSTextField *urlLabelTextField; // @synthesize urlLabelTextField=_urlLabelTextField;
@property __weak NSTextField *titleLabelTextField; // @synthesize titleLabelTextField=_titleLabelTextField;
@property __weak NSTextField *urlTextField; // @synthesize urlTextField=_urlTextField;
@property __weak NSTextField *titleTextField; // @synthesize titleTextField=_titleTextField;
@property(retain) NSTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) struct _NSRange editedRange; // @synthesize editedRange=_editedRange;
- (void).cxx_destruct;
- (void)growingTextField:(id)arg1 willChangeHeight:(double)arg2;
- (void)growingTextFieldResignFirstResponder:(id)arg1;
- (void)growingTextFieldBecameFirstResponder:(id)arg1;
- (void)replaceAttachmentURLAtIndex:(unsigned long long)arg1 withURLString:(id)arg2;
- (void)replaceEditedRange:(struct _NSRange)arg1 withString:(id)arg2;
- (BOOL)validateURL;
- (BOOL)validateTitle;
- (BOOL)validateInputFields;
- (id)title;
- (id)url;
- (id)urlString;
- (void)editTitledURL:(id)arg1;
- (void)visitURL:(id)arg1;
- (void)deleteURL:(id)arg1;
- (void)setEditedRange:(struct _NSRange)arg1 textView:(id)arg2;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface SFNoteBoldTextMarkdownStyler : SFNoteBoldTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarker;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNotesTableView : NSTableView <NSAccessibilityTable>
{
    BOOL _selectFirstRowWhenBecomingFirstResponder;
}

@property(nonatomic) BOOL selectFirstRowWhenBecomingFirstResponder; // @synthesize selectFirstRowWhenBecomingFirstResponder=_selectFirstRowWhenBecomingFirstResponder;
- (id)accessibilityLabel;
- (id)accessibilityHeaderGroup;
- (id)menuForEvent:(id)arg1;
- (void)selectFirstRowIfNothingSelected;
- (BOOL)becomeFirstResponder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEncryptedSidebarItem : SFStaticSidebarItem
{
    BOOL hasNotes;
    id <SFSidebarItem> _father;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(nonatomic) id <SFSidebarItem> father; // @synthesize father=_father;
@property(nonatomic) BOOL hasNotes; // @synthesize hasNotes;
- (id)uniqueIdentifier;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFAddressTextAttachment : SFNotesTextAttachment
{
    NSString *_fullRepresentedText;
}

+ (BOOL)isInline;
@property(retain) NSString *fullRepresentedText; // @synthesize fullRepresentedText=_fullRepresentedText;
- (void).cxx_destruct;
- (void)drawMapMarkerForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (double)attachmentRightSpacing;
- (double)attachmentBaselineOffset;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithRepresentedText:(id)arg1 themeManager:(id)arg2;

@end

@interface SFEncryptionSecureTextField : NSSecureTextField
{
    NSColor *_insertionPointColor;
    NSColor *_selectedTextColor;
    NSColor *_selectedTextBackgroundColor;
}

@property(retain) NSColor *selectedTextBackgroundColor; // @synthesize selectedTextBackgroundColor=_selectedTextBackgroundColor;
@property(retain) NSColor *selectedTextColor; // @synthesize selectedTextColor=_selectedTextColor;
@property(retain) NSColor *insertionPointColor; // @synthesize insertionPointColor=_insertionPointColor;
- (void).cxx_destruct;
- (BOOL)becomeFirstResponder;

@end

@interface DTTimePeriod : NSObject
{
    NSDate *_StartDate;
    NSDate *_EndDate;
}

+ (id)dateWithSubtractedTime:(unsigned long long)arg1 amount:(long long)arg2 baseDate:(id)arg3;
+ (id)dateWithAddedTime:(unsigned long long)arg1 amount:(long long)arg2 baseDate:(id)arg3;
+ (id)timePeriodWithAllTime;
+ (id)timePeriodWithSize:(unsigned long long)arg1 amount:(long long)arg2 endingAt:(id)arg3;
+ (id)timePeriodWithSize:(unsigned long long)arg1 endingAt:(id)arg2;
+ (id)timePeriodWithSize:(unsigned long long)arg1 amount:(long long)arg2 startingAt:(id)arg3;
+ (id)timePeriodWithSize:(unsigned long long)arg1 startingAt:(id)arg2;
+ (id)timePeriodWithStartDate:(id)arg1 endDate:(id)arg2;
@property(retain, nonatomic) NSDate *EndDate; // @synthesize EndDate=_EndDate;
@property(retain, nonatomic) NSDate *StartDate; // @synthesize StartDate=_StartDate;
- (void).cxx_destruct;
- (id)copy;
- (void)shortenWithAnchorDate:(unsigned long long)arg1 size:(unsigned long long)arg2 amount:(long long)arg3;
- (void)shortenWithAnchorDate:(unsigned long long)arg1 size:(unsigned long long)arg2;
- (void)lengthenWithAnchorDate:(unsigned long long)arg1 size:(unsigned long long)arg2 amount:(long long)arg3;
- (void)lengthenWithAnchorDate:(unsigned long long)arg1 size:(unsigned long long)arg2;
- (void)shiftLaterWithSize:(unsigned long long)arg1 amount:(long long)arg2;
- (void)shiftLaterWithSize:(unsigned long long)arg1;
- (void)shiftEarlierWithSize:(unsigned long long)arg1 amount:(long long)arg2;
- (void)shiftEarlierWithSize:(unsigned long long)arg1;
- (BOOL)containsDate:(id)arg1 interval:(unsigned long long)arg2;
- (double)gapBetween:(id)arg1;
- (unsigned long long)relationToPeriod:(id)arg1;
- (BOOL)intersects:(id)arg1;
- (BOOL)overlapsWith:(id)arg1;
- (BOOL)contains:(id)arg1;
- (BOOL)isInside:(id)arg1;
- (BOOL)isEqualToPeriod:(id)arg1;
- (double)durationInSeconds;
- (double)durationInMinutes;
- (double)durationInHours;
- (double)durationInDays;
- (double)durationInWeeks;
- (double)durationInYears;
- (BOOL)isMoment;
- (BOOL)hasEndDate;
- (BOOL)hasStartDate;
- (id)initWithStartDate:(id)arg1 endDate:(id)arg2;

@end

@interface SFNoteURLStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerAttributeName;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesTextAttachment : NSTextAttachment
{
    SFNotesTextThemeManager *_themeManager;
    NSString *_representedText;
}

+ (BOOL)isInline;
+ (BOOL)isFullLine;
@property(retain) NSString *representedText; // @synthesize representedText=_representedText;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)createFileWrapper;
- (void)updateTextAttachment;
- (void)setup;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)attachmentBoundsForTextContainer:(id)arg1 originalAttachmentBounds:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (BOOL)canBeDraggedAlone;
- (BOOL)needWrappingCharaters;
- (BOOL)isInline;
- (BOOL)isFullLine;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (double)cachedAttachmentBaselineOffset;
- (struct CGSize)cachedAttachmentSize;
- (id)baseCacheKey;
- (id)cachedValueForKey:(id)arg1;
- (void)setCachedValue:(id)arg1 forKey:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithRepresentedText:(id)arg1 themeManager:(id)arg2;

@end

@interface SFCoreDataStack : NSObject <MHWMigrationManagerDelegate>
{
    id <SFCoreDataStackDelegate> _delegate;
    NSManagedObjectContext *_managedObjectContext;
    NSManagedObjectContext *_inMemoryManagedObjectContext;
    NSManagedObjectModel *_managedObjectModel;
    NSTimer *_coalescenceSaveTimer;
}

+ (id)sharedStack;
@property(retain) NSTimer *coalescenceSaveTimer; // @synthesize coalescenceSaveTimer=_coalescenceSaveTimer;
@property(retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(retain, nonatomic) NSManagedObjectContext *inMemoryManagedObjectContext; // @synthesize inMemoryManagedObjectContext=_inMemoryManagedObjectContext;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property __weak id <SFCoreDataStackDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)saveUsingCoalescence:(BOOL)arg1;
- (void)coalescenceSaveTimerFired:(id)arg1;
- (void)migrationManager:(id)arg1 migrationProgress:(float)arg2;
- (void)migrate;
- (BOOL)isMigrationNeeded;
- (id)backgroundPrivateManagedObjectContext;
- (void)performBackgroundTask:(CDUnknownBlockType)arg1;
- (id)persistentStoreType;
- (id)managedObjectModelURL;
- (id)persistentStoreURL;
- (id)persistentStoreOptions;
- (void)initializeInMemoryContext;
- (void)initializeCoreData;
- (void)setupStack;
- (void)setupStackWithDelegate:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFStaticFileNoteItem : SFStaticNoteItem
{
    NSString *__text;
    NSString *__title;
    NSString *__subtitle;
    NSString *__uniqueIdentifier;
}

+ (id)noteItemWithText:(id)arg1 title:(id)arg2 subtitle:(id)arg3;
+ (id)noteItemWithFileURL:(id)arg1 title:(id)arg2 subtitle:(id)arg3;
@property(retain, nonatomic) NSString *_uniqueIdentifier; // @synthesize _uniqueIdentifier=__uniqueIdentifier;
@property(retain, nonatomic) NSString *_subtitle; // @synthesize _subtitle=__subtitle;
@property(retain, nonatomic) NSString *_title; // @synthesize _title=__title;
@property(retain, nonatomic) NSString *_text; // @synthesize _text=__text;
- (void).cxx_destruct;
- (id)uniqueIdentifier;
- (id)subtitle;
- (id)title;
- (id)text;

@end

@interface SFTagSpecialIconStyleKit : NSObject
{
}

+ (id)imageOfThumbsDownWithFillColor:(id)arg1;
+ (id)imageOfThumbsUpWithFillColor:(id)arg1;
+ (id)imageOfWebWithFillColor:(id)arg1;
+ (id)imageOfAutumnWithFillColor:(id)arg1;
+ (id)imageOfMeteorWithFillColor:(id)arg1;
+ (id)imageOfStormWithFillColor:(id)arg1;
+ (id)imageOfSnowWithFillColor:(id)arg1;
+ (id)imageOfFSMWithFillColor:(id)arg1;
+ (id)imageOfEthereumWithFillColor:(id)arg1;
+ (id)imageOfRaspberrypiWithFillColor:(id)arg1;
+ (id)imageOfNum9WithFillColor:(id)arg1;
+ (id)imageOfNum8WithFillColor:(id)arg1;
+ (id)imageOfNum7WithFillColor:(id)arg1;
+ (id)imageOfNum6WithFillColor:(id)arg1;
+ (id)imageOfNum5WithFillColor:(id)arg1;
+ (id)imageOfNum4WithFillColor:(id)arg1;
+ (id)imageOfNum3WithFillColor:(id)arg1;
+ (id)imageOfNum2WithFillColor:(id)arg1;
+ (id)imageOfNum1WithFillColor:(id)arg1;
+ (id)imageOfNum0WithFillColor:(id)arg1;
+ (id)imageOfNextWithFillColor:(id)arg1;
+ (id)imageOfLockFullLarge2WithFillColor:(id)arg1;
+ (id)imageOfLockFullLargeWithFillColor:(id)arg1;
+ (id)imageOfLockEmptyLargeWithFillColor:(id)arg1;
+ (id)imageOfLockEmptyWithFillColor:(id)arg1;
+ (id)imageOfLockFullWithFillColor:(id)arg1;
+ (id)imageOfInboxWithFillColor:(id)arg1;
+ (id)imageOfPlusWithFillColor:(id)arg1;
+ (id)imageOfCakeWithFillColor:(id)arg1;
+ (id)imageOfKnitWithFillColor:(id)arg1;
+ (id)imageOfRainbowWithFillColor:(id)arg1;
+ (id)imageOfCloudWithFillColor:(id)arg1;
+ (id)imageOfCameraWithFillColor:(id)arg1;
+ (id)imageOfPhoneWithFillColor:(id)arg1;
+ (id)imageOfBusWithFillColor:(id)arg1;
+ (id)imageOfMetroWithFillColor:(id)arg1;
+ (id)imageOfTrainWithFillColor:(id)arg1;
+ (id)imageOfBoatWithFillColor:(id)arg1;
+ (id)imageOfHordeWithFillColor:(id)arg1;
+ (id)imageOfDoctorWithFillColor:(id)arg1;
+ (id)imageOfPipeWithFillColor:(id)arg1;
+ (id)imageOfDnaWithFillColor:(id)arg1;
+ (id)imageOfGraduationWithFillColor:(id)arg1;
+ (id)imageOfWorldWithFillColor:(id)arg1;
+ (id)imageOfDocumentWithFillColor:(id)arg1;
+ (id)imageOfPrizeWithFillColor:(id)arg1;
+ (id)imageOfCampingWithFillColor:(id)arg1;
+ (id)imageOfCompleteWithFillColor:(id)arg1;
+ (id)imageOfDrumsWithFillColor:(id)arg1;
+ (id)imageOfHebrewWithFillColor:(id)arg1;
+ (id)imageOfTaoWithFillColor:(id)arg1;
+ (id)imageOfBuddhismWithFillColor:(id)arg1;
+ (id)imageOfHinduWithFillColor:(id)arg1;
+ (id)imageOfIslamWithFillColor:(id)arg1;
+ (id)imageOfChristianWithFillColor:(id)arg1;
+ (id)imageOfHtml5WithFillColor:(id)arg1;
+ (id)imageOfPizzaWithFillColor:(id)arg1;
+ (id)imageOfSexWithFillColor:(id)arg1;
+ (id)imageOfMakeupWithFillColor:(id)arg1;
+ (id)imageOfPromptWithFillColor:(id)arg1;
+ (id)imageOfGbpWithFillColor:(id)arg1;
+ (id)imageOfEurWithFillColor:(id)arg1;
+ (id)imageOfJpyWithFillColor:(id)arg1;
+ (id)imageOfUsdWithFillColor:(id)arg1;
+ (id)imageOfAvengersWithFillColor:(id)arg1;
+ (id)imageOfMediumWithFillColor:(id)arg1;
+ (id)imageOfWordpressWithFillColor:(id)arg1;
+ (id)imageOfVimWithFillColor:(id)arg1;
+ (id)imageOfDatabaseWithFillColor:(id)arg1;
+ (id)imageOfMicWithFillColor:(id)arg1;
+ (id)imageOfKeyboardWithFillColor:(id)arg1;
+ (id)imageOfGuitarWithFillColor:(id)arg1;
+ (id)imageOfWaterWithFillColor:(id)arg1;
+ (id)imageOfRickWithFillColor:(id)arg1;
+ (id)imageOfOfficeWithFillColor:(id)arg1;
+ (id)imageOfNoteWithFillColor:(id)arg1;
+ (id)imageOfUrbanWithFillColor:(id)arg1;
+ (id)imageOfTennisWithFillColor:(id)arg1;
+ (id)imageOfSewerWithFillColor:(id)arg1;
+ (id)imageOfPsychologyWithFillColor:(id)arg1;
+ (id)imageOfWaitingWithFillColor:(id)arg1;
+ (id)imageOfUnicodeWithFillColor:(id)arg1;
+ (id)imageOfTheaterWithFillColor:(id)arg1;
+ (id)imageOfMiniTriangleWithFillColor:(id)arg1;
+ (id)imageOfMiniCircleWithFillColor:(id)arg1;
+ (id)imageOfSwiftWithFillColor:(id)arg1;
+ (id)imageOfRubyWithFillColor:(id)arg1;
+ (id)imageOfPythonWithFillColor:(id)arg1;
+ (id)imageOfObjectiveCWithFillColor:(id)arg1;
+ (id)imageOfElectricityWithFillColor:(id)arg1;
+ (id)imageOfPeopleWithFillColor:(id)arg1;
+ (id)imageOfMotorbikeWithFillColor:(id)arg1;
+ (id)imageOfDanceWithFillColor:(id)arg1;
+ (id)imageOfBicycleWithFillColor:(id)arg1;
+ (id)imageOfScifiWithFillColor:(id)arg1;
+ (id)imageOfLotrWithFillColor:(id)arg1;
+ (id)imageOfFantasyWithFillColor:(id)arg1;
+ (id)imageOfDraftsWithFillColor:(id)arg1;
+ (id)imageOfTocWithFillColor:(id)arg1;
+ (id)imageOfPlansWithFillColor:(id)arg1;
+ (id)imageOfContactsWithFillColor:(id)arg1;
+ (id)imageOfReceiptsWithFillColor:(id)arg1;
+ (id)imageOfPoliticsWithFillColor:(id)arg1;
+ (id)imageOfWeddingWithFillColor:(id)arg1;
+ (id)imageOfToolsWithFillColor:(id)arg1;
+ (id)imageOfHarryPotterWithFillColor:(id)arg1;
+ (id)imageOfFamilyWithFillColor:(id)arg1;
+ (id)imageOfDreamWithFillColor:(id)arg1;
+ (id)imageOfGroceriesWithFillColor:(id)arg1;
+ (id)imageOfConferenceWithFillColor:(id)arg1;
+ (id)imageOfClippingsWithFillColor:(id)arg1;
+ (id)imageOfCalendarWithFillColor:(id)arg1;
+ (id)imageOfWikiWithFillColor:(id)arg1;
+ (id)imageOfRubberDuckWithFillColor:(id)arg1;
+ (id)imageOfD20WithFillColor:(id)arg1;
+ (id)imageOfD6WithFillColor:(id)arg1;
+ (id)imageOfConversationWithFillColor:(id)arg1;
+ (id)imageOfBitcoinWithFillColor:(id)arg1;
+ (id)imageOfSplatoonWithFillColor:(id)arg1;
+ (id)imageOfLegalWithFillColor:(id)arg1;
+ (id)imageOfIsaacWithFillColor:(id)arg1;
+ (id)imageOfBigDaddyWithFillColor:(id)arg1;
+ (id)imageOfStarTrekWithFillColor:(id)arg1;
+ (id)imageOfPlaceWithFillColor:(id)arg1;
+ (id)imageOfMushroomWithFillColor:(id)arg1;
+ (id)imageOfMinimalismWithFillColor:(id)arg1;
+ (id)imageOfAiWithFillColor:(id)arg1;
+ (id)imageOfTrekkingWithFillColor:(id)arg1;
+ (id)imageOfSwimmingWithFillColor:(id)arg1;
+ (id)imageOfRugbyWithFillColor:(id)arg1;
+ (id)imageOfFootballWithFillColor:(id)arg1;
+ (id)imageOfVolleyWithFillColor:(id)arg1;
+ (id)imageOfSoccerWithFillColor:(id)arg1;
+ (id)imageOfCricketWithFillColor:(id)arg1;
+ (id)imageOfBaseballWithFillColor:(id)arg1;
+ (id)imageOfQuestionWithFillColor:(id)arg1;
+ (id)imageOfListWithFillColor:(id)arg1;
+ (id)imageOfInfoWithFillColor:(id)arg1;
+ (id)imageOfFlagWithFillColor:(id)arg1;
+ (id)imageOfPriorityWithFillColor:(id)arg1;
+ (id)imageOfLiquorWithFillColor:(id)arg1;
+ (id)imageOfDrugsWithFillColor:(id)arg1;
+ (id)imageOfCocktailWithFillColor:(id)arg1;
+ (id)imageOfBeerWithFillColor:(id)arg1;
+ (id)imageOfWineWithFillColor:(id)arg1;
+ (id)imageOfVaderWithFillColor:(id)arg1;
+ (id)imageOfGymWithFillColor:(id)arg1;
+ (id)imageOfTodoFullWithFillColor:(id)arg1;
+ (id)imageOfTrashFullWithFillColor:(id)arg1;
+ (id)imageOfTrashFullLargeWithFillColor:(id)arg1;
+ (id)imageOfTodoFullLargeWithFillColor:(id)arg1;
+ (id)imageOfUntaggedFullWithFillColor:(id)arg1;
+ (id)imageOfUntaggedEmptyWithFillColor:(id)arg1;
+ (id)imageOfTrashWithFillColor:(id)arg1;
+ (id)imageOfTodoEmptyWithFillColor:(id)arg1;
+ (id)imageOfTodayFullWithFillColor:(id)arg1;
+ (id)imageOfTodayEmptyWithFillColor:(id)arg1;
+ (id)imageOfNotesWithFillColor:(id)arg1;
+ (id)imageOfArchiveWithFillColor:(id)arg1;
+ (id)imageOfUntaggedFullLargeWithFillColor:(id)arg1;
+ (id)imageOfUntaggedEmptyLargeWithFillColor:(id)arg1;
+ (id)imageOfTrashLargeWithFillColor:(id)arg1;
+ (id)imageOfTodoEmptyLargeWithFillColor:(id)arg1;
+ (id)imageOfTodayFullLargeWithFillColor:(id)arg1;
+ (id)imageOfTodayEmptyLargeWithFillColor:(id)arg1;
+ (id)imageOfNotesLargeWithFillColor:(id)arg1;
+ (id)imageOfArchiveLargeWithFillColor:(id)arg1;
+ (id)imageOfZeldaWithFillColor:(id)arg1;
+ (id)imageOfYoutubeWithFillColor:(id)arg1;
+ (id)imageOfYogaWithFillColor:(id)arg1;
+ (id)imageOfXboxWithFillColor:(id)arg1;
+ (id)imageOfWorkWithFillColor:(id)arg1;
+ (id)imageOfWishlistWithFillColor:(id)arg1;
+ (id)imageOfWindowsWithFillColor:(id)arg1;
+ (id)imageOfWatchWithFillColor:(id)arg1;
+ (id)imageOfViewWithFillColor:(id)arg1;
+ (id)imageOfTypographyWithFillColor:(id)arg1;
+ (id)imageOfTwitterWithFillColor:(id)arg1;
+ (id)imageOfTvWithFillColor:(id)arg1;
+ (id)imageOfTumblrWithFillColor:(id)arg1;
+ (id)imageOfTravelWithFillColor:(id)arg1;
+ (id)imageOfTodoWithFillColor:(id)arg1;
+ (id)imageOfTechWithFillColor:(id)arg1;
+ (id)imageOfTeaWithFillColor:(id)arg1;
+ (id)imageOfSunWithFillColor:(id)arg1;
+ (id)imageOfStarWarsWithFillColor:(id)arg1;
+ (id)imageOfStarWithFillColor:(id)arg1;
+ (id)imageOfSportWithFillColor:(id)arg1;
+ (id)imageOfSkateboardWithFillColor:(id)arg1;
+ (id)imageOfShoesWithFillColor:(id)arg1;
+ (id)imageOfShinyFrogWithFillColor:(id)arg1;
+ (id)imageOfScienceWithFillColor:(id)arg1;
+ (id)imageOfSchoolWithFillColor:(id)arg1;
+ (id)imageOfRodentsWithFillColor:(id)arg1;
+ (id)imageOfRedditWithFillColor:(id)arg1;
+ (id)imageOfQuotesWithFillColor:(id)arg1;
+ (id)imageOfPrivacyWithFillColor:(id)arg1;
+ (id)imageOfPooWithFillColor:(id)arg1;
+ (id)imageOfPokemonWithFillColor:(id)arg1;
+ (id)imageOfPoetryWithFillColor:(id)arg1;
+ (id)imageOfPodcastWithFillColor:(id)arg1;
+ (id)imageOfPlaystationWithFillColor:(id)arg1;
+ (id)imageOfPhotoWithFillColor:(id)arg1;
+ (id)imageOfPeaceWithFillColor:(id)arg1;
+ (id)imageOfPasswordWithFillColor:(id)arg1;
+ (id)imageOfNsfwWithFillColor:(id)arg1;
+ (id)imageOfNintendoSwitchWithFillColor:(id)arg1;
+ (id)imageOfNintendoWithFillColor:(id)arg1;
+ (id)imageOfNerdWithFillColor:(id)arg1;
+ (id)imageOfNatureWithFillColor:(id)arg1;
+ (id)imageOfMusicWithFillColor:(id)arg1;
+ (id)imageOfMoonWithFillColor:(id)arg1;
+ (id)imageOfMoneyWithFillColor:(id)arg1;
+ (id)imageOfMeWithFillColor:(id)arg1;
+ (id)imageOfMathWithFillColor:(id)arg1;
+ (id)imageOfMarioWithFillColor:(id)arg1;
+ (id)imageOfMailWithFillColor:(id)arg1;
+ (id)imageOfMacWithFillColor:(id)arg1;
+ (id)imageOfLoveWithFillColor:(id)arg1;
+ (id)imageOfLinuxWithFillColor:(id)arg1;
+ (id)imageOfIphoneWithFillColor:(id)arg1;
+ (id)imageOfIpadWithFillColor:(id)arg1;
+ (id)imageOfInstagramWithFillColor:(id)arg1;
+ (id)imageOfIdeaWithFillColor:(id)arg1;
+ (id)imageOfHomeWithFillColor:(id)arg1;
+ (id)imageOfHolidayWithFillColor:(id)arg1;
+ (id)imageOfHealthWithFillColor:(id)arg1;
+ (id)imageOfGameWithFillColor:(id)arg1;
+ (id)imageOfFurryWithFillColor:(id)arg1;
+ (id)imageOfFunWithFillColor:(id)arg1;
+ (id)imageOfFitnessWithFillColor:(id)arg1;
+ (id)imageOfFacebookWithFillColor:(id)arg1;
+ (id)imageOfEconomyWithFillColor:(id)arg1;
+ (id)imageOfDogWithFillColor:(id)arg1;
+ (id)imageOfDiyWithFillColor:(id)arg1;
+ (id)imageOfDevWithFillColor:(id)arg1;
+ (id)imageOfDesignWithFillColor:(id)arg1;
+ (id)imageOfDoctorWhoWithFillColor:(id)arg1;
+ (id)imageOfCookingWithFillColor:(id)arg1;
+ (id)imageOfComicsWithFillColor:(id)arg1;
+ (id)imageOfCoffeeWithFillColor:(id)arg1;
+ (id)imageOfClothingWithFillColor:(id)arg1;
+ (id)imageOfCinemaWithFillColor:(id)arg1;
+ (id)imageOfCatWithFillColor:(id)arg1;
+ (id)imageOfCarWithFillColor:(id)arg1;
+ (id)imageOfBugWithFillColor:(id)arg1;
+ (id)imageOfBookWithFillColor:(id)arg1;
+ (id)imageOfBeautyWithFillColor:(id)arg1;
+ (id)imageOfBagsWithFillColor:(id)arg1;
+ (id)imageOfBearWithFillColor:(id)arg1;
+ (id)imageOfArticleWithFillColor:(id)arg1;
+ (id)imageOfArtWithFillColor:(id)arg1;
+ (id)imageOfAppleWithFillColor:(id)arg1;
+ (id)imageOfAppWithFillColor:(id)arg1;
+ (id)imageOfAnimalsWithFillColor:(id)arg1;
+ (id)imageOfAndroidWithFillColor:(id)arg1;
+ (void)drawThumbsDownWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawThumbsDownWithFillColor:(id)arg1;
+ (void)drawThumbsUpWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawThumbsUpWithFillColor:(id)arg1;
+ (void)drawWebWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWebWithFillColor:(id)arg1;
+ (void)drawAutumnWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAutumnWithFillColor:(id)arg1;
+ (void)drawMeteorWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMeteorWithFillColor:(id)arg1;
+ (void)drawStormWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawStormWithFillColor:(id)arg1;
+ (void)drawSnowWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSnowWithFillColor:(id)arg1;
+ (void)drawFSMWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFSMWithFillColor:(id)arg1;
+ (void)drawEthereumWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawEthereumWithFillColor:(id)arg1;
+ (void)drawRaspberrypiWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRaspberrypiWithFillColor:(id)arg1;
+ (void)drawNum9WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum9WithFillColor:(id)arg1;
+ (void)drawNum8WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum8WithFillColor:(id)arg1;
+ (void)drawNum7WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum7WithFillColor:(id)arg1;
+ (void)drawNum6WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum6WithFillColor:(id)arg1;
+ (void)drawNum5WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum5WithFillColor:(id)arg1;
+ (void)drawNum4WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum4WithFillColor:(id)arg1;
+ (void)drawNum3WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum3WithFillColor:(id)arg1;
+ (void)drawNum2WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum2WithFillColor:(id)arg1;
+ (void)drawNum1WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum1WithFillColor:(id)arg1;
+ (void)drawNum0WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNum0WithFillColor:(id)arg1;
+ (void)drawNextWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNextWithFillColor:(id)arg1;
+ (void)drawLockFullLarge2WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLockFullLarge2WithFillColor:(id)arg1;
+ (void)drawLockFullLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLockFullLargeWithFillColor:(id)arg1;
+ (void)drawLockEmptyLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLockEmptyLargeWithFillColor:(id)arg1;
+ (void)drawLockEmptyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLockEmptyWithFillColor:(id)arg1;
+ (void)drawLockFullWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLockFullWithFillColor:(id)arg1;
+ (void)drawInboxWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawInboxWithFillColor:(id)arg1;
+ (void)drawPlusWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPlusWithFillColor:(id)arg1;
+ (void)drawCakeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCakeWithFillColor:(id)arg1;
+ (void)drawKnitWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawKnitWithFillColor:(id)arg1;
+ (void)drawRainbowWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRainbowWithFillColor:(id)arg1;
+ (void)drawCloudWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCloudWithFillColor:(id)arg1;
+ (void)drawCameraWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCameraWithFillColor:(id)arg1;
+ (void)drawPhoneWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPhoneWithFillColor:(id)arg1;
+ (void)drawBusWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBusWithFillColor:(id)arg1;
+ (void)drawMetroWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMetroWithFillColor:(id)arg1;
+ (void)drawTrainWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrainWithFillColor:(id)arg1;
+ (void)drawBoatWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBoatWithFillColor:(id)arg1;
+ (void)drawHordeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHordeWithFillColor:(id)arg1;
+ (void)drawDoctorWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDoctorWithFillColor:(id)arg1;
+ (void)drawPipeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPipeWithFillColor:(id)arg1;
+ (void)drawDnaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDnaWithFillColor:(id)arg1;
+ (void)drawGraduationWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGraduationWithFillColor:(id)arg1;
+ (void)drawWorldWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWorldWithFillColor:(id)arg1;
+ (void)drawDocumentWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDocumentWithFillColor:(id)arg1;
+ (void)drawPrizeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPrizeWithFillColor:(id)arg1;
+ (void)drawCampingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCampingWithFillColor:(id)arg1;
+ (void)drawCompleteWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCompleteWithFillColor:(id)arg1;
+ (void)drawDrumsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDrumsWithFillColor:(id)arg1;
+ (void)drawHebrewWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHebrewWithFillColor:(id)arg1;
+ (void)drawTaoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTaoWithFillColor:(id)arg1;
+ (void)drawBuddhismWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBuddhismWithFillColor:(id)arg1;
+ (void)drawHinduWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHinduWithFillColor:(id)arg1;
+ (void)drawIslamWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawIslamWithFillColor:(id)arg1;
+ (void)drawChristianWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawChristianWithFillColor:(id)arg1;
+ (void)drawHtml5WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHtml5WithFillColor:(id)arg1;
+ (void)drawPizzaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPizzaWithFillColor:(id)arg1;
+ (void)drawSexWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSexWithFillColor:(id)arg1;
+ (void)drawMakeupWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMakeupWithFillColor:(id)arg1;
+ (void)drawPromptWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPromptWithFillColor:(id)arg1;
+ (void)drawGbpWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGbpWithFillColor:(id)arg1;
+ (void)drawEurWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawEurWithFillColor:(id)arg1;
+ (void)drawJpyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawJpyWithFillColor:(id)arg1;
+ (void)drawUsdWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUsdWithFillColor:(id)arg1;
+ (void)drawAvengersWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAvengersWithFillColor:(id)arg1;
+ (void)drawMediumWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMediumWithFillColor:(id)arg1;
+ (void)drawWordpressWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWordpressWithFillColor:(id)arg1;
+ (void)drawVimWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawVimWithFillColor:(id)arg1;
+ (void)drawDatabaseWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDatabaseWithFillColor:(id)arg1;
+ (void)drawMicWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMicWithFillColor:(id)arg1;
+ (void)drawKeyboardWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawKeyboardWithFillColor:(id)arg1;
+ (void)drawGuitarWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGuitarWithFillColor:(id)arg1;
+ (void)drawWaterWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWaterWithFillColor:(id)arg1;
+ (void)drawRickWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRickWithFillColor:(id)arg1;
+ (void)drawOfficeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawOfficeWithFillColor:(id)arg1;
+ (void)drawNoteWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNoteWithFillColor:(id)arg1;
+ (void)drawUrbanWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUrbanWithFillColor:(id)arg1;
+ (void)drawTennisWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTennisWithFillColor:(id)arg1;
+ (void)drawSewerWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSewerWithFillColor:(id)arg1;
+ (void)drawPsychologyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPsychologyWithFillColor:(id)arg1;
+ (void)drawWaitingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWaitingWithFillColor:(id)arg1;
+ (void)drawUnicodeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUnicodeWithFillColor:(id)arg1;
+ (void)drawTheaterWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTheaterWithFillColor:(id)arg1;
+ (void)drawMiniTriangleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMiniTriangleWithFillColor:(id)arg1;
+ (void)drawMiniCircleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMiniCircleWithFillColor:(id)arg1;
+ (void)drawSwiftWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSwiftWithFillColor:(id)arg1;
+ (void)drawRubyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRubyWithFillColor:(id)arg1;
+ (void)drawPythonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPythonWithFillColor:(id)arg1;
+ (void)drawObjectiveCWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawObjectiveCWithFillColor:(id)arg1;
+ (void)drawElectricityWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawElectricityWithFillColor:(id)arg1;
+ (void)drawPeopleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPeopleWithFillColor:(id)arg1;
+ (void)drawMotorbikeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMotorbikeWithFillColor:(id)arg1;
+ (void)drawDanceWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDanceWithFillColor:(id)arg1;
+ (void)drawBicycleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBicycleWithFillColor:(id)arg1;
+ (void)drawScifiWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawScifiWithFillColor:(id)arg1;
+ (void)drawLotrWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLotrWithFillColor:(id)arg1;
+ (void)drawFantasyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFantasyWithFillColor:(id)arg1;
+ (void)drawDraftsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDraftsWithFillColor:(id)arg1;
+ (void)drawTocWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTocWithFillColor:(id)arg1;
+ (void)drawPlansWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPlansWithFillColor:(id)arg1;
+ (void)drawContactsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawContactsWithFillColor:(id)arg1;
+ (void)drawReceiptsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawReceiptsWithFillColor:(id)arg1;
+ (void)drawPoliticsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPoliticsWithFillColor:(id)arg1;
+ (void)drawWeddingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWeddingWithFillColor:(id)arg1;
+ (void)drawToolsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawToolsWithFillColor:(id)arg1;
+ (void)drawHarryPotterWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHarryPotterWithFillColor:(id)arg1;
+ (void)drawFamilyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFamilyWithFillColor:(id)arg1;
+ (void)drawDreamWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDreamWithFillColor:(id)arg1;
+ (void)drawGroceriesWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGroceriesWithFillColor:(id)arg1;
+ (void)drawConferenceWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawConferenceWithFillColor:(id)arg1;
+ (void)drawClippingsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawClippingsWithFillColor:(id)arg1;
+ (void)drawCalendarWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCalendarWithFillColor:(id)arg1;
+ (void)drawWikiWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWikiWithFillColor:(id)arg1;
+ (void)drawRubberDuckWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRubberDuckWithFillColor:(id)arg1;
+ (void)drawD20WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawD20WithFillColor:(id)arg1;
+ (void)drawD6WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawD6WithFillColor:(id)arg1;
+ (void)drawConversationWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawConversationWithFillColor:(id)arg1;
+ (void)drawBitcoinWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBitcoinWithFillColor:(id)arg1;
+ (void)drawSplatoonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSplatoonWithFillColor:(id)arg1;
+ (void)drawLegalWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLegalWithFillColor:(id)arg1;
+ (void)drawIsaacWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawIsaacWithFillColor:(id)arg1;
+ (void)drawBigDaddyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBigDaddyWithFillColor:(id)arg1;
+ (void)drawStarTrekWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawStarTrekWithFillColor:(id)arg1;
+ (void)drawPlaceWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPlaceWithFillColor:(id)arg1;
+ (void)drawMushroomWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMushroomWithFillColor:(id)arg1;
+ (void)drawMinimalismWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMinimalismWithFillColor:(id)arg1;
+ (void)drawAiWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAiWithFillColor:(id)arg1;
+ (void)drawTrekkingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrekkingWithFillColor:(id)arg1;
+ (void)drawSwimmingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSwimmingWithFillColor:(id)arg1;
+ (void)drawRugbyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRugbyWithFillColor:(id)arg1;
+ (void)drawFootballWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFootballWithFillColor:(id)arg1;
+ (void)drawVolleyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawVolleyWithFillColor:(id)arg1;
+ (void)drawSoccerWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSoccerWithFillColor:(id)arg1;
+ (void)drawCricketWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCricketWithFillColor:(id)arg1;
+ (void)drawBaseballWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBaseballWithFillColor:(id)arg1;
+ (void)drawQuestionWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawQuestionWithFillColor:(id)arg1;
+ (void)drawListWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawListWithFillColor:(id)arg1;
+ (void)drawInfoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawInfoWithFillColor:(id)arg1;
+ (void)drawFlagWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFlagWithFillColor:(id)arg1;
+ (void)drawPriorityWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPriorityWithFillColor:(id)arg1;
+ (void)drawLiquorWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLiquorWithFillColor:(id)arg1;
+ (void)drawDrugsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDrugsWithFillColor:(id)arg1;
+ (void)drawCocktailWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCocktailWithFillColor:(id)arg1;
+ (void)drawBeerWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBeerWithFillColor:(id)arg1;
+ (void)drawWineWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWineWithFillColor:(id)arg1;
+ (void)drawVaderWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawVaderWithFillColor:(id)arg1;
+ (void)drawGymWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGymWithFillColor:(id)arg1;
+ (void)drawTodoFullWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodoFullWithFillColor:(id)arg1;
+ (void)drawTrashFullWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrashFullWithFillColor:(id)arg1;
+ (void)drawTrashFullLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrashFullLargeWithFillColor:(id)arg1;
+ (void)drawTodoFullLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodoFullLargeWithFillColor:(id)arg1;
+ (void)drawUntaggedFullWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUntaggedFullWithFillColor:(id)arg1;
+ (void)drawUntaggedEmptyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUntaggedEmptyWithFillColor:(id)arg1;
+ (void)drawTrashWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrashWithFillColor:(id)arg1;
+ (void)drawTodoEmptyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodoEmptyWithFillColor:(id)arg1;
+ (void)drawTodayFullWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodayFullWithFillColor:(id)arg1;
+ (void)drawTodayEmptyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodayEmptyWithFillColor:(id)arg1;
+ (void)drawNotesWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNotesWithFillColor:(id)arg1;
+ (void)drawArchiveWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawArchiveWithFillColor:(id)arg1;
+ (void)drawUntaggedFullLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUntaggedFullLargeWithFillColor:(id)arg1;
+ (void)drawUntaggedEmptyLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawUntaggedEmptyLargeWithFillColor:(id)arg1;
+ (void)drawTrashLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTrashLargeWithFillColor:(id)arg1;
+ (void)drawTodoEmptyLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodoEmptyLargeWithFillColor:(id)arg1;
+ (void)drawTodayFullLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodayFullLargeWithFillColor:(id)arg1;
+ (void)drawTodayEmptyLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodayEmptyLargeWithFillColor:(id)arg1;
+ (void)drawNotesLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNotesLargeWithFillColor:(id)arg1;
+ (void)drawArchiveLargeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawArchiveLargeWithFillColor:(id)arg1;
+ (void)drawZeldaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawZeldaWithFillColor:(id)arg1;
+ (void)drawYoutubeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawYoutubeWithFillColor:(id)arg1;
+ (void)drawYogaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawYogaWithFillColor:(id)arg1;
+ (void)drawXboxWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawXboxWithFillColor:(id)arg1;
+ (void)drawWorkWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWorkWithFillColor:(id)arg1;
+ (void)drawWishlistWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWishlistWithFillColor:(id)arg1;
+ (void)drawWindowsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWindowsWithFillColor:(id)arg1;
+ (void)drawWatchWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawWatchWithFillColor:(id)arg1;
+ (void)drawViewWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawViewWithFillColor:(id)arg1;
+ (void)drawTypographyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTypographyWithFillColor:(id)arg1;
+ (void)drawTwitterWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTwitterWithFillColor:(id)arg1;
+ (void)drawTvWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTvWithFillColor:(id)arg1;
+ (void)drawTumblrWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTumblrWithFillColor:(id)arg1;
+ (void)drawTravelWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTravelWithFillColor:(id)arg1;
+ (void)drawTodoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTodoWithFillColor:(id)arg1;
+ (void)drawTechWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTechWithFillColor:(id)arg1;
+ (void)drawTeaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawTeaWithFillColor:(id)arg1;
+ (void)drawSunWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSunWithFillColor:(id)arg1;
+ (void)drawStarWarsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawStarWarsWithFillColor:(id)arg1;
+ (void)drawStarWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawStarWithFillColor:(id)arg1;
+ (void)drawSportWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSportWithFillColor:(id)arg1;
+ (void)drawSkateboardWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSkateboardWithFillColor:(id)arg1;
+ (void)drawShoesWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawShoesWithFillColor:(id)arg1;
+ (void)drawShinyFrogWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawShinyFrogWithFillColor:(id)arg1;
+ (void)drawScienceWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawScienceWithFillColor:(id)arg1;
+ (void)drawSchoolWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawSchoolWithFillColor:(id)arg1;
+ (void)drawRodentsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRodentsWithFillColor:(id)arg1;
+ (void)drawRedditWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawRedditWithFillColor:(id)arg1;
+ (void)drawQuotesWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawQuotesWithFillColor:(id)arg1;
+ (void)drawPrivacyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPrivacyWithFillColor:(id)arg1;
+ (void)drawPooWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPooWithFillColor:(id)arg1;
+ (void)drawPokemonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPokemonWithFillColor:(id)arg1;
+ (void)drawPoetryWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPoetryWithFillColor:(id)arg1;
+ (void)drawPodcastWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPodcastWithFillColor:(id)arg1;
+ (void)drawPlaystationWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPlaystationWithFillColor:(id)arg1;
+ (void)drawPhotoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPhotoWithFillColor:(id)arg1;
+ (void)drawPeaceWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPeaceWithFillColor:(id)arg1;
+ (void)drawPasswordWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawPasswordWithFillColor:(id)arg1;
+ (void)drawNsfwWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNsfwWithFillColor:(id)arg1;
+ (void)drawNintendoSwitchWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNintendoSwitchWithFillColor:(id)arg1;
+ (void)drawNintendoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNintendoWithFillColor:(id)arg1;
+ (void)drawNerdWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNerdWithFillColor:(id)arg1;
+ (void)drawNatureWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawNatureWithFillColor:(id)arg1;
+ (void)drawMusicWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMusicWithFillColor:(id)arg1;
+ (void)drawMoonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMoonWithFillColor:(id)arg1;
+ (void)drawMoneyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMoneyWithFillColor:(id)arg1;
+ (void)drawMeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMeWithFillColor:(id)arg1;
+ (void)drawMathWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMathWithFillColor:(id)arg1;
+ (void)drawMarioWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMarioWithFillColor:(id)arg1;
+ (void)drawMailWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMailWithFillColor:(id)arg1;
+ (void)drawMacWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawMacWithFillColor:(id)arg1;
+ (void)drawLoveWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLoveWithFillColor:(id)arg1;
+ (void)drawLinuxWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawLinuxWithFillColor:(id)arg1;
+ (void)drawIphoneWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawIphoneWithFillColor:(id)arg1;
+ (void)drawIpadWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawIpadWithFillColor:(id)arg1;
+ (void)drawInstagramWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawInstagramWithFillColor:(id)arg1;
+ (void)drawIdeaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawIdeaWithFillColor:(id)arg1;
+ (void)drawHomeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHomeWithFillColor:(id)arg1;
+ (void)drawHolidayWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHolidayWithFillColor:(id)arg1;
+ (void)drawHealthWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawHealthWithFillColor:(id)arg1;
+ (void)drawGameWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawGameWithFillColor:(id)arg1;
+ (void)drawFurryWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFurryWithFillColor:(id)arg1;
+ (void)drawFunWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFunWithFillColor:(id)arg1;
+ (void)drawFitnessWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFitnessWithFillColor:(id)arg1;
+ (void)drawFacebookWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawFacebookWithFillColor:(id)arg1;
+ (void)drawEconomyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawEconomyWithFillColor:(id)arg1;
+ (void)drawDogWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDogWithFillColor:(id)arg1;
+ (void)drawDiyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDiyWithFillColor:(id)arg1;
+ (void)drawDevWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDevWithFillColor:(id)arg1;
+ (void)drawDesignWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDesignWithFillColor:(id)arg1;
+ (void)drawDoctorWhoWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawDoctorWhoWithFillColor:(id)arg1;
+ (void)drawCookingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCookingWithFillColor:(id)arg1;
+ (void)drawComicsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawComicsWithFillColor:(id)arg1;
+ (void)drawCoffeeWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCoffeeWithFillColor:(id)arg1;
+ (void)drawClothingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawClothingWithFillColor:(id)arg1;
+ (void)drawCinemaWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCinemaWithFillColor:(id)arg1;
+ (void)drawCatWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCatWithFillColor:(id)arg1;
+ (void)drawCarWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawCarWithFillColor:(id)arg1;
+ (void)drawBugWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBugWithFillColor:(id)arg1;
+ (void)drawBookWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBookWithFillColor:(id)arg1;
+ (void)drawBeautyWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBeautyWithFillColor:(id)arg1;
+ (void)drawBagsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBagsWithFillColor:(id)arg1;
+ (void)drawBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawBearWithFillColor:(id)arg1;
+ (void)drawArticleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawArticleWithFillColor:(id)arg1;
+ (void)drawArtWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawArtWithFillColor:(id)arg1;
+ (void)drawAppleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAppleWithFillColor:(id)arg1;
+ (void)drawAppWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAppWithFillColor:(id)arg1;
+ (void)drawAnimalsWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAnimalsWithFillColor:(id)arg1;
+ (void)drawAndroidWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 fillColor:(id)arg3;
+ (void)drawAndroidWithFillColor:(id)arg1;
+ (void)initialize;

@end

@interface SFExtensionPreferenceWindowController : NSWindowController <SFThemeManagerStylableObject, NSTextFieldDelegate>
{
    NSColor *_headerLabelColor;
    NSColor *_prefLabelColor;
    ITSwitch *_importImagesSwitch;
    ITSwitch *_appendURLSwitch;
    SFTextField *_tagsTextField;
    SFTextField *_disclamerTextField;
}

@property SFTextField *disclamerTextField; // @synthesize disclamerTextField=_disclamerTextField;
@property SFTextField *tagsTextField; // @synthesize tagsTextField=_tagsTextField;
@property ITSwitch *appendURLSwitch; // @synthesize appendURLSwitch=_appendURLSwitch;
@property ITSwitch *importImagesSwitch; // @synthesize importImagesSwitch=_importImagesSwitch;
@property NSColor *prefLabelColor; // @synthesize prefLabelColor=_prefLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)controlTextDidChange:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFFoldTextAttachment : SFNotesTextAttachment
{
    NSString *_foldIdentifier;
    NSAttributedString *_representedAttributedString;
}

+ (BOOL)isInline;
@property(retain) NSAttributedString *representedAttributedString; // @synthesize representedAttributedString=_representedAttributedString;
@property(retain) NSString *foldIdentifier; // @synthesize foldIdentifier=_foldIdentifier;
- (void).cxx_destruct;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGSize)attachmentSize;
- (BOOL)canBeDraggedAlone;
- (void)setThemeManager:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFNoteBoldTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFMDNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)noteTextFromPlainTextFile:(id)arg1;
- (id)importImages:(id)arg1 basePath:(id)arg2 forString:(id)arg3;
- (id)bearTextFromMarkdownText:(id)arg1 basePath:(id)arg2;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFSecureTextField : NSSecureTextField
{
    NSColor *_selectedTextColor;
    NSColor *_selectedTextBackgroundColor;
    NSColor *_placeholderTextColor;
    NSColor *_borderColor;
    NSColor *_insertionPointColor;
}

+ (Class)cellClass;
@property(copy, nonatomic) NSColor *insertionPointColor; // @synthesize insertionPointColor=_insertionPointColor;
@property(copy, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSColor *placeholderTextColor; // @synthesize placeholderTextColor=_placeholderTextColor;
@property(copy, nonatomic) NSColor *selectedTextBackgroundColor; // @synthesize selectedTextBackgroundColor=_selectedTextBackgroundColor;
@property(copy, nonatomic) NSColor *selectedTextColor; // @synthesize selectedTextColor=_selectedTextColor;
- (void).cxx_destruct;

@end

@interface SFSecureTextFieldCell : NSSecureTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)setUpFieldEditorAttributes:(id)arg1;

@end

@interface SFNotesClipView : NSClipView
{
    BOOL _scrollEnabled;
    unsigned long long _disableRequestCount;
}

@property unsigned long long disableRequestCount; // @synthesize disableRequestCount=_disableRequestCount;
@property BOOL scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)enableScroll;
- (void)disableScroll;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFNoteTableFileViewProxy : NSObject
{
    id <SFNoteTableFileViewProxyDelegate> _delegate;
    long long _screenScale;
    NSMutableArray *_filesThumbs;
    struct CGSize _thumbSize;
}

@property(retain) NSMutableArray *filesThumbs; // @synthesize filesThumbs=_filesThumbs;
@property(nonatomic) long long screenScale; // @synthesize screenScale=_screenScale;
@property(nonatomic) struct CGSize thumbSize; // @synthesize thumbSize=_thumbSize;
@property __weak id <SFNoteTableFileViewProxyDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)notifyDelegateThatThumbWasLoadedAtIndex:(unsigned long long)arg1;
- (void)setFiles:(id)arg1;
- (id)placeholderForSize:(struct CGSize)arg1;
- (void)drawInRect:(struct CGRect)arg1;

@end

@interface SFNoteTag : _SFNoteTag <SFEditorAutoCompleteItem>
{
    NSArray *lowerCaseDiacriticComponents;
}

+ (id)sanitizeTagName:(id)arg1;
+ (void)mergeDuplicateTagsInInManagedObjectContext:(id)arg1;
+ (void)deleteAllUnusedTagsInManagedObjectContext:(id)arg1;
+ (id)getOrCreateTagWithName:(id)arg1 InManagedObjectContext:(id)arg2;
+ (id)addNewTagWithName:(id)arg1 InManagedObjectContext:(id)arg2;
+ (id)tagWithName:(id)arg1 InManagedObjectContext:(id)arg2;
+ (id)rootTagsPredicate;
+ (id)rootTagsInManagedObjectContext:(id)arg1;
+ (id)populatedNotesTagsInManagedObjectContext:(id)arg1;
+ (id)notesTagsInManagedObjectContext:(id)arg1 withPredicate:(id)arg2;
@property(retain, nonatomic) NSArray *lowerCaseDiacriticComponents; // @synthesize lowerCaseDiacriticComponents;
- (void).cxx_destruct;
- (id)normalizedFatherTagName;
- (id)normalizedTitle;
- (id)leafTagName;
- (BOOL)isDescendantOfTag:(id)arg1;
- (BOOL)isChildOfTag:(id)arg1;
- (id)rootFatherTag;
- (id)fatherTag;
- (id)fatherTagName;
- (id)childTagsWithSortDescriptors:(id)arg1;
- (id)childsAndSubChildsTagsWithSortDescriptors:(id)arg1;
- (id)activeNotesWithSortDescriptors:(id)arg1;
- (id)tagComponentsLowerCaseDiacritic;
- (id)tagComponentsFromTagString:(id)arg1;
- (id)tagComponents;
- (id)tagStringFromComponents:(id)arg1;
@property(readonly, nonatomic, getter=isPinned) BOOL pinned;
- (void)deleteTagWithSyntax:(long long)arg1 inNotes:(id)arg2;
- (void)deleteTagWithSyntax:(long long)arg1;
- (id)renameTagWithTagNamed:(id)arg1 inNotes:(id)arg2 syntax:(long long)arg3;
- (id)renameTagWithTagNamed:(id)arg1 syntax:(long long)arg2;
- (void)addTagToNotes:(id)arg1 syntax:(long long)arg2;
- (id)hashTagStringForTagName:(id)arg1;
- (id)hashTagString;
- (void)updateModificationDate;
@property(readonly, nonatomic) NSNumber *untrashedNotesCount;
- (id)untrashedNotesPredicate;
- (id)uniqueIdentifier;
- (id)autoCompleteItemTextRepresentation;
- (id)autoCompleteItemTitle;
- (id)autoCompleteItemIcon:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTextKitStack : NSObject
{
    SFNotesTextThemeManager *_themeManager;
    SFNotesTextStorage *_noteTextStorage;
    SFNotesTextContainer *_textContainer;
    SFNotesLayoutManager *_layoutManager;
    SFNoteStylersManager *_stylerManager;
    SFNoteStyleEditor *_styleEditor;
}

@property(retain) SFNoteStyleEditor *styleEditor; // @synthesize styleEditor=_styleEditor;
@property(retain) SFNoteStylersManager *stylerManager; // @synthesize stylerManager=_stylerManager;
@property(retain) SFNotesLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(retain) SFNotesTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain) SFNotesTextStorage *noteTextStorage; // @synthesize noteTextStorage=_noteTextStorage;
@property(retain, nonatomic) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)cleanStylerCache;
- (id)newLayoutManager;
- (id)initBareboneWithTextContainerSize:(struct CGSize)arg1;
- (id)initWithTextContainerSize:(struct CGSize)arg1;
- (id)init;

@end

@interface SFNoteUnderlineTextMarkdownStyler : SFNoteUnderlineTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarker;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFGenericFileTextAttachment : SFNotesTextAttachment
{
    NSURL *_fileURL;
    NSString *_filename;
    NSDate *_modificationDate;
}

+ (BOOL)isInline;
@property(retain, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (void)drawArchiveGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawAudioGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawVideoGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawImageGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawHtmlGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawDocumentFileGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawTextFileGlyphForDocumentRect:(struct CGRect)arg1;
- (void)drawAttachmentDocumentForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentLabelsForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentBorderForAttachmentRect:(struct CGRect)arg1;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)attachmentBoundsForTextContainer:(id)arg1 originalAttachmentBounds:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (struct CGSize)attachmentSize;
- (BOOL)canBeDraggedAlone;
- (void)createFileWrapper;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFNoteCloudKitSync : NSObject
{
    BOOL _skipSync;
    BOOL _syncDisabledUntilLicenseRestoration;
    BOOL _cloudKitSetupComplete;
    NSManagedObjectContext *_managedObjectContext;
    NSOperationQueue *_syncOperationQueue;
    NSOperationQueue *_syncFilesOperationQueue;
    NSError *_lastSyncError;
    NSDate *_syncEnableUntilDate;
    NSDate *_disableSyncUntilDate;
    NSManagedObjectContext *_syncManagedObjectContext;
    NSManagedObjectContext *_syncFilesManagedObjectContext;
    double _coalescenceSyncTimeInterval;
    NSTimer *_coalescenceSyncTimer;
    NSTimer *_cooldownSyncTimer;
    NSTimer *_recurrentSyncTimer;
    NSOperationQueue *_cloudKitSetupOperationQueue;
    CKRecordZoneID *_privateNotesZoneID;
    SFIAPReceiptValidation *_appReceiptValidation;
    SFServerMetadata *_serverMetadata;
    SFNoteSyncNotifier *_syncNotifier;
}

@property(retain) SFNoteSyncNotifier *syncNotifier; // @synthesize syncNotifier=_syncNotifier;
@property(retain) SFServerMetadata *serverMetadata; // @synthesize serverMetadata=_serverMetadata;
@property(retain) SFIAPReceiptValidation *appReceiptValidation; // @synthesize appReceiptValidation=_appReceiptValidation;
@property(retain) CKRecordZoneID *privateNotesZoneID; // @synthesize privateNotesZoneID=_privateNotesZoneID;
@property(nonatomic) BOOL cloudKitSetupComplete; // @synthesize cloudKitSetupComplete=_cloudKitSetupComplete;
@property(retain) NSOperationQueue *cloudKitSetupOperationQueue; // @synthesize cloudKitSetupOperationQueue=_cloudKitSetupOperationQueue;
@property(nonatomic) BOOL syncDisabledUntilLicenseRestoration; // @synthesize syncDisabledUntilLicenseRestoration=_syncDisabledUntilLicenseRestoration;
@property(nonatomic) BOOL skipSync; // @synthesize skipSync=_skipSync;
@property(retain) NSTimer *recurrentSyncTimer; // @synthesize recurrentSyncTimer=_recurrentSyncTimer;
@property(retain) NSTimer *cooldownSyncTimer; // @synthesize cooldownSyncTimer=_cooldownSyncTimer;
@property(retain) NSTimer *coalescenceSyncTimer; // @synthesize coalescenceSyncTimer=_coalescenceSyncTimer;
@property(nonatomic) double coalescenceSyncTimeInterval; // @synthesize coalescenceSyncTimeInterval=_coalescenceSyncTimeInterval;
@property(retain) NSManagedObjectContext *syncFilesManagedObjectContext; // @synthesize syncFilesManagedObjectContext=_syncFilesManagedObjectContext;
@property(retain) NSManagedObjectContext *syncManagedObjectContext; // @synthesize syncManagedObjectContext=_syncManagedObjectContext;
@property(retain) NSDate *disableSyncUntilDate; // @synthesize disableSyncUntilDate=_disableSyncUntilDate;
@property(retain) NSDate *syncEnableUntilDate; // @synthesize syncEnableUntilDate=_syncEnableUntilDate;
@property(retain) NSError *lastSyncError; // @synthesize lastSyncError=_lastSyncError;
@property(retain) NSOperationQueue *syncFilesOperationQueue; // @synthesize syncFilesOperationQueue=_syncFilesOperationQueue;
@property(retain) NSOperationQueue *syncOperationQueue; // @synthesize syncOperationQueue=_syncOperationQueue;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)deleteNoteCustomZone;
- (void)checkICloudAccountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleSyncError:(id)arg1;
- (void)resetServerChangeToken;
- (void)deleteCloudKitLocalDataInManagedObjectContext:(id)arg1;
- (id)loadZoneSubscriptionID;
- (void)saveZoneSubscriptionID:(id)arg1;
- (id)loadCustomZoneID;
- (void)saveCustomZoneID:(id)arg1;
- (id)createSubscriptionOperation;
- (id)fetchSubscriptionOperation;
- (id)createCustomZoneOperation;
- (id)fetchCustomZoneOperation;
- (id)database;
- (void)setupCloudKit;
- (void)setSyncSubscriptionEnabledUntil:(id)arg1 appReceiptBase64:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)getSyncSubscriptionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)validateSyncSubscriptionFromAppReceipt:(id)arg1 refreshReceiptIfNeeded:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)validateSyncSubscriptionRefreshReceiptIfNeeded:(BOOL)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)validateSyncSubscription;
- (void)setSyncCoalescenceNormal;
- (void)setSyncCoalescenceSlow;
- (void)disableSyncUntilLicenseRestoration;
- (void)enableSyncWithSyncExpirationDate:(id)arg1;
- (void)stopSyncAndPreventItForTimeInterval:(double)arg1;
- (void)setCurrentSyncCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isGoingToSync;
- (BOOL)isAdditionalSyncScheduled;
- (BOOL)isSyncing;
- (BOOL)isLongSync;
- (void)syncFilesAfterSyncOperation:(id)arg1;
- (void)syncAllowingBGSync:(BOOL)arg1;
- (void)sync;
- (void)syncRecurrentTimerFired:(id)arg1;
- (void)startSyncRecurrentTimer;
- (void)cooldownSyncTimerFired:(id)arg1;
- (void)startSyncCooldownTimer;
- (void)syncUsingCooldown;
- (void)coalescenceSyncTimerFired:(id)arg1;
- (void)syncUsingCoalescence:(BOOL)arg1;
- (void)saveWithoutSync;
- (void)setupObserver;
- (id)initWithManagedObjectContext:(id)arg1;

@end

@interface SFIAPProducts : NSObject
{
}

+ (id)availableProductIdentifiersForAllPlatform;
+ (id)availableProductIdentifiers;

@end

@interface SFHTMLNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    NSString *_attachmentsRelativePath;
    NSDictionary *_fileDictionary;
}

@property(retain) NSDictionary *fileDictionary; // @synthesize fileDictionary=_fileDictionary;
@property(retain) NSString *attachmentsRelativePath; // @synthesize attachmentsRelativePath=_attachmentsRelativePath;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (BOOL)exportHTMLNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteText:(id)arg1 withFilenane:(id)arg2 toURL:(id)arg3 creationDate:(id)arg4 modificationDate:(id)arg5 title:(id)arg6 tags:(id)arg7 device:(id)arg8 error:(id *)arg9;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface GRMustacheInheritableSectionNode : NSObject <GRMustacheTemplateASTNode>
{
    NSString *_name;
    GRMustacheTemplateAST *_templateAST;
}

+ (id)inheritableSectionNodeWithName:(id)arg1 templateAST:(id)arg2;
@property(readonly, retain, nonatomic) GRMustacheTemplateAST *templateAST; // @synthesize templateAST=_templateAST;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)initWithName:(id)arg1 templateAST:(id)arg2;
- (id)resolveTemplateASTNode:(id)arg1;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEPubDocument : NSObject
{
    NSString *_title;
    NSString *_uuid;
    NSDate *_modificationDate;
    NSURL *_tmpURL;
    NSURL *_mimetypeURL;
    NSURL *_containerURL;
    NSURL *_pageTemplateURL;
    NSURL *_contentURL;
    NSURL *_tocURL;
    NSURL *_stylesheetURL;
    NSURL *_imagesURL;
    NSURL *_stylesURL;
    NSURL *_textsURL;
}

@property(retain) NSURL *textsURL; // @synthesize textsURL=_textsURL;
@property(retain) NSURL *stylesURL; // @synthesize stylesURL=_stylesURL;
@property(retain) NSURL *imagesURL; // @synthesize imagesURL=_imagesURL;
@property(retain) NSURL *stylesheetURL; // @synthesize stylesheetURL=_stylesheetURL;
@property(retain) NSURL *tocURL; // @synthesize tocURL=_tocURL;
@property(retain) NSURL *contentURL; // @synthesize contentURL=_contentURL;
@property(retain) NSURL *pageTemplateURL; // @synthesize pageTemplateURL=_pageTemplateURL;
@property(retain) NSURL *containerURL; // @synthesize containerURL=_containerURL;
@property(retain) NSURL *mimetypeURL; // @synthesize mimetypeURL=_mimetypeURL;
@property(retain) NSURL *tmpURL; // @synthesize tmpURL=_tmpURL;
@property(retain) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(retain) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)createDocumentStructureWithFileName:(id)arg1;
- (void)writeDocumentToURL:(id)arg1 withPages:(id)arg2 images:(id)arg3 andError:(id *)arg4;
- (id)initWithTitle:(id)arg1 UUID:(id)arg2 andModificatioDate:(id)arg3;

@end

@interface SFNotePasteboardItem : NSObject <NSPasteboardWriting, NSPasteboardReading>
{
    NSURL *_fileURL;
    NSString *_noteUniqueIdentifier;
}

+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (id)noteUniqueIdentifierForWrites:(id)arg1;
@property(retain) NSString *noteUniqueIdentifier; // @synthesize noteUniqueIdentifier=_noteUniqueIdentifier;
@property(retain) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithURL:(id)arg1 noteUniqueIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFConflictedNoteTableCellView : SFNoteLeftInfoTableCellView
{
    BOOL _isConflictHead;
    NSImageView *_conflictedIconImageView;
    SFStyleView *_conflictedGroupingView;
    NSLayoutConstraint *_conflictedGroupingViewTopConstraint;
    NSLayoutConstraint *_conflictedGroupingViewBottomConstraint;
}

@property(nonatomic) BOOL isConflictHead; // @synthesize isConflictHead=_isConflictHead;
@property __weak NSLayoutConstraint *conflictedGroupingViewBottomConstraint; // @synthesize conflictedGroupingViewBottomConstraint=_conflictedGroupingViewBottomConstraint;
@property __weak NSLayoutConstraint *conflictedGroupingViewTopConstraint; // @synthesize conflictedGroupingViewTopConstraint=_conflictedGroupingViewTopConstraint;
@property __weak SFStyleView *conflictedGroupingView; // @synthesize conflictedGroupingView=_conflictedGroupingView;
@property __weak NSImageView *conflictedIconImageView; // @synthesize conflictedIconImageView=_conflictedIconImageView;
- (void).cxx_destruct;

@end

@interface SFNoteTextCompletionRowView : NSTableRowView
{
}

- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)updateCellViewIcon;
- (void)addSubview:(id)arg1;
- (void)setSelected:(BOOL)arg1;

@end

@interface SFNotesPlaceholderStyleKit : NSObject
{
}

+ (id)imageOfApplicationLockSmallPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (id)imageOfApplicationLockPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (id)imageOfEmptySearchPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfEmptyTrashcanPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfNormalPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfPasswordPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfPasswordPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfNoNoteInListPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfSunMountainRiverBgWithBearStrokeColor:(id)arg1;
+ (id)imageOfBearLoadingPlaceholderWithSize:(struct CGSize)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8 accentFillColor:(id)arg9;
+ (id)imageOfBearLoadingSignboardPlaceholderWithSize:(struct CGSize)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8 accentFillColor:(id)arg9;
+ (id)imageOfBearHeartEyesSmallWithSize:(struct CGSize)arg1 backgroundColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfBearPreferencesTableProBuyWithSize:(struct CGSize)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8;
+ (id)imageOfBearProPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearNoseColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (id)imageOfEmptyTrashcanPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfEmptySearchPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfMultipleNotePlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfNormalPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (id)imageOfMountainRiverBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (id)imageOfMountainBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (id)imageOfSpaceBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4;
+ (id)imageOfBaseBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawApplicationLockSmallPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawApplicationLockPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawEmptySearchPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawEmptyTrashcanPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawNormalPlaceholder2WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4 bearBackgroundColor:(id)arg5 bearShadowColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawNormalPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawPasswordPlaceholder2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawPasswordPlaceholderWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4 bearBackgroundColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawPasswordPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawNoNoteInListPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawSunMountainRiverBgWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearStrokeColor:(id)arg3;
+ (void)drawSunMountainRiverBgWithBearStrokeColor:(id)arg1;
+ (void)drawBearLoadingPlaceholderWithMainFrame:(struct CGRect)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8 accentFillColor:(id)arg9;
+ (void)drawBearLoadingSignboardPlaceholderWithMainFrame:(struct CGRect)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8 accentFillColor:(id)arg9;
+ (void)drawBearHeartEyesSmallWithFrame:(struct CGRect)arg1 backgroundColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawBearPreferencesTableProBuyWithFrame:(struct CGRect)arg1 backgroundColor:(id)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearNoseColor:(id)arg6 bearFurColor:(id)arg7 bearStrokeColor:(id)arg8;
+ (void)drawBearProPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearNoseColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawEmptyTrashcanPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawEmptySearchPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawDayBgWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawDayBgWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawMultipleNotePlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawNormalPlaceholderWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawTowerWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4 bearShadowColor:(id)arg5 bearStrokeColor:(id)arg6;
+ (void)drawTowerWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawCastleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4 bearShadowColor:(id)arg5 bearStrokeColor:(id)arg6;
+ (void)drawCastleWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawMountainRiverBackground2WithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawMountainRiverBackground2WithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawFloatingNoteWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearStrokeColor:(id)arg6;
+ (void)drawFloatingNoteWithBackgroundStrokeColor:(id)arg1 bearBackgroundColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawTrashBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawTrashBearWithBearBackgroundColor:(id)arg1 bearFurColor:(id)arg2 bearStrokeColor:(id)arg3;
+ (void)drawBirdFrontalWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearFurColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawBirdFrontalWithBearFurColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawLogWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearFurColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawLogWithBearFurColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawFishingHoleWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearFurColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawFishingHoleWithBearFurColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawBirdSideWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBirdSideWithBearBackgroundColor:(id)arg1 bearFurColor:(id)arg2 bearStrokeColor:(id)arg3;
+ (void)drawFishingBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearFurColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawFishingBearWithBearFurColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawMountainRiverBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawMountainRiverBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawMountainBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawMountainBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawCosmoBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundStrokeColor:(id)arg3 bearBackgroundColor:(id)arg4 bearShadowColor:(id)arg5 bearStrokeColor:(id)arg6;
+ (void)drawCosmoBearWithBackgroundStrokeColor:(id)arg1 bearBackgroundColor:(id)arg2 bearShadowColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawSpaceBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4 bearBackgroundColor:(id)arg5 bearShadowColor:(id)arg6;
+ (void)drawSpaceBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4;
+ (void)drawGateBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawGateBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)drawGatekeeperBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawGatekeeperBearWithBearBackgroundColor:(id)arg1 bearFurColor:(id)arg2 bearStrokeColor:(id)arg3;
+ (void)drawBearShrugWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawBearShrugWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBearPawWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBearPawWithBearBackgroundColor:(id)arg1 bearFurColor:(id)arg2 bearStrokeColor:(id)arg3;
+ (void)drawSmallSignboardWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawSmallSignboardWithBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawClessidreWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawClessidreWithBearBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawWavingBearLeftFacingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawWavingBearLeftFacingWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBearPawSmallRightWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawBearPawSmallRightWithBearBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawBearPawSmallLeftWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawBearPawSmallLeftWithBearBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawBearHeartSmallWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawBearHeartSmallWithBearBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawBearHeartWithBearBackgroundColor:(id)arg1 bearStrokeColor:(id)arg2;
+ (void)drawMegaphoneWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearStrokeColor:(id)arg6;
+ (void)drawMegaphoneWithBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearStrokeColor:(id)arg4;
+ (void)drawBearTrashWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawBearTrashWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBearFishingWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawBearFishingWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBearMultipleNotesWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawBearMultipleNotesWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBalloonWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundStrokeColor:(id)arg3;
+ (void)drawBalloonWithBackgroundStrokeColor:(id)arg1;
+ (void)drawSunWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundStrokeColor:(id)arg3;
+ (void)drawSunWithBackgroundStrokeColor:(id)arg1;
+ (void)drawMoonWithBackgroundStrokeColor:(id)arg1;
+ (void)drawWavingBearWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 bearBackgroundColor:(id)arg3 bearShadowColor:(id)arg4 bearNoseColor:(id)arg5 bearFurColor:(id)arg6 bearStrokeColor:(id)arg7;
+ (void)drawWavingBearWithBearBackgroundColor:(id)arg1 bearShadowColor:(id)arg2 bearNoseColor:(id)arg3 bearFurColor:(id)arg4 bearStrokeColor:(id)arg5;
+ (void)drawBaseBackgroundWithFrame:(struct CGRect)arg1 resizing:(long long)arg2 backgroundColor:(id)arg3 backgroundStrokeColor:(id)arg4;
+ (void)drawBaseBackgroundWithBackgroundColor:(id)arg1 backgroundStrokeColor:(id)arg2;
+ (void)initialize;

@end

@interface SFNoteTextCompletionCellView : NSTableCellView
{
    NSImage *_icon;
    NSImage *_selectedIcon;
}

@property(retain) NSImage *selectedIcon; // @synthesize selectedIcon=_selectedIcon;
@property(retain) NSImage *icon; // @synthesize icon=_icon;
- (void).cxx_destruct;

@end

@interface SFRTFDNoteImporter : SFRTFNoteImporter
{
}

- (id)attrStringWithURL:(id)arg1;

@end

@interface SFPushButton : NSButton <SFThemeManagerStylableObject>
{
    BOOL _callToAction;
}

@property(nonatomic) BOOL callToAction; // @synthesize callToAction=_callToAction;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)updateButtonImage;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTemplateRepository : NSObject
{
    id <GRMustacheTemplateRepositoryDataSource> _dataSource;
    NSMutableDictionary *_templateASTForTemplateID;
    GRMustacheConfiguration *_configuration;
}

+ (id)templateRepository;
+ (id)templateRepositoryWithDictionary:(id)arg1;
+ (id)templateRepositoryWithBundle:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;
+ (id)templateRepositoryWithBundle:(id)arg1;
+ (id)templateRepositoryWithDirectory:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;
+ (id)templateRepositoryWithDirectory:(id)arg1;
+ (id)templateRepositoryWithBaseURL:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;
+ (id)templateRepositoryWithBaseURL:(id)arg1;
@property(copy, nonatomic) GRMustacheConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) id <GRMustacheTemplateRepositoryDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (id)templateASTNamed:(id)arg1 relativeToTemplateID:(id)arg2 error:(id *)arg3;
- (id)templateASTFromString:(id)arg1 contentType:(unsigned long long)arg2 templateID:(id)arg3 error:(id *)arg4;
- (void)reloadTemplates;
- (id)templateFromString:(id)arg1 contentType:(unsigned long long)arg2 error:(id *)arg3;
- (id)templateFromString:(id)arg1 error:(id *)arg2;
- (id)templateNamed:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface GRMustacheTemplateRepositoryBaseURL : GRMustacheTemplateRepository <GRMustacheTemplateRepositoryDataSource>
{
    NSURL *_baseURL;
    NSString *_templateExtension;
    unsigned long long _encoding;
}

- (id)templateRepository:(id)arg1 templateStringForTemplateID:(id)arg2 error:(id *)arg3;
- (id)templateRepository:(id)arg1 templateIDForName:(id)arg2 relativeToTemplateID:(id)arg3;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTemplateRepositoryDirectory : GRMustacheTemplateRepository <GRMustacheTemplateRepositoryDataSource>
{
    NSString *_directoryPath;
    NSString *_templateExtension;
    unsigned long long _encoding;
}

- (id)templateRepository:(id)arg1 templateStringForTemplateID:(id)arg2 error:(id *)arg3;
- (id)templateRepository:(id)arg1 templateIDForName:(id)arg2 relativeToTemplateID:(id)arg3;
- (void)dealloc;
- (id)initWithDirectory:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTemplateRepositoryBundle : GRMustacheTemplateRepository <GRMustacheTemplateRepositoryDataSource>
{
    NSBundle *_bundle;
    NSString *_templateExtension;
    unsigned long long _encoding;
}

- (id)templateRepository:(id)arg1 templateStringForTemplateID:(id)arg2 error:(id *)arg3;
- (id)templateRepository:(id)arg1 templateIDForName:(id)arg2 relativeToTemplateID:(id)arg3;
- (void)dealloc;
- (id)initWithBundle:(id)arg1 templateExtension:(id)arg2 encoding:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTemplateRepositoryPartialsDictionary : GRMustacheTemplateRepository <GRMustacheTemplateRepositoryDataSource>
{
    NSDictionary *_partialsDictionary;
}

- (id)templateRepository:(id)arg1 templateStringForTemplateID:(id)arg2 error:(id *)arg3;
- (id)templateRepository:(id)arg1 templateIDForName:(id)arg2 relativeToTemplateID:(id)arg3;
- (void)dealloc;
- (id)initWithPartialsDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFArchiveSidebarItem : SFStaticSidebarItem
{
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
- (id)notePropertiesToFetch;
- (id)uniqueIdentifier;
- (BOOL)canPinNotes;
- (BOOL)canDeleteNotes;
- (BOOL)canAddNotes;
- (void)addNotes:(id)arg1;
- (BOOL)hasNotesInManagedObjectContext:(id)arg1;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFLocalDataMigrator : NSObject
{
}

+ (id)documentDataURL;
+ (BOOL)migrateFromOldDataURL:(id)arg1 toNewDataURL:(id)arg2 error:(id *)arg3;
+ (BOOL)migrateFromAppSupportToAppGroup:(id *)arg1;
+ (BOOL)migrateFromDocumentToAppGroup:(id *)arg1;
+ (BOOL)migrateToCurrentVersion:(id *)arg1;

@end

@interface SFNoteTagID : NSManagedObjectID
{
}

@end

@interface _SFNoteTag : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)notesSet;
@property(readonly, nonatomic) SFNoteTagID *objectID;

// Remaining properties
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) NSSet *notes; // @dynamic notes;
@property(retain, nonatomic) NSString *title; // @dynamic title;

@end

@interface SFNoteTagAttributes : NSObject
{
}

+ (id)title;
+ (id)modificationDate;

@end

@interface SFNoteTagRelationships : NSObject
{
}

+ (id)notes;

@end

@interface SFAddressID : NSManagedObjectID
{
}

@end

@interface _SFAddress : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *city; // @dynamic city;
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSString *jobTitle; // @dynamic jobTitle;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSString *organization; // @dynamic organization;
@property(retain, nonatomic) NSString *phone; // @dynamic phone;
@property(retain, nonatomic) NSString *state; // @dynamic state;
@property(retain, nonatomic) NSString *street; // @dynamic street;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;
@property(retain, nonatomic) NSString *zip; // @dynamic zip;

@end

@interface GRMustacheCompiler : NSObject <GRMustacheTemplateParserDelegate>
{
    NSError *_fatalError;
    NSMutableArray *_currentASTNodes;
    NSMutableArray *_ASTNodesStack;
    GRMustacheToken *_currentOpeningToken;
    NSMutableArray *_openingTokenStack;
    NSObject *_currentTagValue;
    NSMutableArray *_tagValueStack;
    GRMustacheTemplateRepository *_templateRepository;
    id _baseTemplateID;
    unsigned long long _contentType;
    BOOL _contentTypeLocked;
}

@property(retain, nonatomic) NSMutableArray *ASTNodesStack; // @synthesize ASTNodesStack=_ASTNodesStack;
@property(nonatomic) NSMutableArray *currentASTNodes; // @synthesize currentASTNodes=_currentASTNodes;
@property(retain, nonatomic) NSMutableArray *tagValueStack; // @synthesize tagValueStack=_tagValueStack;
@property(nonatomic) NSObject *currentTagValue; // @synthesize currentTagValue=_currentTagValue;
@property(retain, nonatomic) NSMutableArray *openingTokenStack; // @synthesize openingTokenStack=_openingTokenStack;
@property(nonatomic) GRMustacheToken *currentOpeningToken; // @synthesize currentOpeningToken=_currentOpeningToken;
@property(retain, nonatomic) id baseTemplateID; // @synthesize baseTemplateID=_baseTemplateID;
@property(nonatomic) GRMustacheTemplateRepository *templateRepository; // @synthesize templateRepository=_templateRepository;
@property(retain, nonatomic) NSError *fatalError; // @synthesize fatalError=_fatalError;
- (id)parseErrorAtToken:(id)arg1 description:(id)arg2;
- (void)failWithFatalError:(id)arg1;
- (void)templateParser:(id)arg1 didFailWithError:(id)arg2;
- (BOOL)templateParser:(id)arg1 shouldContinueAfterParsingToken:(id)arg2;
- (void)dealloc;
- (id)templateASTReturningError:(id *)arg1;
- (id)initWithContentType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteTextCompletionWindowController : NSWindowController
{
    BOOL _isClosing;
}

@property(nonatomic) BOOL isClosing; // @synthesize isClosing=_isClosing;
- (id)completionViewController;
- (void)setupPanelWindow;
- (void)windowDidLoad;

@end

@interface SFChange : _SFChange
{
}

+ (id)objectsWithUniqueIdentifiers:(id)arg1 entityClass:(Class)arg2 inManagedObjectContext:(id)arg3;
+ (id)objectsUpdatesForChangeItemPredicate:(id)arg1 deletedUIDs:(id *)arg2 entityClass:(Class)arg3 inManagedObjectContext:(id)arg4;
+ (id)objectsUpdatesSinceChange:(id)arg1 deletedUIDs:(id *)arg2 entityClass:(Class)arg3 inManagedObjectContext:(id)arg4;
+ (id)objectsUpdatedForChange:(id)arg1 deletedUIDs:(id *)arg2 entityClass:(Class)arg3 inManagedObjectContext:(id)arg4;
+ (id)objectsUpdatedSinceChange:(id)arg1 deletedUIDs:(id *)arg2 inManagedObjectContext:(id)arg3;
+ (id)objectsUpdatedForChange:(id)arg1 deletedUIDs:(id *)arg2 inManagedObjectContext:(id)arg3;
+ (id)initialBaselineChangesInManagedObjectContext:(id)arg1;
+ (id)baselineChangesInManagedObjectContext:(id)arg1 shouldCreateInitialBaseline:(BOOL)arg2;
+ (void)deleteChangesBeforeChange:(id)arg1 inManagedObjectContext:(id)arg2;
+ (void)deleteAllChangesInManagedObjectContext:(id)arg1;
+ (void)updateChangesInInManagedObjectContext:(id)arg1;
+ (id)newChangeForNewOrUpdatedObjects:(id)arg1 deletedObjects:(id)arg2 inManagedObjectContext:(id)arg3;
+ (id)createChangeInManagedObjectContext:(id)arg1;
+ (id)changeItemsSinceChange:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)changeWithToken:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)latestChangeInManagedObjectContext:(id)arg1;
- (void)addChangeItemForObjects:(id)arg1;
- (void)removeChangeItemsWithUniqueIdentifiers:(id)arg1;

@end

@interface SFNoteSidebarCoreController : NSObject <MRTFetchedResultsControllerDelegate>
{
    id <SFNoteSidebarCoreControllerDelegate> _delegate;
    NSMutableArray *_sidebarItems;
    NSManagedObjectContext *_managedObjectContext;
    NSMutableArray *_staticSidebarItems;
    SFNotesSidebarItem *_notesSidebarItem;
    SFNotesTrashSidebarItem *_trashSidebarItem;
    SFArchiveSidebarItem *_archiveSidebarItem;
    MRTFetchedResultsController *_rootTagsfetchedResultController;
    MRTFetchedResultsController *_allTagsfetchedResultController;
    NSTimer *_updateSidebarTimer;
}

@property(retain, nonatomic) NSTimer *updateSidebarTimer; // @synthesize updateSidebarTimer=_updateSidebarTimer;
@property(retain, nonatomic) MRTFetchedResultsController *allTagsfetchedResultController; // @synthesize allTagsfetchedResultController=_allTagsfetchedResultController;
@property(retain, nonatomic) MRTFetchedResultsController *rootTagsfetchedResultController; // @synthesize rootTagsfetchedResultController=_rootTagsfetchedResultController;
@property(retain) SFArchiveSidebarItem *archiveSidebarItem; // @synthesize archiveSidebarItem=_archiveSidebarItem;
@property(retain) SFNotesTrashSidebarItem *trashSidebarItem; // @synthesize trashSidebarItem=_trashSidebarItem;
@property(retain) SFNotesSidebarItem *notesSidebarItem; // @synthesize notesSidebarItem=_notesSidebarItem;
@property(retain) NSMutableArray *staticSidebarItems; // @synthesize staticSidebarItems=_staticSidebarItems;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(retain) NSMutableArray *sidebarItems; // @synthesize sidebarItems=_sidebarItems;
@property id <SFNoteSidebarCoreControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndex:(unsigned long long)arg3 progressiveIndex:(unsigned long long)arg4 forChangeType:(unsigned long long)arg5 forProgressiveChangeType:(unsigned long long)arg6 newIndex:(unsigned long long)arg7 newProgressiveIndex:(unsigned long long)arg8;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controllerWillChangeContent:(id)arg1;
- (unsigned long long)levelForItem:(id)arg1;
- (id)relatedSidebarItemsForSidebarItem:(id)arg1;
- (id)itemWithUniqueIdentifier:(id)arg1;
- (void)showArchiveSidebarItem:(BOOL)arg1;
- (void)updateStaticSidebarItemStatusFired:(id)arg1;
- (void)updateStaticSidebarItemStatus;
- (void)ubiquitousKeyValueStoreDidChange:(id)arg1;
- (void)managedObjectContextObjectsDidChange:(id)arg1;
- (void)setupObserver;
- (void)setupSidebarItems;
- (void)setupStaticSidebarItems;
- (void)setupAllTagsFetchedResultController;
- (void)setupRootTagsFetchedResultController;
- (void)setupContent;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFColorMatchResult : NSObject
{
    NSString *_key;
    struct _NSRange _range;
}

@property struct _NSRange range; // @synthesize range=_range;
@property(retain) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)cssClass;

@end

@interface GRMustacheTemplateAST : NSObject <GRMustacheTemplateASTNode>
{
    NSArray *_templateASTNodes;
    unsigned long long _contentType;
}

+ (id)templateASTWithASTNodes:(id)arg1 contentType:(unsigned long long)arg2;
+ (id)placeholderAST;
@property(nonatomic) unsigned long long contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSArray *templateASTNodes; // @synthesize templateASTNodes=_templateASTNodes;
- (id)resolveTemplateASTNode:(id)arg1;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
- (id)initWithASTNodes:(id)arg1 contentType:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isPlaceholder) BOOL placeholder;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEncryptionUIController : NSObject <NSWindowDelegate, SFUnlockPasswordPromptViewControllerDelegate>
{
    NSWindow *_mainAppWindow;
    NSWindowController *_encryptionWindowController;
    SFNoteEncryptionActionManager *_modalEncryptionActionManager;
    SFUnlockPasswordPromptViewController *_embedUnlockPasswordPromptViewController;
    SFUnlockPasswordPromptViewController *_currentPasswordPromptViewController;
    struct _NSModalSession *_encryptionModalSession;
}

@property(nonatomic) struct _NSModalSession *encryptionModalSession; // @synthesize encryptionModalSession=_encryptionModalSession;
@property __weak SFUnlockPasswordPromptViewController *currentPasswordPromptViewController; // @synthesize currentPasswordPromptViewController=_currentPasswordPromptViewController;
@property __weak SFUnlockPasswordPromptViewController *embedUnlockPasswordPromptViewController; // @synthesize embedUnlockPasswordPromptViewController=_embedUnlockPasswordPromptViewController;
@property(retain) SFNoteEncryptionActionManager *modalEncryptionActionManager; // @synthesize modalEncryptionActionManager=_modalEncryptionActionManager;
@property(retain) NSWindowController *encryptionWindowController; // @synthesize encryptionWindowController=_encryptionWindowController;
@property __weak NSWindow *mainAppWindow; // @synthesize mainAppWindow=_mainAppWindow;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)unlockPasswordPromptDidCancelOperation:(id)arg1;
- (void)showModalEncryptionWindowForPromptViewController:(id)arg1;
- (id)modalRenamePasswordPromptViewController;
- (id)modalCreatePasswordPromptViewController;
- (id)modalUnlockPasswordPromptViewController;
- (CDUnknownBlockType)modalCompletionBlockWithCompletion:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)modalShowingBlockWithTitle:(id)arg1;
- (CDUnknownBlockType)modalUnlockCreationBlock;
- (void)renamePasswordForNotes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unlockNotes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeEncryptionFromNotes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addEncryptionToNotes:(id)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteInfoTextAnalysisItem : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    SFTextAnalyzer *_textAnalyzer;
    NSString *_wordsCount;
    NSString *_charactersCount;
    NSString *_paragraphsCount;
    NSString *_readTime;
    NSColor *_textColor;
    NSColor *_labelColor;
    NSOperationQueue *_noteStrippingQueue;
}

@property(retain) NSOperationQueue *noteStrippingQueue; // @synthesize noteStrippingQueue=_noteStrippingQueue;
@property(retain) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(retain) NSString *readTime; // @synthesize readTime=_readTime;
@property(retain) NSString *paragraphsCount; // @synthesize paragraphsCount=_paragraphsCount;
@property(retain) NSString *charactersCount; // @synthesize charactersCount=_charactersCount;
@property(retain) NSString *wordsCount; // @synthesize wordsCount=_wordsCount;
@property(retain) SFTextAnalyzer *textAnalyzer; // @synthesize textAnalyzer=_textAnalyzer;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (id)formatTimeFromSeconds:(unsigned long long)arg1;
- (void)updateTextInfoWithText:(id)arg1 isPartial:(BOOL)arg2;
- (id)identifier;
- (double)cellHeight;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesThemesManager : NSObject
{
}

- (id)mameForChineseTheme:(id)arg1;
- (id)chineseNameForTheme:(id)arg1;
- (id)chineseToThemNamesDictionary;
- (id)themeToChineseNamesDictionary;
- (id)appIconNameForThemeName:(id)arg1;
- (id)textThemeForThemeName:(id)arg1 fontThemeName:(id)arg2;
- (id)fontThemeForThemeName:(id)arg1;
- (id)appThemeForThemeName:(id)arg1;
- (id)fontThemeForThemeNameDictionary;
- (id)textThemeForThemeNameDictionary;
- (id)appThemeForThemeNameDictionary;
- (id)availableThemesNames;
- (id)availableFontThemesNames;
- (id)defaultThemeName;
- (id)defaultTextThemeName;
- (id)defaultFontThemeName;

@end

@interface GRMustacheIdentifierExpression : GRMustacheExpression
{
    NSString *_identifier;
}

+ (id)expressionWithIdentifier:(id)arg1;
@property(readonly, retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)initWithIdentifier:(id)arg1;
- (BOOL)acceptVisitor:(id)arg1 error:(id *)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface SFEncryptionFormBGView : NSView
{
    BOOL _drawHole;
    NSColor *_backgroundColor;
    NSColor *_strokeColor;
    NSShadow *_boxShadow;
}

@property(retain) NSShadow *boxShadow; // @synthesize boxShadow=_boxShadow;
@property(retain) NSColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property BOOL drawHole; // @synthesize drawHole=_drawHole;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MRTFetchedResultsController : NSObject <NSCopying>
{
    NSMutableArray *_fetchedObjects;
    NSMutableArray *_arrangedObjects;
    struct MRTFetchedResultsControllerDelegateHasMethods _delegateHas;
    id <MRTFetchedResultsControllerDelegate> _delegate;
    NSManagedObjectContext *_managedObjectContext;
    NSFetchRequest *_fetchRequest;
    NSPredicate *_filterPredicate;
    NSArray *_sortDescriptors;
    NSFetchRequest *_arrangedObjectInMemoryFetchRequest;
}

@property(nonatomic) struct MRTFetchedResultsControllerDelegateHasMethods delegateHas; // @synthesize delegateHas=_delegateHas;
@property(retain, nonatomic) NSArray *arrangedObjects; // @synthesize arrangedObjects=_arrangedObjects;
@property(retain, nonatomic) NSFetchRequest *arrangedObjectInMemoryFetchRequest; // @synthesize arrangedObjectInMemoryFetchRequest=_arrangedObjectInMemoryFetchRequest;
@property(copy, nonatomic) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(retain, nonatomic) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property(retain, nonatomic) NSFetchRequest *fetchRequest; // @synthesize fetchRequest=_fetchRequest;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(retain, nonatomic) NSArray *fetchedObjects; // @synthesize fetchedObjects=_fetchedObjects;
@property(nonatomic) id <MRTFetchedResultsControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)notifyChangesForOldContainer:(id)arg1 newContainer:(id)arg2 deletedObjects:(id)arg3 insertedObjects:(id)arg4 updatedObjects:(id)arg5;
- (void)delegateDidChangeObject:(id)arg1 atIndex:(unsigned long long)arg2 progressiveIndex:(unsigned long long)arg3 changeType:(unsigned long long)arg4 progressiveChangeType:(unsigned long long)arg5 newIndex:(unsigned long long)arg6 newProgressiveIndex:(unsigned long long)arg7;
- (void)delegateDidChangeContent;
- (void)delegateWillChangeContent;
- (BOOL)object:(id)arg1 isConformToFetchRequest:(id)arg2;
- (id)evaluateDeletedObjects:(id)arg1 insertedObjects:(id)arg2 updatedObjects:(id)arg3 inContainer:(id)arg4 fetchRequest:(id)arg5;
- (void)managedObjectContextObjectsDidChange:(id)arg1;
- (void)updateArrangedObjectInMemoryFetchRequest;
- (void)sortArrangedObjects;
- (void)filterArrangedObjects;
- (unsigned long long)count;
- (unsigned long long)indexOfObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (BOOL)performFetch:(id *)arg1;
- (void)setupMocObserver;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithManagedObjectContext:(id)arg1 fetchRequest:(id)arg2;

@end

@interface SFNoteTextStylerRegexHelper : NSObject
{
}

+ (id)allowedPunctuationCharactersAfterInlineStyler;
+ (id)allowedPunctuationCharactersBeforeInlineStyler;
+ (id)hexColorPattern;
+ (id)inlineNonEmptyContentWithoutBoundarySpacesExludingCharacters:(id)arg1;
+ (id)inlineNonEmptyContentWithoutBoundarySpaces;
+ (id)inlineContentWithoutBoundarySpaces;
+ (id)inlineEndPattern;
+ (id)inlineBeginPattern;

@end

@interface SFHTMLImagesUtils : NSObject
{
}

+ (id)removeImgTagsfromHTML:(id)arg1;
+ (id)sortedRangesWithReplacements:(id)arg1;
+ (void)replaceImagesInHTML:(id)arg1 relativeToUrl:(id)arg2 andRelativePath:(id)arg3 success:(CDUnknownBlockType)arg4;
+ (id)safeFilenameForPath:(id)arg1 withTakenURLs:(id)arg2;
+ (id)replacementsWithHTML:(id)arg1 relativeToUrl:(id)arg2 download:(BOOL)arg3;
+ (id)replacementsWithHTML:(id)arg1 relativeToUrl:(id)arg2;
+ (id)sfnoteimagesWithHTML:(id)arg1 relativeToUrl:(id)arg2 withMoc:(id)arg3;

@end

@interface SFNotesPreferenceManager : NSObject
{
    NSDate *_validatedSyncEnabledUntilDate;
}

+ (id)sharedPreferenceManager;
@property(retain, nonatomic) NSDate *validatedSyncEnabledUntilDate; // @synthesize validatedSyncEnabledUntilDate=_validatedSyncEnabledUntilDate;
- (void).cxx_destruct;
@property(retain, nonatomic) NSNumber *debugIsNotPro;
@property(retain, nonatomic) NSNumber *webExtensionsImportImages;
@property(retain, nonatomic) NSNumber *webExtensionsAppendURL;
@property(retain, nonatomic) NSString *webExtensionsTags;
@property(retain, nonatomic) NSNumber *syncDisabledByUser;
@property(retain, nonatomic) NSNumber *tagsListUsesCustomTagsIcons;
@property(retain, nonatomic) NSNumber *autocompleteEnabled;
@property(retain, nonatomic) NSNumber *tagsListSortAscending;
@property(retain, nonatomic) NSString *tagsListSortBy;
@property(retain, nonatomic) NSNumber *notesListSortAscending;
@property(retain, nonatomic) NSString *notesListSortBy;
@property(retain, nonatomic) NSNumber *logToFile;
@property(readonly, nonatomic) NSNumber *markedPreviewExpirationTime;
@property(retain, nonatomic) NSNumber *editorParagraphSpacingMultiplier;
@property(retain, nonatomic) NSNumber *editorLineWidthMultiplier;
@property(retain, nonatomic) NSNumber *editorLineHeightMultiplier;
@property(retain, nonatomic) NSNumber *editorFontSize;
@property(retain, nonatomic) NSNumber *exportTags;
@property(retain, nonatomic) NSNumber *enableTextExpander;
@property(retain, nonatomic) NSNumber *enableHapticFeedback;
@property(retain, nonatomic) NSNumber *markdownCompatibilityMode;
- (id)excludeCopyAsTags;
- (void)setExcludeCopyAsTags:(id)arg1;
@property(retain, nonatomic) NSDate *lastSyncDate;
@property(retain, nonatomic) NSDate *syncEnabledUntilDate;
@property(retain, nonatomic) NSNumber *editorShowImagesAsThumbnails;
@property(retain, nonatomic) NSNumber *foldCompletedTodo;
@property(retain, nonatomic) NSNumber *autograbURLTitles;
@property(retain, nonatomic) NSNumber *appIconMatchesTheme;
@property(copy, nonatomic) NSString *fontThemeName;
@property(copy, nonatomic) NSString *appDarkThemeName;
@property(copy, nonatomic) NSString *appThemeName;
- (id)preferenceValueForKey:(id)arg1;
- (void)savePreferenceValue:(id)arg1 forKey:(id)arg2;
- (id)groupIdentifier;
- (void)resetToDefaultPreferences;
- (void)registerDefaultPreferences;
- (id)init;
- (long long)currentSyntax;
- (id)appThemeNameForAppearanceName:(id)arg1;
- (void)setCurrentAppThemeName:(id)arg1;
- (id)currentAppThemeName;
- (void)saveUbiqPreferenceBOOL:(BOOL)arg1 forKey:(id)arg2;
- (void)updateKVStoreItems:(id)arg1;
- (void)setUbiquitousKVStore;
- (BOOL)isProSubscriptionValid;

@end

@interface SFNoteLeftInfoTableCellView : NSTableCellView <NSAccessibilityButton>
{
    NSTextField *_noteTextField;
    NSTextField *_infoTextField;
    SFNoteTableViewFilesView *_filesView;
    SFNoteTableEncryptedSubtitleView *_encryptedSubtitleView;
    SFNoteTodoPercentageView *_todoPercentageView;
    SFStyleView *_ribbonView;
}

@property __weak SFStyleView *ribbonView; // @synthesize ribbonView=_ribbonView;
@property __weak SFNoteTodoPercentageView *todoPercentageView; // @synthesize todoPercentageView=_todoPercentageView;
@property __weak SFNoteTableEncryptedSubtitleView *encryptedSubtitleView; // @synthesize encryptedSubtitleView=_encryptedSubtitleView;
@property __weak SFNoteTableViewFilesView *filesView; // @synthesize filesView=_filesView;
@property __weak NSTextField *infoTextField; // @synthesize infoTextField=_infoTextField;
@property __weak NSTextField *noteTextField; // @synthesize noteTextField=_noteTextField;
- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)accessibilityPerformPress;
- (id)accessibilityLabel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFChangeItemID : NSManagedObjectID
{
}

@end

@interface _SFChangeItem : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveItemDeletedValue:(BOOL)arg1;
- (BOOL)primitiveItemDeletedValue;
@property BOOL itemDeletedValue;
@property(readonly, nonatomic) SFChangeItemID *objectID;

// Remaining properties
@property(retain, nonatomic) SFChange *change; // @dynamic change;
@property(retain, nonatomic) NSNumber *itemDeleted; // @dynamic itemDeleted;
@property(retain, nonatomic) NSString *itemEntity; // @dynamic itemEntity;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;

@end

@interface SFChangeItemAttributes : NSObject
{
}

+ (id)uniqueIdentifier;
+ (id)itemEntity;
+ (id)itemDeleted;

@end

@interface SFChangeItemRelationships : NSObject
{
}

+ (id)change;

@end

@interface SFTextPackageNoteExporter : NSObject <SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFNoteHeaderTextStyler : SFNoteAttachmentTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
+ (id)stylerMarkerForHeaderLevel:(unsigned long long)arg1;
- (double)firstLineIndendForForAttributeRange:(struct _NSRange)arg1 attributedString:(id)arg2;
- (id)paragraphAttributesForAttachment:(id)arg1 attachmentRange:(struct _NSRange)arg2 attributedString:(id)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (Class)stylerTextAttachmentClass;
- (id)attachmentRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface MRVectorClock : NSObject <NSCopying>
{
    NSMutableDictionary *_clockValues;
}

@property(retain, nonatomic) NSMutableDictionary *clockValues; // @synthesize clockValues=_clockValues;
- (void).cxx_destruct;
- (id)description;
- (id)stringRepresentation;
- (id)orderedIDs;
- (unsigned long long)clockValueForID:(id)arg1;
- (id)mergeClock:(id)arg1;
- (void)updateClockValueForID:(id)arg1 value:(unsigned long long)arg2;
- (void)updateClockValueForID:(id)arg1;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)data;
- (id)initWithData:(id)arg1;
- (id)init;

@end

@interface SFNoteMarkerTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (id)textAttributes;
- (id)markerAttributes;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (BOOL)markerInsideSkipStyleAttribute:(struct _NSRange)arg1 withAttrString:(id)arg2;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)highlighthsInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteAddressesStyler : SFNoteAttachmentTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerAttributeName;
- (Class)stylerTextAttachmentClass;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)attachmentRegularExpression;
- (struct _NSRange)offsetMatchedRange:(struct _NSRange)arg1 forMatchedString:(id)arg2;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (BOOL)shouldCacheTextAttachment;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFXMLChunkParser : NSObject
{
    BOOL _abort;
    CDStruct_657548a7 _delegateImplementation;
    id <SFXMLChunkParserDelegate> _delegate;
    NSInputStream *_inputStream;
    struct _xmlParserCtxt *_context;
}

@property(nonatomic) struct _xmlParserCtxt *context; // @synthesize context=_context;
@property(nonatomic) CDStruct_657548a7 delegateImplementation; // @synthesize delegateImplementation=_delegateImplementation;
@property(nonatomic) BOOL abort; // @synthesize abort=_abort;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) __weak id <SFXMLChunkParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_parse;
- (BOOL)parse;
- (id)initWithStream:(id)arg1;

@end

@interface SFNoteCloudKitSyncOperation : NSOperation
{
    BOOL _isExecuting;
    BOOL _isFinished;
    NSManagedObjectContext *_moc;
    CKRecordZoneID *_zoneID;
    CKDatabase *_database;
    NSError *_syncError;
    NSMutableDictionary *_localModifiedObjects;
    NSMutableArray *_localDeletedObjectsIDs;
    SFChange *_baselineChange;
    SFServerMetadata *_serverMetadata;
}

@property(retain) SFServerMetadata *serverMetadata; // @synthesize serverMetadata=_serverMetadata;
@property(retain) SFChange *baselineChange; // @synthesize baselineChange=_baselineChange;
@property(retain) NSMutableArray *localDeletedObjectsIDs; // @synthesize localDeletedObjectsIDs=_localDeletedObjectsIDs;
@property(retain) NSMutableDictionary *localModifiedObjects; // @synthesize localModifiedObjects=_localModifiedObjects;
@property(retain) NSError *syncError; // @synthesize syncError=_syncError;
@property __weak CKDatabase *database; // @synthesize database=_database;
@property __weak CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
@property __weak NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
- (void).cxx_destruct;
- (id)pagedArraysFromArray:(id)arg1 pageSize:(unsigned long long)arg2;
- (void)deleteLocalObjectsFromIDs:(id)arg1;
- (void)mergeLocalObjectsFromRemoteObjects:(id)arg1;
- (id)handleUploadErrorPartialFailure:(id)arg1;
- (id)getUploadLocalChangesOperationWithRecordsToSave:(id)arg1 recordIDsToDelete:(id)arg2;
- (id)getLocalCKRecordIDToDelete;
- (id)getLocalCKRecordToUpload;
- (BOOL)uploadLocalChanges;
- (id)desiredKeysToDownload;
- (id)latestServerChangeToken;
- (void)saveLatestServerChangeToken:(id)arg1;
- (id)getRemoteChangesOperation:(id)arg1 resultsLimit:(unsigned long long)arg2 recordChangedBlock:(CDUnknownBlockType)arg3 recordDeletedBlock:(CDUnknownBlockType)arg4 recordsFetchCompletionBlock:(CDUnknownBlockType)arg5;
- (void)processRemoteChangesWithRemoteModifiedObjects:(id)arg1 remoteDeletedObjectsIDs:(id)arg2 error:(id *)arg3;
- (BOOL)fetchAndMergeRemoteChanges;
- (BOOL)isLocalObjectValidForSync:(id)arg1;
- (BOOL)getLocalChanges;
- (void)finish;
- (void)start;
- (id)init;

@end

@interface SFNoteCodeTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpressionForHumanizing;
+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (id)textAttributes;
- (id)markerAttributes;
- (id)languageNameAttributesWithUUID:(id)arg1;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)init;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2 xhtmlBR:(BOOL)arg3 syntaxColors:(BOOL)arg4;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteStylerWithAttachmentsSpacers : SFNoteAttachmentTextStyler
{
}

- (void)addTextAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateValidAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (long long)suffixAttachmentRegularExpressionTextGroupIndex;
- (long long)prefixAttachmentRegularExpressionTextGroupIndex;
- (id)attributedStringWithTextAttachmentForRepresentedText:(id)arg1;
- (id)attachmentCacheKey;
- (id)spacerAttributeName;

@end

@interface SFNoteLeftInfoTableRowView : NSTableRowView
{
    BOOL _customEmphasized;
}

@property(nonatomic) BOOL customEmphasized; // @synthesize customEmphasized=_customEmphasized;
- (void)updateBackground;
- (void)addSubview:(id)arg1;
- (void)setEmphasized:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;

@end

@interface SFLanguageCompletionItem : NSObject <SFEditorAutoCompleteItem>
{
    NSString *_autoCompleteItemTitle;
    NSString *_autoCompleteItemTextRepresentation;
}

@property(retain) NSString *autoCompleteItemTextRepresentation; // @synthesize autoCompleteItemTextRepresentation=_autoCompleteItemTextRepresentation;
@property(retain) NSString *autoCompleteItemTitle; // @synthesize autoCompleteItemTitle=_autoCompleteItemTitle;
- (void).cxx_destruct;
- (id)autoCompleteItemIcon:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFLanguageAutoCompletionItemsProvider : NSObject <SFEditorAutoCompleteItemsProvider>
{
    unsigned long long _maxNumberOfCompletions;
    NSArray *_itemsForCompletion;
    NSArray *_languageNames;
}

@property(retain, nonatomic) NSArray *languageNames; // @synthesize languageNames=_languageNames;
@property(retain) NSArray *itemsForCompletion; // @synthesize itemsForCompletion=_itemsForCompletion;
@property(nonatomic) unsigned long long maxNumberOfCompletions; // @synthesize maxNumberOfCompletions=_maxNumberOfCompletions;
- (void).cxx_destruct;
- (id)completionSortDescriptorForPartialString:(id)arg1;
- (void)updateCompletionForPartiaString:(id)arg1 fullText:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFImagesNoteExporter : NSObject <SFNoteExporter>
{
    NSString *_folderName;
    NSMutableArray *_exportedImageURLs;
}

@property(readonly) NSMutableArray *exportedImageURLs; // @synthesize exportedImageURLs=_exportedImageURLs;
@property(copy) NSString *folderName; // @synthesize folderName=_folderName;
- (void).cxx_destruct;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)createDestinationFolderWithDestinationURL:(id)arg1;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property __weak NSManagedObjectContext *managedObjectContext;
@property(nonatomic) long long syntax;
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFMainWindowController : NSWindowController <SFUnlockPasswordPromptViewControllerDelegate, NSTouchBarDelegate, SFDetachedNoteEditorWindowControllerDelegate, SFNoteTextAttachmentConfigurator, NSMenuDelegate, NSSharingServiceDelegate, SFSidebarViewControllerDelegate, SFNotesTableViewControllerDelegate, SFNoteEditorViewControllerDelegate, NSSharingServicePickerDelegate, NSWindowDelegate, SFNoteInfoViewControllerDelegate>
{
    BOOL _windowLocked;
    BOOL _navigatingViaHistory;
    BOOL _ignoreNoteTableDidSelectNotesEvents;
    SFMainSplitViewController *_mainSplitViewController;
    SFMainTabViewController *_mainTabViewController;
    SFSidebarViewController *_sidebarViewController;
    SFNotesTableViewController *_notesTableViewController;
    SFNotesEditorPlaceholderViewController *_notesEditorPlaceholderViewController;
    SFNoteEditorViewController *_noteEditorViewController;
    SFUnlockPasswordPromptViewController *_unlockPasswordPromptViewController;
    SFEncryptionUIController *_encryptionUIController;
    SFNoteEncryptionActionManager *_embedEncryptionActionManager;
    NSWindowController *_noteInfoWindowController;
    NSMutableDictionary *_detachedNoteEditorWindowControllers;
    NSUserActivity *_currentActivity;
    SFNoteHistoryManager *_noteHistoryManager;
    SFNoteInfoViewController *_infoViewController;
    SFGeneralPreferencesViewController *_preferencesViewController;
    SFSyncViewController *_syncViewController;
    SFMarkedPreviewManager *_markedPreviewManager;
    SFApplicationLockViewController *_lockViewController;
    NSMutableArray *_splitViewHistory;
}

@property(retain) NSMutableArray *splitViewHistory; // @synthesize splitViewHistory=_splitViewHistory;
@property(nonatomic) BOOL ignoreNoteTableDidSelectNotesEvents; // @synthesize ignoreNoteTableDidSelectNotesEvents=_ignoreNoteTableDidSelectNotesEvents;
@property(retain) SFApplicationLockViewController *lockViewController; // @synthesize lockViewController=_lockViewController;
@property(retain) SFMarkedPreviewManager *markedPreviewManager; // @synthesize markedPreviewManager=_markedPreviewManager;
@property(retain) SFSyncViewController *syncViewController; // @synthesize syncViewController=_syncViewController;
@property __weak SFGeneralPreferencesViewController *preferencesViewController; // @synthesize preferencesViewController=_preferencesViewController;
@property __weak SFNoteInfoViewController *infoViewController; // @synthesize infoViewController=_infoViewController;
@property(nonatomic) BOOL navigatingViaHistory; // @synthesize navigatingViaHistory=_navigatingViaHistory;
@property(retain) SFNoteHistoryManager *noteHistoryManager; // @synthesize noteHistoryManager=_noteHistoryManager;
@property(nonatomic, getter=isWindowLocked) BOOL windowLocked; // @synthesize windowLocked=_windowLocked;
@property(retain) NSUserActivity *currentActivity; // @synthesize currentActivity=_currentActivity;
@property(retain) NSMutableDictionary *detachedNoteEditorWindowControllers; // @synthesize detachedNoteEditorWindowControllers=_detachedNoteEditorWindowControllers;
@property(retain, nonatomic) NSWindowController *noteInfoWindowController; // @synthesize noteInfoWindowController=_noteInfoWindowController;
@property(retain) SFNoteEncryptionActionManager *embedEncryptionActionManager; // @synthesize embedEncryptionActionManager=_embedEncryptionActionManager;
@property(retain) SFEncryptionUIController *encryptionUIController; // @synthesize encryptionUIController=_encryptionUIController;
@property __weak SFUnlockPasswordPromptViewController *unlockPasswordPromptViewController; // @synthesize unlockPasswordPromptViewController=_unlockPasswordPromptViewController;
@property __weak SFNoteEditorViewController *noteEditorViewController; // @synthesize noteEditorViewController=_noteEditorViewController;
@property __weak SFNotesEditorPlaceholderViewController *notesEditorPlaceholderViewController; // @synthesize notesEditorPlaceholderViewController=_notesEditorPlaceholderViewController;
@property __weak SFNotesTableViewController *notesTableViewController; // @synthesize notesTableViewController=_notesTableViewController;
@property __weak SFSidebarViewController *sidebarViewController; // @synthesize sidebarViewController=_sidebarViewController;
@property __weak SFMainTabViewController *mainTabViewController; // @synthesize mainTabViewController=_mainTabViewController;
@property __weak SFMainSplitViewController *mainSplitViewController; // @synthesize mainSplitViewController=_mainSplitViewController;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (void)detachedNoteEditorWindowController:(id)arg1 didEndEditingNoteUUID:(id)arg2;
- (void)notesTableViewController:(id)arg1 willShowMenu:(id)arg2;
- (void)notesTableViewControllerDidShowPlaceholder:(id)arg1;
- (void)notesTableViewController:(id)arg1 didPerformSearch:(id)arg2;
- (void)notesTableViewController:(id)arg1 willEditNote:(id)arg2;
- (void)notesTableViewController:(id)arg1 didDeleteNotes:(id)arg2;
- (void)notesTableViewController:(id)arg1 willDeleteNotes:(id)arg2;
- (void)notesTableViewController:(id)arg1 willRemoveNoteFromTable:(id)arg2 isTheOnlyNoteSelected:(BOOL)arg3;
- (void)notesTableViewController:(id)arg1 didSelectNotes:(id)arg2;
- (void)notesTableViewController:(id)arg1 noteWasDoubleClicked:(id)arg2;
- (void)notesTableViewController:(id)arg1 didAddNote:(id)arg2;
- (void)noteEditorViewControllerDidEndEditing:(id)arg1;
- (void)noteEditorViewController:(id)arg1 searchUIDidChange:(BOOL)arg2;
- (void)noteEditorViewController:(id)arg1 mouseMoved:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didEditNote:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didChangeSelection:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didSaveNote:(id)arg2;
- (void)sidebarViewController:(id)arg1 willRemoveSidebarItem:(id)arg2;
- (void)sidebarViewController:(id)arg1 didSelectSidebarItem:(id)arg2;
- (void)generateToken:(id)arg1;
- (void)copyToken:(id)arg1;
- (void)restoreBackup:(id)arg1;
- (void)backupNotes:(id)arg1;
- (void)exportNotes:(id)arg1;
- (void)importEvernoteNotes:(id)arg1;
- (void)importDraftsNotes:(id)arg1;
- (void)importDayOneNotes:(id)arg1;
- (void)importVesperNotes:(id)arg1;
- (void)importNotes:(id)arg1;
- (void)noteInfoViewController:(id)arg1 didCloseDetachedWindowController:(id)arg2;
- (void)noteInfoViewController:(id)arg1 didDetachWindowController:(id)arg2;
- (void)updateInfoPanelTextInfo;
- (void)openInfoPanel:(id)arg1;
- (void)noteEndEditing:(id)arg1;
- (void)deferredShowNoteAndEdit:(id)arg1;
- (void)newNoteWithSelection:(id)arg1;
- (void)toggleShowImagesAsSmallThumbnails:(id)arg1;
- (void)showImagesAsNormalThumbnails:(id)arg1;
- (void)showImagesAsSmallThumbnails:(id)arg1;
- (void)autoFoldCompletedTodo:(id)arg1;
- (void)unfoldCompletedTodo:(id)arg1;
- (void)foldCompletedTodo:(id)arg1;
- (void)toggleStyleEditor:(id)arg1;
- (void)actualSize:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)makeYoutubePlaylist:(id)arg1;
- (void)unarchiveSelectedNotes:(id)arg1;
- (void)archiveSelectedNotes:(id)arg1;
- (void)merge:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)setCopyAsTags:(id)arg1;
- (void)copyHighlightedPartsOnly:(id)arg1;
- (void)copyAsRTF:(id)arg1;
- (void)copyAsPlainText:(id)arg1;
- (void)copyAsMarkDown:(id)arg1;
- (void)copyAsHTML:(id)arg1;
- (id)shareItemsForNotes:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)unpinSelectedNotes:(id)arg1;
- (void)pinSelectedNotes:(id)arg1;
- (void)restoreSelectedNotes:(id)arg1;
- (void)deleteSelectedNote:(id)arg1;
- (void)newDocumentInNewWindow:(id)arg1;
- (void)newDocument:(id)arg1;
- (void)showNote:(id)arg1 sidebarItem:(id)arg2;
- (void)showNote:(id)arg1;
- (void)showLockedNotes:(id)arg1;
- (void)showArchivedNotes:(id)arg1;
- (void)showTrashedNotes:(id)arg1;
- (void)showTodayNotes:(id)arg1;
- (void)showTodoNotes:(id)arg1;
- (void)showUntaggedNotes:(id)arg1;
- (void)showAllNotes:(id)arg1;
- (id)splitViewHistoryStateWithDestinationState:(id)arg1;
- (BOOL)restorePreviousSplitViewStateIfCurrentMatch:(id)arg1;
- (void)showEditorOnly:(id)arg1 usingHistory:(BOOL)arg2;
- (void)showEditorOnlyIgnoringHistory:(id)arg1;
- (void)showEditorOnly:(id)arg1;
- (void)showNotesAndEditor:(id)arg1 usingHistory:(BOOL)arg2;
- (void)showNotesAndEditorIgnoringHistory:(id)arg1;
- (void)showNotesAndEditor:(id)arg1;
- (void)showTagsNotesAndEditor:(id)arg1 usingHistory:(BOOL)arg2;
- (void)showTagsNotesAndEditorIgnoringHistory:(id)arg1;
- (void)showTagsNotesAndEditor:(id)arg1;
- (void)toggleFloatOnTop:(id)arg1;
- (void)copyNoteIDs:(id)arg1;
- (void)copyLinkToNotesInNewWindow:(BOOL)arg1;
- (void)copyLinkToNotes:(id)arg1;
- (void)detachEditorForCurrentNote:(id)arg1;
- (void)printNote:(id)arg1;
- (void)previewNoteInMarked:(id)arg1;
- (void)emptyTrash:(id)arg1;
- (void)noteHistorySelectPrev:(id)arg1;
- (void)noteHistorySelectNext:(id)arg1;
- (void)updateTheme;
- (id)detachEditorWindowForNote:(id)arg1 floating:(BOOL)arg2;
- (void)displayWindowStandardButtons:(BOOL)arg1 animated:(BOOL)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)preloadEditorViewController;
- (void)setupTabNavigation;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (void)performShareMenuAction:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)setupViewControllers;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidLoad;
- (void)unlockPasswordPromptDidCancelOperation:(id)arg1;
- (BOOL)validateEncryptionMenuItem:(id)arg1;
- (void)showPasswordPromptEmbeddedViewControllerForNotes:(id)arg1;
- (void)privacyMenuAction:(id)arg1;
- (void)deleteNotesPassword:(id)arg1;
- (void)changeNotesPassword:(id)arg1;
- (void)addNotesEncryption:(id)arg1;
- (void)removeNotesEncryption:(id)arg1;
- (void)unlockNotes:(id)arg1;
- (void)lockNotes:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeGotoTouchBar;
- (id)makeToggleSidebarsTouchBar;
- (id)makeTouchBar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteInfoViewController : NSViewController <SFThemeManagerStylableObject>
{
    id <SFNoteInfoViewControllerDelegate> _delegate;
    NSView *_exportView;
    NSTableView *_infoTableView;
    NSButton *_detachButton;
    NSButton *_closeButton;
    NSWindow *_detachedWindow;
    NSPopover *_popover;
    SFNoteInfoExportViewController *_noteInfoExportViewController;
    NSTableView *_noteInfoTableView;
    NSMutableArray *_noteInfoItems;
    struct _NSRange _selectedTextRange;
}

@property(retain) NSMutableArray *noteInfoItems; // @synthesize noteInfoItems=_noteInfoItems;
@property __weak NSTableView *noteInfoTableView; // @synthesize noteInfoTableView=_noteInfoTableView;
@property __weak SFNoteInfoExportViewController *noteInfoExportViewController; // @synthesize noteInfoExportViewController=_noteInfoExportViewController;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property __weak NSWindow *detachedWindow; // @synthesize detachedWindow=_detachedWindow;
@property __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property __weak NSButton *detachButton; // @synthesize detachButton=_detachButton;
@property __weak NSTableView *infoTableView; // @synthesize infoTableView=_infoTableView;
@property __weak NSView *exportView; // @synthesize exportView=_exportView;
@property(nonatomic) struct _NSRange selectedTextRange; // @synthesize selectedTextRange=_selectedTextRange;
@property __weak id <SFNoteInfoViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldDetach:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)updateTextInfoWithText:(id)arg1 isPartial:(BOOL)arg2;
- (unsigned long long)tableIndexForIdentifier:(id)arg1;
- (void)detachInfoPanel:(id)arg1;
- (void)closeDetachedInfoPanel:(id)arg1;
- (id)createNewInfoPanelWindowControllerWithFrame:(struct CGRect)arg1;
- (void)setupInfoPanel;
- (void)setRepresentedObject:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)dealloc;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTextBundleNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    BOOL _importCustomNoteInfo;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    NSMutableDictionary *_notesUUIDChanges;
    NSMutableArray *_notesThatNeedCrossLinkFix;
}

@property(retain) NSMutableArray *notesThatNeedCrossLinkFix; // @synthesize notesThatNeedCrossLinkFix=_notesThatNeedCrossLinkFix;
@property(retain) NSMutableDictionary *notesUUIDChanges; // @synthesize notesUUIDChanges=_notesUUIDChanges;
@property(nonatomic) BOOL importCustomNoteInfo; // @synthesize importCustomNoteInfo=_importCustomNoteInfo;
@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)fixNoteCrossLinking;
- (void)importCustomInfomationForNote:(id)arg1 textBundle:(id)arg2;
- (id)importAttachmentsForText:(id)arg1 inTextBundle:(id)arg2;
- (id)importNotesFromFileURLs:(id)arg1 fileDates:(id)arg2 error:(id *)arg3;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFEPubWriter : NSObject
{
}

- (id)docTitleWithString:(id)arg1;
- (id)mimeTypeForExtension:(id)arg1;
- (id)getTOCWithPages:(id)arg1 title:(id)arg2 andUUID:(id)arg3;
- (id)getContentWithTitle:(id)arg1 uuid:(id)arg2 images:(id)arg3 modificationDate:(id)arg4 pages:(id)arg5;
- (id)stylesheet;
- (id)getContainer;
- (id)getMimetype;

@end

@interface SFProgressIndicator : NSView
{
    CALayer *_animationLayer;
}

@property(retain) CALayer *animationLayer; // @synthesize animationLayer=_animationLayer;
- (void).cxx_destruct;
@property(copy, nonatomic) NSColor *backgroundColor;
- (void)mouseDown:(id)arg1;
- (void)stopAnimating;
- (void)startAnimating;
- (void)setupView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFUntaggedSidebarItem : SFStaticSidebarItem
{
    BOOL hasNotes;
    id <SFSidebarItem> _father;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(nonatomic) id <SFSidebarItem> father; // @synthesize father=_father;
@property(nonatomic) BOOL hasNotes; // @synthesize hasNotes;
- (id)uniqueIdentifier;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (id)selectedIcon;
- (id)icon;

@end

@interface IACManager : NSObject
{
    NSMutableDictionary *sessions;
    NSMutableDictionary *actions;
    id <IACDelegate> _delegate;
    NSString *_callbackURLScheme;
}

+ (id)sharedManager;
@property(copy, nonatomic) NSString *callbackURLScheme; // @synthesize callbackURLScheme=_callbackURLScheme;
@property(nonatomic) __weak id <IACDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)localizedAppName;
- (id)removeProtocolParamsFromDictionary:(id)arg1;
- (void)handleAction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)sendIACRequest:(id)arg1;
- (BOOL)handleOpenURL:(id)arg1;
- (void)openURL:(id)arg1;
- (id)init;

@end

@interface SFDOCXZipArchive : NSObject
{
    NSString *_path;
    NSString *_filename;
    void *_zip;
    NSMutableSet *_addedFiles;
}

+ (id)_dateFor1980;
+ (BOOL)createZipFileAtPath:(id)arg1 withFilesAtPaths:(id)arg2 andRoot:(id)arg3;
+ (BOOL)unzipFileAtPath:(id)arg1 toDestination:(id)arg2 overwrite:(BOOL)arg3 password:(id)arg4 error:(id *)arg5;
+ (BOOL)unzipFileAtPath:(id)arg1 toDestination:(id)arg2;
@property(retain) NSMutableSet *addedFiles; // @synthesize addedFiles=_addedFiles;
- (void).cxx_destruct;
- (BOOL)close;
- (BOOL)writeData:(id)arg1 filename:(id)arg2;
- (BOOL)writeFile:(id)arg1 basePath:(id)arg2 zipRoot:(id)arg3;
- (void)zipInfo:(CDStruct_192a48cb *)arg1 setDate:(id)arg2;
- (BOOL)open;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface GRMustacheContext : NSObject
{
    GRMustacheContext *_contextStackParent;
    id _contextStackObject;
    GRMustacheContext *_protectedContextStackParent;
    id _protectedContextStackObject;
    GRMustacheContext *_hiddenContextStackParent;
    id _hiddenContextStackObject;
    GRMustacheContext *_tagDelegateStackParent;
    id <GRMustacheTagDelegate> _tagDelegateStackObject;
    GRMustacheContext *_inheritablePartialNodeStackParent;
    GRMustacheInheritablePartialNode *_inheritablePartialNodeStackObject;
    BOOL _unsafeKeyAccess;
}

+ (id)contextWithTagDelegate:(id)arg1;
+ (id)contextWithProtectedObject:(id)arg1;
+ (id)contextWithObject:(id)arg1;
+ (id)contextWithUnsafeKeyAccess;
+ (id)context;
+ (void)initialize;
- (id)tagDelegateStack;
- (BOOL)hasValue:(id *)arg1 forMustacheExpression:(id)arg2 error:(id *)arg3;
- (id)valueForMustacheKey:(id)arg1 protected:(char *)arg2;
- (id)valueForMustacheKey:(id)arg1;
@property(readonly, nonatomic) id topMustacheObject;
- (id)contextWithUnsafeKeyAccess;
- (id)contextByAddingInheritablePartialNode:(id)arg1;
- (id)contextByAddingHiddenObject:(id)arg1;
- (id)contextByAddingProtectedObject:(id)arg1;
- (id)contextByAddingObject:(id)arg1;
- (id)newContextByAddingObject:(id)arg1;
- (id)contextByAddingTagDelegate:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) BOOL unsafeKeyAccess;
- (id)resolveTemplateASTNode:(id)arg1;

@end

@interface SFImageView : NSView
{
    BOOL _animateGif;
    id <SFImageViewDelegate> _delegate;
    NSImage *_image;
    NSMutableArray *_imageFrames;
}

@property BOOL animateGif; // @synthesize animateGif=_animateGif;
@property(retain) NSMutableArray *imageFrames; // @synthesize imageFrames=_imageFrames;
@property(retain) NSImage *image; // @synthesize image=_image;
@property __weak id <SFImageViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)mouseUp:(id)arg1;
- (void)loadAnimGif:(id)arg1;
- (BOOL)isAnimGIF:(id)arg1;
- (void)setImageWithURL:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)dealloc;
- (void)setupImageView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFURLID : NSManagedObjectID
{
}

@end

@interface _SFURL : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) SFURLID *objectID;

// Remaining properties
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) SFNote *note; // @dynamic note;
@property(retain, nonatomic) NSString *ogDescription; // @dynamic ogDescription;
@property(retain, nonatomic) NSString *ogImage; // @dynamic ogImage;
@property(retain, nonatomic) NSString *ogTitle; // @dynamic ogTitle;
@property(retain, nonatomic) NSString *ogType; // @dynamic ogType;
@property(retain, nonatomic) NSString *ogURL; // @dynamic ogURL;
@property(retain, nonatomic) NSString *ogVideo; // @dynamic ogVideo;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;
@property(retain, nonatomic) NSString *url; // @dynamic url;

@end

@interface SFURLAttributes : NSObject
{
}

+ (id)url;
+ (id)uniqueIdentifier;
+ (id)title;
+ (id)ogVideo;
+ (id)ogURL;
+ (id)ogType;
+ (id)ogTitle;
+ (id)ogImage;
+ (id)ogDescription;
+ (id)modificationDate;
+ (id)creationDate;

@end

@interface SFURLRelationships : NSObject
{
}

+ (id)note;

@end

@interface SFSpotlightCoreController : NSObject <CSSearchableIndexDelegate>
{
    NSManagedObjectContext *_managedObjectContext;
    NSTimer *_indexTimer;
    NSOperationQueue *_spotlightIndexQueue;
}

@property(retain) NSOperationQueue *spotlightIndexQueue; // @synthesize spotlightIndexQueue=_spotlightIndexQueue;
@property(retain) NSTimer *indexTimer; // @synthesize indexTimer=_indexTimer;
@property(retain) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)backgroundPrivateManagedObjectContext;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(CDUnknownBlockType)arg3;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)deleteIndexAndStartReindexing;
- (void)updateSpotlightIndex;
- (void)cancelAllIndexOperations;
- (void)managedObjectContextDidSave:(id)arg1;
- (void)setupObserver;
- (id)initWithManagedObjectContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFAppDelegate : NSObject <SFNoteCoreEncryptionManagerDelegate, SFNoteCoreEncryptionManagerDataSource, SFAppLockingControllerDelegate, SFCoreDataStackDelegate, NSApplicationDelegate, NSUserNotificationCenterDelegate>
{
    BOOL _appOpenedFromXCallback;
    BOOL _shouldResetSpotlightIndex;
    SFMainWindowController *_mainWindowController;
    SFLoadingWindowController *_loadingWindowController;
    NSMenuItem *_debugMenuItem;
    SFXurlCoreController *_xurlController;
    SFSpotlightCoreController *_spotlightCoreController;
    NSMutableArray *_delayedUntilMocIsReadyBlocks;
    SFNoteCloudKitSync *_cloudKitSyncManager;
    SFNotesIAPPurchases *_iapPurchases;
    SFSyncErrorHandlerCoreController *_errorHandlerCoreController;
    SFLocalFileWatcher *_localFileWatcher;
    NSWindowController *_themeEditorWindowController;
    NSWindowController *_themeAppEditorWindowController;
    SFPreferencesWindowController *_preferencesWindowController;
    SFExtensionPreferenceWindowController *_extPreferencesWindowController;
    struct _NSModalSession *_loadingModalSession;
    SFNoteCoreEncryptionManager *_encryptionManager;
    SFNoteEncryptionActionManager *_encryptionActionManager;
    SFAppLockingController *_appLockingController;
    NSTimer *_idleTimer;
}

@property BOOL shouldResetSpotlightIndex; // @synthesize shouldResetSpotlightIndex=_shouldResetSpotlightIndex;
@property(retain, nonatomic) NSTimer *idleTimer; // @synthesize idleTimer=_idleTimer;
@property(retain, nonatomic) SFAppLockingController *appLockingController; // @synthesize appLockingController=_appLockingController;
@property(retain, nonatomic) SFNoteEncryptionActionManager *encryptionActionManager; // @synthesize encryptionActionManager=_encryptionActionManager;
@property(retain, nonatomic) SFNoteCoreEncryptionManager *encryptionManager; // @synthesize encryptionManager=_encryptionManager;
@property(nonatomic) struct _NSModalSession *loadingModalSession; // @synthesize loadingModalSession=_loadingModalSession;
@property(retain, nonatomic) SFExtensionPreferenceWindowController *extPreferencesWindowController; // @synthesize extPreferencesWindowController=_extPreferencesWindowController;
@property(retain, nonatomic) SFPreferencesWindowController *preferencesWindowController; // @synthesize preferencesWindowController=_preferencesWindowController;
@property(retain, nonatomic) NSWindowController *themeAppEditorWindowController; // @synthesize themeAppEditorWindowController=_themeAppEditorWindowController;
@property(retain, nonatomic) NSWindowController *themeEditorWindowController; // @synthesize themeEditorWindowController=_themeEditorWindowController;
@property(retain) SFLocalFileWatcher *localFileWatcher; // @synthesize localFileWatcher=_localFileWatcher;
@property(retain) SFSyncErrorHandlerCoreController *errorHandlerCoreController; // @synthesize errorHandlerCoreController=_errorHandlerCoreController;
@property(retain) SFNotesIAPPurchases *iapPurchases; // @synthesize iapPurchases=_iapPurchases;
@property(retain) SFNoteCloudKitSync *cloudKitSyncManager; // @synthesize cloudKitSyncManager=_cloudKitSyncManager;
@property BOOL appOpenedFromXCallback; // @synthesize appOpenedFromXCallback=_appOpenedFromXCallback;
@property(retain, nonatomic) NSMutableArray *delayedUntilMocIsReadyBlocks; // @synthesize delayedUntilMocIsReadyBlocks=_delayedUntilMocIsReadyBlocks;
@property(retain) SFSpotlightCoreController *spotlightCoreController; // @synthesize spotlightCoreController=_spotlightCoreController;
@property(retain) SFXurlCoreController *xurlController; // @synthesize xurlController=_xurlController;
@property __weak NSMenuItem *debugMenuItem; // @synthesize debugMenuItem=_debugMenuItem;
@property(retain, nonatomic) SFLoadingWindowController *loadingWindowController; // @synthesize loadingWindowController=_loadingWindowController;
@property(retain) SFMainWindowController *mainWindowController; // @synthesize mainWindowController=_mainWindowController;
- (void).cxx_destruct;
- (void)showFAQ:(id)arg1;
- (void)showReddit:(id)arg1;
- (void)showTwitter:(id)arg1;
- (void)showWebsite:(id)arg1;
- (void)showSupportWebsite:(id)arg1;
- (void)noteListSearch:(id)arg1;
- (void)reopenMainWindow:(id)arg1;
- (id)applicationDockMenu:(id)arg1;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)loadDefaultTextTheme:(id)arg1;
- (void)themeEditor:(id)arg1 didLoadNewTheme:(id)arg2;
- (void)themeEditor:(id)arg1 didChangeTheme:(id)arg2;
- (void)openThemeEditor:(id)arg1;
- (void)openAppThemeEditor:(id)arg1;
- (void)loadThemedAppIcon;
- (void)loadFontThemePreferences;
- (void)loadFontThemeName:(id)arg1;
- (void)loadThemeNamed:(id)arg1;
- (id)currentTextThemeManager;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleFileLog:(id)arg1;
- (void)forceCloudKitSync:(id)arg1;
- (void)deleteBearDBAndClearCloudKit:(id)arg1;
- (void)deleteBearCloudKit:(id)arg1;
- (void)deleteBearDB:(id)arg1;
- (void)openLogsFolder:(id)arg1;
- (void)revealAppDatabase:(id)arg1;
- (void)openApplicationSupport:(id)arg1;
- (void)openApplicationContainer:(id)arg1;
- (void)printFirstResponder:(id)arg1;
- (void)alertUserThatMigrationFailed;
- (BOOL)localDataMigration;
- (void)coreDataStackDidEndMigration:(id)arg1 migrationError:(id)arg2 migratedVersions:(id)arg3;
- (void)coreDataStack:(id)arg1 didBeginMigrationWithProgress:(id)arg2;
- (void)coreDataStack:(id)arg1 didFailToInitializeManagedObjectContext:(id)arg2;
- (void)coreDataStack:(id)arg1 didInitializeManagedObjectContext:(id)arg2;
- (void)showExtensionPreferences:(id)arg1;
- (void)showThemesPreferences:(id)arg1;
- (void)showSyncPreferences:(id)arg1;
- (void)showBearProPreferences:(id)arg1;
- (void)showPreferences:(id)arg1;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)setupRemoteNotification;
- (void)fixChinaMainlandAvenirBug;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)newDocumentInNewWindow:(id)arg1;
- (void)newDocument:(id)arg1;
- (void)setupCustomFonts;
- (void)setupFirstLaunch;
- (void)setupCrashManager;
- (void)setupTheme;
- (void)setupViewControllers;
- (void)setupLaunch;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (BOOL)application:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidBecomeActive:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)handleGetTimingEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)setupTimingIntegration;
- (void)hideLockNotesButtonAnimated:(BOOL)arg1;
- (void)showLockNotesButtonAnimated:(BOOL)arg1;
- (id)newEncryptingPassword;
- (void)noteCoreEncryptionManager:(id)arg1 didRemoveEncryptionFromNote:(id)arg2;
- (void)noteCoreEncryptionManager:(id)arg1 didAddEncryptionToNote:(id)arg2;
- (void)setupEncryptionObservers;
- (void)setupEncryption;
- (void)executeDelayedUntilMocIsReadyBlocks;
- (void)delayUntilManagedObjectContextIsReady:(CDUnknownBlockType)arg1;
- (id)extractURLFromEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)handleGetURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)setupXCallbackURLs;
- (void)shorcutNewNote;
- (void)shorcutOpenBear;
- (void)setupGlobalShortcut;
- (void)resetSpolightIndex:(id)arg1;
- (BOOL)handleCoreSpotlightUserActivity:(id)arg1;
- (void)setupCoreSpotlight;
- (BOOL)isApplicationLocked;
- (void)unlockApplication:(id)arg1;
- (void)lockApplication:(id)arg1;
- (void)applicationLockingDidChange:(id)arg1;
- (void)setupAppLocking;
- (void)idleTimerFired:(id)arg1;
- (void)stopIdleTimer;
- (void)startIdleTimer;
- (BOOL)handleHandoffUserActivity:(id)arg1;
- (void)handleApparanceChange;
- (void)setDarkModeApparanceListener;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTemplateGenerator : NSObject <GRMustacheTemplateASTVisitor>
{
    GRMustacheTemplateRepository *_templateRepository;
    GRMustacheExpressionGenerator *_expressionGenerator;
    NSMutableString *_templateString;
}

+ (id)templateGeneratorWithTemplateRepository:(id)arg1;
@property(readonly, retain, nonatomic) GRMustacheTemplateRepository *templateRepository; // @synthesize templateRepository=_templateRepository;
- (id)initWithTemplateRepository:(id)arg1;
- (BOOL)visitTextNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitSectionTag:(id)arg1 error:(id *)arg2;
- (BOOL)visitVariableTag:(id)arg1 error:(id *)arg2;
- (BOOL)visitPartialNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitInheritableSectionNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitInheritablePartialNode:(id)arg1 error:(id *)arg2;
- (BOOL)visitTemplateAST:(id)arg1 error:(id *)arg2;
- (id)stringWithTemplate:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheToken : NSObject
{
    long long _type;
    NSString *_templateString;
    id _templateID;
    unsigned long long _line;
    struct _NSRange _range;
    struct _NSRange _tagInnerRange;
}

+ (id)tokenWithType:(long long)arg1 templateString:(id)arg2 templateID:(id)arg3 line:(unsigned long long)arg4 range:(struct _NSRange)arg5;
@property(nonatomic) struct _NSRange tagInnerRange; // @synthesize tagInnerRange=_tagInnerRange;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(nonatomic) unsigned long long line; // @synthesize line=_line;
@property(retain, nonatomic) id templateID; // @synthesize templateID=_templateID;
@property(retain, nonatomic) NSString *templateString; // @synthesize templateString=_templateString;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *tagInnerContent;
@property(readonly, nonatomic) NSString *templateSubstring;
- (void)dealloc;

@end

@interface SFNoteTextAttachmentConfigurator : NSObject
{
    BOOL _useOriginalAttachment;
    BOOL _configureAttachmentSynchronously;
    BOOL _configureAttachmentURLOnly;
    NSManagedObjectContext *_managedObjectContext;
    double _scale;
    double _maxAttachmentWidth;
    double _maxAttachmentHeight;
    SFNoteTextView *_textView;
}

@property(retain) SFNoteTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) BOOL configureAttachmentURLOnly; // @synthesize configureAttachmentURLOnly=_configureAttachmentURLOnly;
@property(nonatomic) BOOL configureAttachmentSynchronously; // @synthesize configureAttachmentSynchronously=_configureAttachmentSynchronously;
@property(nonatomic) BOOL useOriginalAttachment; // @synthesize useOriginalAttachment=_useOriginalAttachment;
@property(nonatomic) double maxAttachmentHeight; // @synthesize maxAttachmentHeight=_maxAttachmentHeight;
@property(nonatomic) double maxAttachmentWidth; // @synthesize maxAttachmentWidth=_maxAttachmentWidth;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)updateTextAttachment:(id)arg1 inTextView:(id)arg2;
- (void)redrawAllImageAttachmentsInTextStorage:(id)arg1;
- (void)asyncPreloadImageFromFileURL:(id)arg1 success:(CDUnknownBlockType)arg2;
- (id)preloadImageFromFileURL:(id)arg1;
- (void)loadImageFromFileURL:(id)arg1 forImageAttachment:(id)arg2 scale:(double)arg3;
- (void)loadImageForImageAttachment:(id)arg1;
- (BOOL)canLoadOriginalImageURL:(id)arg1 ForThumbSize:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (struct CGSize)imageThumbSizeForImageSize:(struct CGSize)arg1 scaled:(char *)arg2;
- (void)configureTextAttachment:(id)arg1;
- (id)initWithManagedObjectContext:(id)arg1;

@end

@interface SFFilePresenter : NSObject <NSFilePresenter>
{
    NSString *_filePath;
    NSURL *_presentedItemURL;
    NSOperationQueue *_presentedItemOperationQueue;
    NSURL *_primaryPresentedItemURL;
}

@property(readonly, copy) NSURL *primaryPresentedItemURL; // @synthesize primaryPresentedItemURL=_primaryPresentedItemURL;
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue; // @synthesize presentedItemOperationQueue=_presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL; // @synthesize presentedItemURL=_presentedItemURL;
@property(retain) NSString *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (id)initWithFilePath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property(readonly) Class superclass;

@end

@interface SFFontPickerViewController : NSViewController
{
    NSString *_pickerIdentifier;
    id _openingSender;
    id <SFFontPickerDelegate> _delegate;
    NSPopUpButton *_fontWeightPopUpButton;
    NSTableView *_fontFamiliesTableView;
    NSArrayController *_fontFamiliesArrayController;
    NSArrayController *_selectedFontWeight;
}

@property(retain) NSArrayController *selectedFontWeight; // @synthesize selectedFontWeight=_selectedFontWeight;
@property(retain) NSArrayController *fontFamiliesArrayController; // @synthesize fontFamiliesArrayController=_fontFamiliesArrayController;
@property __weak NSTableView *fontFamiliesTableView; // @synthesize fontFamiliesTableView=_fontFamiliesTableView;
@property __weak NSPopUpButton *fontWeightPopUpButton; // @synthesize fontWeightPopUpButton=_fontWeightPopUpButton;
@property __weak id <SFFontPickerDelegate> delegate; // @synthesize delegate=_delegate;
@property __weak id openingSender; // @synthesize openingSender=_openingSender;
@property(retain) NSString *pickerIdentifier; // @synthesize pickerIdentifier=_pickerIdentifier;
- (void).cxx_destruct;
- (void)searchFieldUpdated:(id)arg1;
- (void)fontWeightChanged:(id)arg1;
- (void)pickCurrentFont;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)attributedStringForFontName:(id)arg1 stringValue:(id)arg2;
- (id)attributedStringForFontFamily:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)loadView;

@end

@interface SFNoteInfoSeparator : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
}

@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFPassword : _SFPassword <SFEncryptingPassword>
{
}

+ (id)passwordsInManagedObjectContext:(id)arg1 withPredicate:(id)arg2;
+ (id)passwordWithUniqueIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (id)passwordFromJsonRepresentation:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)passwordFromdictionaryRepresentation:(id)arg1 inManagedObjectContext:(id)arg2;
+ (BOOL)deleteAllPasswordsInManagedObjectContext:(id)arg1;
+ (BOOL)canDeleteAllPasswordsInManagedObjectContext:(id)arg1;
- (id)jsonRepresentation;
- (id)dictionaryRepresentation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTextPackNoteImporter : SFTextBundleNoteImporter
{
}

- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFURLHelper : NSObject <NSURLSessionDataDelegate>
{
    BOOL _sessionErrorHandled;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
    NSURLSession *_urlSession;
}

@property(retain) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property BOOL sessionErrorHandled; // @synthesize sessionErrorHandled=_sessionErrorHandled;
@property(copy) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)downloadFileAtURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)testURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFLocalFileWatcher : NSObject
{
    CDEvents *_events;
    NSManagedObjectContext *_moc;
}

@property __weak NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property(retain) CDEvents *events; // @synthesize events=_events;
- (void).cxx_destruct;
- (void)checkAndUpdateLocalModifedFilesInMoc:(id)arg1;
- (void)updateNoteFilesWithUniqueIdentifiers:(id)arg1 managedObjectContext:(id)arg2;
- (void)updateNoteFiles:(id)arg1 managedObjectContext:(id)arg2;
- (void)checkAndUpdateLocalFilesInBackground;
- (void)setupWatcher;
- (id)initWithManagedObjectContext:(id)arg1;

@end

@interface GRMustacheCapitalizedFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheLowercaseFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheUppercaseFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheBlankFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheEmptyFilter : NSObject <GRMustacheFilter>
{
}

- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ITSwitch : NSControl
{
    id _target;
    SEL _action;
    BOOL _checked;
    BOOL _active;
    BOOL _dragged;
    BOOL _draggingTowardsOn;
    NSColor *_tintColor;
    NSColor *_offTintColor;
    CALayer *_rootLayer;
    CALayer *_backgroundLayer;
    CALayer *_knobLayer;
    CALayer *_knobInsideLayer;
}

@property(readonly, nonatomic) CALayer *knobInsideLayer; // @synthesize knobInsideLayer=_knobInsideLayer;
@property(readonly, nonatomic) CALayer *knobLayer; // @synthesize knobLayer=_knobLayer;
@property(readonly, nonatomic) CALayer *backgroundLayer; // @synthesize backgroundLayer=_backgroundLayer;
@property(readonly, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(nonatomic, getter=isDraggingTowardsOn) BOOL draggingTowardsOn; // @synthesize draggingTowardsOn=_draggingTowardsOn;
@property(nonatomic, getter=hasDragged) BOOL dragged; // @synthesize dragged=_dragged;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
@property(retain, nonatomic) NSColor *offTintColor; // @synthesize offTintColor=_offTintColor;
@property(nonatomic) BOOL checked; // @synthesize checked=_checked;
- (void).cxx_destruct;
- (void)propagateValue:(id)arg1 forBinding:(id)arg2;
- (void)_invokeTargetAction;
- (void)setEnabled:(BOOL)arg1;
@property(retain, nonatomic) NSColor *tintColor; // @synthesize tintColor=_tintColor;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTarget:(id)arg1;
- (id)target;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (struct CGRect)rectForKnob;
- (double)knobHeightForSize:(struct CGSize)arg1;
- (void)reloadLayerSize;
- (void)reloadLayer;
- (struct CGRect)focusRingMaskBounds;
- (BOOL)canBecomeKeyView;
- (void)drawFocusRingMask;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setUpLayers;
- (void)setUp;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DTTimePeriodGroup : NSObject
{
    NSMutableArray *periods;
    NSDate *StartDate;
    NSDate *EndDate;
}

- (void).cxx_destruct;
- (void)updateVariables;
- (void)shiftLaterWithSize:(unsigned long long)arg1 amount:(long long)arg2;
- (void)shiftLaterWithSize:(unsigned long long)arg1;
- (void)shiftEarlierWithSize:(unsigned long long)arg1 amount:(long long)arg2;
- (void)shiftEarlierWithSize:(unsigned long long)arg1;
- (BOOL)hasSameCharacteristicsAs:(id)arg1;
- (long long)count;
@property(readonly, nonatomic) NSDate *EndDate;
@property(readonly, nonatomic) NSDate *StartDate;
- (double)durationInSeconds;
- (double)durationInMinutes;
- (double)durationInHours;
- (double)durationInDays;
- (double)durationInWeeks;
- (double)durationInYears;
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)init;

@end

@interface SFNoteTypesetter : NSATSTypesetter
{
}

- (double)lineSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (BOOL)shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg1;
- (BOOL)shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg1;

@end

@interface SFNoteInfoActionButton : NSButton
{
}

- (void)setTitle:(id)arg1;

@end

@interface SFNoteTextStyleEditorTableCellView : NSTableCellView
{
    NSImageView *_styleIconImageView;
    NSTextField *_styleNameTextField;
    NSTextField *_styleHotKeyTextField;
    SFStyleView *_separatorView;
}

@property SFStyleView *separatorView; // @synthesize separatorView=_separatorView;
@property NSTextField *styleHotKeyTextField; // @synthesize styleHotKeyTextField=_styleHotKeyTextField;
@property NSTextField *styleNameTextField; // @synthesize styleNameTextField=_styleNameTextField;
@property NSImageView *styleIconImageView; // @synthesize styleIconImageView=_styleIconImageView;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SFNoteUnorderedListStyler : SFNoteAttachmentTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
+ (long long)indentationLevelWithLevelArray:(id *)arg1 andListElement:(id)arg2;
+ (long long)headSpacesWithListElement:(id)arg1;
- (id)attachmentParagraphStyleForAttributeRange:(struct _NSRange)arg1 attributedString:(id)arg2 paragraphRange:(struct _NSRange)arg3;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (Class)stylerTextAttachmentClass;
- (id)attachmentRegularExpression;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)textListItemsFromIndentPrefixes:(id)arg1;
- (long long)DOCXizeListTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2 listIndex:(long long)arg3;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFNoteLineSeparatorStyler : SFNoteAttachmentTextStyler
{
}

+ (id)stylerRegularExpression;
+ (id)stylerEnclosingStrings;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
- (Class)stylerTextAttachmentClass;
- (id)attachmentRegularExpression;
- (id)XHTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)MDizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFIconTextButtonCell : NSButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)backgroundColor;

@end

@interface SFNotesSidebarItem : SFStaticSidebarItem
{
    NSArray *_childs;
}

+ (id)sidebarItemWithManagedObjectContext:(id)arg1;
@property(retain, nonatomic) NSArray *childs; // @synthesize childs=_childs;
- (void).cxx_destruct;
- (id)uniqueIdentifier;
- (BOOL)canDeleteNotes;
- (BOOL)canCreateNotes;
- (BOOL)canAddNotes;
- (void)addNotes:(id)arg1;
- (id)notesFetchRequestInManagedObjectContext:(id)arg1;
- (id)notesFetchRequest;
- (BOOL)groupConflictedNotes;
- (id)selectedIcon;
- (id)icon;

@end

@interface SFRenamePasswordPrompViewController : SFCreatePasswordPromptViewController
{
}

- (void)styleObjectWithThemeManager:(id)arg1;
- (void)viewDidLoad;

@end

@interface SFTaskPaperExporter : NSObject <SFNoteExporter>
{
    BOOL _exportTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)exportNoteText:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;

// Remaining properties
@property __weak SFNotesTextThemeManager *textThemeManager;

@end

@interface SFNoteSection : NSObject
{
    NSString *_title;
    unsigned long long _titleLocation;
    unsigned long long _titleLength;
    unsigned long long _sectionLocation;
    unsigned long long _sectionLength;
}

@property unsigned long long sectionLength; // @synthesize sectionLength=_sectionLength;
@property unsigned long long sectionLocation; // @synthesize sectionLocation=_sectionLocation;
@property unsigned long long titleLength; // @synthesize titleLength=_titleLength;
@property unsigned long long titleLocation; // @synthesize titleLocation=_titleLocation;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)titleForXURL;
- (struct _NSRange)sectionRange;
- (struct _NSRange)titleRange;

@end

@interface SFStaticNoteID : NSManagedObjectID
{
}

@end

@interface _SFStaticNote : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveOrderValue:(long long)arg1;
- (long long)primitiveOrderValue;
@property long long orderValue;
@property(readonly, nonatomic) SFStaticNoteID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *order; // @dynamic order;

@end

@interface SFStaticNoteAttributes : NSObject
{
}

+ (id)order;

@end

@interface SFXurlCoreController : NSObject
{
    CDUnknownBlockType _grabUrlSuccessBlock;
    CDUnknownBlockType _grabUrlFailureBlock;
    CDUnknownBlockType _grabUrlUpdateBlock;
    NSDictionary *_grabUrlParameters;
    NSManagedObjectContext *_grabUrlMOC;
    SFURLHelper *_urlHelper;
    NSOperationQueue *_fileCatchingQueue;
    NSMutableDictionary *_htmlCache;
}

+ (struct _NSRange)rangeToScrollForHeader:(id)arg1 orAttachment:(id)arg2 inStorage:(id)arg3;
@property(retain) NSMutableDictionary *htmlCache; // @synthesize htmlCache=_htmlCache;
@property(retain) NSOperationQueue *fileCatchingQueue; // @synthesize fileCatchingQueue=_fileCatchingQueue;
@property(retain) SFURLHelper *urlHelper; // @synthesize urlHelper=_urlHelper;
@property __weak NSManagedObjectContext *grabUrlMOC; // @synthesize grabUrlMOC=_grabUrlMOC;
@property(retain) NSDictionary *grabUrlParameters; // @synthesize grabUrlParameters=_grabUrlParameters;
@property(copy) CDUnknownBlockType grabUrlUpdateBlock; // @synthesize grabUrlUpdateBlock=_grabUrlUpdateBlock;
@property(copy) CDUnknownBlockType grabUrlFailureBlock; // @synthesize grabUrlFailureBlock=_grabUrlFailureBlock;
@property(copy) CDUnknownBlockType grabUrlSuccessBlock; // @synthesize grabUrlSuccessBlock=_grabUrlSuccessBlock;
- (void).cxx_destruct;
- (id)sortNotes:(id)arg1;
- (id)sectionForNote:(id)arg1 withTitle:(id)arg2;
- (BOOL)addText:(id)arg1 toNote:(id)arg2 andSection:(id)arg3 usingMode:(id)arg4 failure:(CDUnknownBlockType)arg5;
- (BOOL)isTokenValid:(id)arg1;
- (id)resultForNotes:(id)arg1;
- (id)formatDateForXURL:(id)arg1;
- (id)saveFileWithData:(id)arg1 andName:(id)arg2 withMoc:(id)arg3;
- (void)createNoteWithPageContent:(id)arg1 title:(id)arg2 dek:(id)arg3 image:(id)arg4 tags:(id)arg5 andURL:(id)arg6 downloadImages:(BOOL)arg7 appendUrl:(BOOL)arg8 pin:(BOOL)arg9;
- (void)appendURL:(id)arg1 withTitle:(id)arg2 toNoteText:(id)arg3 withStyler:(id)arg4;
- (void)mobilizeWebPage;
- (void)downloadFile;
- (void)handleGrabUrl:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (id)handleChangeFont:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)handleChangeTheme:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)handleDeleteTag:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)handleRenameTag:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)handleOpenTag:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)handleTags:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)handleCreate:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleSearch:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleAddFile:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleAddText:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleLocked:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleTodo:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleToday:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleUntagged:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleArchive:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleTrash:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (void)handleOpenNote:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 updateInterface:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface SFImageTextAttachment : SFGenericFileTextAttachment
{
    NSImage *_attachmentImage;
    struct CGSize _originalImageSize;
    struct CGSize _attachmentImageSize;
}

+ (BOOL)isFullLine;
@property(nonatomic) struct CGSize attachmentImageSize; // @synthesize attachmentImageSize=_attachmentImageSize;
@property(retain, nonatomic) NSImage *attachmentImage; // @synthesize attachmentImage=_attachmentImage;
@property(nonatomic) struct CGSize originalImageSize; // @synthesize originalImageSize=_originalImageSize;
- (void).cxx_destruct;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (struct CGRect)attachmentBoundsForTextContainer:(id)arg1 originalAttachmentBounds:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (struct CGSize)attachmentSize;
- (struct CGSize)cachedAttachmentSize;
- (BOOL)canBeDraggedAlone;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SFPunctuationCharactersSets : NSObject
{
}

+ (id)allowedPunctuationCharactersAfterStylerString;
+ (id)allowedPunctuationCharactersAfterStyler;

@end

@interface SFNoteTagStyler : SFNoteStylerWithAttachmentsSpacers
{
}

+ (id)stylerRegularExpression;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (Class)stylerTextAttachmentClass;
- (void)enumerateValidAttachmentsInAttributedString:(id)arg1 range:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)stylerRegularExpressionRepresentedTextGroupIndex;
- (id)spacerAttributeName;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)taskpaperizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)DOCXizeTextInInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface SFImageAlphaTrimmer : NSObject
{
}

- (struct CGRect)topBottomCropFrameRequiringFullOpacity:(BOOL)arg1 image:(struct CGImage *)arg2;
- (struct CGRect)cropFrameRequiringFullOpacity:(BOOL)arg1 image:(struct CGImage *)arg2;
- (struct CGImage *)imageByTrimmingTopBottomTransparentPixels:(struct CGImage *)arg1 horizontalMargin:(double)arg2;
- (struct CGImage *)imageByTrimmingTopBottomTransparentPixels:(struct CGImage *)arg1;
- (struct CGImage *)imageByTrimmingTransparentPixels:(struct CGImage *)arg1;

@end

@interface SFHeaderTextAttachment : SFNotesTextAttachment
{
}

+ (BOOL)isFullLine;
- (void)drawAttachmentForAttachmentRect:(struct CGRect)arg1;
- (id)headerStringName;
- (unsigned long long)headerLevel;
- (id)headerFont;
- (struct CGRect)drawRectForAttachmentRect:(struct CGRect)arg1;
- (double)attachmentBaselineOffset;
- (struct CGSize)attachmentSize;
- (double)attachmentRightSpacing;
- (struct _NSRange)extraAttachmentRangeForAttachmentRange:(struct _NSRange)arg1 inAttributedString:(id)arg2;
- (id)baseCacheKey;

@end

@interface SFPreferencesTabViewController : NSTabViewController
{
    double _nextControllerWidth;
}

@property(nonatomic) double nextControllerWidth; // @synthesize nextControllerWidth=_nextControllerWidth;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;

@end

@interface SFNoteInfoCopyItem : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    NSString *_actionItemTitle;
    NSImage *_actionItemImage;
    NSImage *_actionItemImageActive;
}

@property(retain) NSImage *actionItemImageActive; // @synthesize actionItemImageActive=_actionItemImageActive;
@property(retain) NSImage *actionItemImage; // @synthesize actionItemImage=_actionItemImage;
@property(retain) NSString *actionItemTitle; // @synthesize actionItemTitle=_actionItemTitle;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (void)actionItemClicked:(id)arg1;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFJPGNoteExporter : NSObject <SFNoteTextAttachmentConfigurator, SFNoteExporter>
{
    BOOL _exportTags;
    BOOL _removeStylerMarker;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    SFNotesTextThemeManager *_textThemeManager;
    double _scaleFactor;
    SFCodeSyntaxHighlighter *_codeSyntaxHighlighter;
    SFNoteTextAttachmentConfigurator *_attachmentConfigurator;
}

@property(retain) SFNoteTextAttachmentConfigurator *attachmentConfigurator; // @synthesize attachmentConfigurator=_attachmentConfigurator;
@property(retain) SFCodeSyntaxHighlighter *codeSyntaxHighlighter; // @synthesize codeSyntaxHighlighter=_codeSyntaxHighlighter;
@property double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property BOOL removeStylerMarker; // @synthesize removeStylerMarker=_removeStylerMarker;
@property __weak SFNotesTextThemeManager *textThemeManager; // @synthesize textThemeManager=_textThemeManager;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)writeImageRef:(struct CGImage *)arg1 forNote:(id)arg2 toDestinationURL:(id)arg3 error:(id *)arg4;
- (struct CGImage *)imageRefFromText:(id)arg1 withSize:(struct CGSize)arg2;
- (struct CGImage *)imageRefFromText:(id)arg1;
- (id)exportNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)mergeNotes:(id)arg1 toURL:(id)arg2 fileName:(id)arg3 error:(id *)arg4;
- (id)exportNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteNormalTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTextField : NSTextField
{
    NSColor *_selectedTextColor;
    NSColor *_selectedTextBackgroundColor;
    NSColor *_placeholderTextColor;
    NSColor *_borderColor;
    NSColor *_insertionPointColor;
}

@property(copy, nonatomic) NSColor *insertionPointColor; // @synthesize insertionPointColor=_insertionPointColor;
@property(copy, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSColor *placeholderTextColor; // @synthesize placeholderTextColor=_placeholderTextColor;
@property(copy, nonatomic) NSColor *selectedTextBackgroundColor; // @synthesize selectedTextBackgroundColor=_selectedTextBackgroundColor;
@property(copy, nonatomic) NSColor *selectedTextColor; // @synthesize selectedTextColor=_selectedTextColor;
- (void).cxx_destruct;

@end

@interface SFTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)setUpFieldEditorAttributes:(id)arg1;

@end

@interface SFYoutubePlaylister : NSObject
{
}

- (id)youtubePlaylistURLFromString:(id)arg1;

@end

@interface SFMainTabViewController : NSTabViewController
{
}

- (id)selectedViewController;
- (void)viewDidLoad;

@end

@interface SFEnexParser : NSObject <SFXMLChunkParserDelegate>
{
    struct {
        char didParseNote;
        char didParseFile;
    } _delegateImplementation;
    id <SFEnexParserDelegate> _delegate;
    NSInputStream *_inputStream;
    NSMutableString *_currentCharacters;
    SFEnexNote *_currentNote;
    SFEnexNoteFile *_currentFile;
    long long _currentFileNumber;
}

@property(nonatomic) CDStruct_7ddbbeae delegateImplementation; // @synthesize delegateImplementation=_delegateImplementation;
@property(nonatomic) long long currentFileNumber; // @synthesize currentFileNumber=_currentFileNumber;
@property(retain, nonatomic) SFEnexNoteFile *currentFile; // @synthesize currentFile=_currentFile;
@property(retain, nonatomic) SFEnexNote *currentNote; // @synthesize currentNote=_currentNote;
@property(retain, nonatomic) NSMutableString *currentCharacters; // @synthesize currentCharacters=_currentCharacters;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) __weak id <SFEnexParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 attributes:(id)arg3;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (id)keysToParse;
- (void)parse;
- (id)initWithEnexFileURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEnexNote : NSObject
{
    NSString *_title;
    NSString *_text;
    NSDate *_createdDate;
    NSDate *_updatedDate;
    NSString *_createdDateString;
    NSString *_updatedDateString;
    NSMutableArray *_tagsStrings;
    NSMutableArray *_files;
    NSString *_sourceUrl;
}

@property(retain, nonatomic) NSString *sourceUrl; // @synthesize sourceUrl=_sourceUrl;
@property(retain, nonatomic) NSMutableArray *files; // @synthesize files=_files;
@property(retain, nonatomic) NSMutableArray *tagsStrings; // @synthesize tagsStrings=_tagsStrings;
@property(retain, nonatomic) NSString *updatedDateString; // @synthesize updatedDateString=_updatedDateString;
@property(retain, nonatomic) NSString *createdDateString; // @synthesize createdDateString=_createdDateString;
@property(retain, nonatomic) NSDate *updatedDate; // @synthesize updatedDate=_updatedDate;
@property(retain, nonatomic) NSDate *createdDate; // @synthesize createdDate=_createdDate;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (id)dateFromEnexDateString:(id)arg1;
- (id)init;

@end

@interface SFEnexNoteFile : NSObject
{
    NSString *_base64String;
    NSString *_mime;
    NSString *_filename;
    NSString *_recognition;
    NSString *_fileHash;
    long long _fileNumber;
    NSURL *_fileURL;
}

@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(nonatomic) long long fileNumber; // @synthesize fileNumber=_fileNumber;
@property(retain, nonatomic) NSString *fileHash; // @synthesize fileHash=_fileHash;
@property(retain, nonatomic) NSString *recognition; // @synthesize recognition=_recognition;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(retain, nonatomic) NSString *mime; // @synthesize mime=_mime;
@property(retain, nonatomic) NSString *base64String; // @synthesize base64String=_base64String;
- (void).cxx_destruct;
- (id)description;
- (id)md5HashFromBase64String:(id)arg1;
- (BOOL)writeFileToURL:(id)arg1 error:(id *)arg2;
- (id)normalizedFilename;
- (void)updateFileHash;
- (BOOL)isImage;

@end

@interface SFNoteEditorCoreController : NSObject
{
    SFNoteTextKitStack *_textKitStack;
}

@property __weak SFNoteTextKitStack *textKitStack; // @synthesize textKitStack=_textKitStack;
- (void).cxx_destruct;
- (struct _NSRange)extraAttachmentsRangeForRange:(struct _NSRange)arg1;
- (void)disableInternalURLsInRange:(struct _NSRange)arg1;
- (void)unfoldFoldAttachment:(id)arg1 attachmentRange:(struct _NSRange)arg2 textView:(id)arg3;
- (void)unfoldTextWithFoldIdentifier:(id)arg1 inRange:(struct _NSRange)arg2 textView:(id)arg3;
- (void)foldTextInRange:(struct _NSRange)arg1 foldIdentifier:(id)arg2 textView:(id)arg3;
- (void)foldTextWithAttributeName:(id)arg1 inRange:(struct _NSRange)arg2 textView:(id)arg3;
- (void)moveParagraphUp:(BOOL)arg1 inTextView:(id)arg2;
- (unsigned long long)shiftSelectionRight:(BOOL)arg1 inTextView:(id)arg2;
- (BOOL)indentTabbableStyle:(BOOL)arg1 textView:(id)arg2;
- (BOOL)matchRepeatableStyleOnNewLineInTextView:(id)arg1;
- (void)reorderOrderedListInTextView:(id)arg1;
- (void)setCheckboxAttachmentsState:(long long)arg1 InRange:(struct _NSRange)arg2 inTextView:(id)arg3;
- (void)toggleCheckboxAttachment:(id)arg1 atIndex:(unsigned long long)arg2 inTextView:(id)arg3;
- (BOOL)containsCheckboxesInRange:(struct _NSRange)arg1;
- (void)correctTagSelectionAfterInsertionInTextView:(id)arg1;
- (void)performStylingInTextView:(id)arg1;

@end

@interface SFTagExportViewController : NSViewController
{
    NSPopUpButton *_formatPopUpButton;
    NSButton *_attachmentsButton;
    NSButton *_mergeButton;
    NSArray *_extensions;
    SFLoadingWindowController *_loadingWindowController;
}

@property(retain, nonatomic) SFLoadingWindowController *loadingWindowController; // @synthesize loadingWindowController=_loadingWindowController;
@property(retain) NSArray *extensions; // @synthesize extensions=_extensions;
@property __weak NSButton *mergeButton; // @synthesize mergeButton=_mergeButton;
@property __weak NSButton *attachmentsButton; // @synthesize attachmentsButton=_attachmentsButton;
@property __weak NSPopUpButton *formatPopUpButton; // @synthesize formatPopUpButton=_formatPopUpButton;
- (void).cxx_destruct;
- (void)hideLoadingWindow;
- (void)showLoadingWindow;
- (void)extensionChanged:(id)arg1;
- (void)disableAttachmentsWithNotes:(id)arg1;
- (void)exportTag:(id)arg1;
- (void)viewDidLoad;

@end

@interface SFHTMLNoteImporter : NSObject <SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)noteTextFromHTMLString:(id)arg1 andFilename:(id)arg2 importImages:(BOOL)arg3;
- (id)noteTextFromHTMLString:(id)arg1 andFilename:(id)arg2;
- (id)importNotesFromFileURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

@end

@interface SFThemesPreferencesViewController : NSViewController <SFThemeManagerStylableObject>
{
    NSCollectionView *_themesCollectionView;
    SFStyleView *_footerView;
    ITSwitch *_appIconMatchesThemeSwitch;
    NSTextField *_appIconMatchesThemeTextField;
    ITSwitch *_useCustomIconsForTagsSwitch;
    NSTextField *_useCustomIconsForTagsTextField;
    SFNotesThemesManager *_themeManager;
    NSMutableArray *_themes;
}

@property(retain) NSMutableArray *themes; // @synthesize themes=_themes;
@property(retain) SFNotesThemesManager *themeManager; // @synthesize themeManager=_themeManager;
@property __weak NSTextField *useCustomIconsForTagsTextField; // @synthesize useCustomIconsForTagsTextField=_useCustomIconsForTagsTextField;
@property ITSwitch *useCustomIconsForTagsSwitch; // @synthesize useCustomIconsForTagsSwitch=_useCustomIconsForTagsSwitch;
@property __weak NSTextField *appIconMatchesThemeTextField; // @synthesize appIconMatchesThemeTextField=_appIconMatchesThemeTextField;
@property ITSwitch *appIconMatchesThemeSwitch; // @synthesize appIconMatchesThemeSwitch=_appIconMatchesThemeSwitch;
@property SFStyleView *footerView; // @synthesize footerView=_footerView;
@property NSCollectionView *themesCollectionView; // @synthesize themesCollectionView=_themesCollectionView;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)themeButtonClicked:(id)arg1;
- (id)imageForThemeName:(id)arg1 locked:(BOOL)arg2 lightTheme:(BOOL)arg3 darkTheme:(BOOL)arg4;
- (void)updateThemeDataWithSelecteTheme:(id)arg1;
- (void)setupThemesData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)dealloc;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheExpression : NSObject
{
    GRMustacheToken *_token;
}

@property(retain, nonatomic) GRMustacheToken *token; // @synthesize token=_token;
- (BOOL)acceptVisitor:(id)arg1 error:(id *)arg2;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface SFEnexNoteImporter : NSObject <SFEnexParserDelegate, SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    BOOL _testMode;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
    NSMutableArray *_importedNote;
    SFBearifier *_htmlBearifier;
    NSURL *_tmpFolderURL;
}

@property(readonly) NSURL *tmpFolderURL; // @synthesize tmpFolderURL=_tmpFolderURL;
@property(retain) SFBearifier *htmlBearifier; // @synthesize htmlBearifier=_htmlBearifier;
@property(retain) NSMutableArray *importedNote; // @synthesize importedNote=_importedNote;
@property(readonly) BOOL testMode; // @synthesize testMode=_testMode;
@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)stringTextFromEnexNote:(id)arg1;
- (void)replaceTag:(id)arg1 inENNote:(id)arg2;
- (id)replaceENLegacyBold:(id)arg1;
- (unsigned long long)numberOfOccurrencesOfString:(id)arg1 inString:(id)arg2;
- (id)replaceCodeBlocksInsideEnexNote:(id)arg1;
- (id)replaceHighlighedInsideEnexNote:(id)arg1;
- (id)replaceEnMediaTagsInBody:(id)arg1 withFiles:(id)arg2;
- (id)replaceEnTodoWithBearCheckboxes:(id)arg1;
- (void)parser:(id)arg1 didParseFile:(id)arg2;
- (void)parser:(id)arg1 didParseNote:(id)arg2;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesEditorPlaceholderViewController : NSViewController <SFThemeManagerStylableObject>
{
    SFNotesActionsViewController *_notesActionsViewController;
    SFStyleView *_placeholderBackgroundView;
    NSImageView *_placeholderImageView;
    NSImageView *_tableViewPlaceholderImageView;
    NSView *_placeholderView;
    NSView *_tableViewPlaceholderView;
    NSImageView *_topImageView;
    NSTextField *_statusTextField;
    SFStyleView *_statusBackgroundStyleView;
    NSImage *_mountainPlaceholderImage;
    NSImage *_spacePlaceholderImage;
    NSImage *_defaultPlaceholderImage;
    NSImage *_multipleNotePlaceholderImage;
    NSImage *_emptySearchPlaceholderImage;
    NSImage *_emptyTrashPlaceholderImage;
}

@property(retain, nonatomic) NSImage *emptyTrashPlaceholderImage; // @synthesize emptyTrashPlaceholderImage=_emptyTrashPlaceholderImage;
@property(retain, nonatomic) NSImage *emptySearchPlaceholderImage; // @synthesize emptySearchPlaceholderImage=_emptySearchPlaceholderImage;
@property(retain, nonatomic) NSImage *multipleNotePlaceholderImage; // @synthesize multipleNotePlaceholderImage=_multipleNotePlaceholderImage;
@property(retain, nonatomic) NSImage *defaultPlaceholderImage; // @synthesize defaultPlaceholderImage=_defaultPlaceholderImage;
@property(retain, nonatomic) NSImage *spacePlaceholderImage; // @synthesize spacePlaceholderImage=_spacePlaceholderImage;
@property(retain, nonatomic) NSImage *mountainPlaceholderImage; // @synthesize mountainPlaceholderImage=_mountainPlaceholderImage;
@property __weak SFStyleView *statusBackgroundStyleView; // @synthesize statusBackgroundStyleView=_statusBackgroundStyleView;
@property __weak NSTextField *statusTextField; // @synthesize statusTextField=_statusTextField;
@property __weak NSImageView *topImageView; // @synthesize topImageView=_topImageView;
@property __weak NSView *tableViewPlaceholderView; // @synthesize tableViewPlaceholderView=_tableViewPlaceholderView;
@property __weak NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property __weak NSImageView *tableViewPlaceholderImageView; // @synthesize tableViewPlaceholderImageView=_tableViewPlaceholderImageView;
@property __weak NSImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
@property __weak SFStyleView *placeholderBackgroundView; // @synthesize placeholderBackgroundView=_placeholderBackgroundView;
@property __weak SFNotesActionsViewController *notesActionsViewController; // @synthesize notesActionsViewController=_notesActionsViewController;
- (void).cxx_destruct;
- (void)setEmptyTrashPlaceholder;
- (void)setEmptySearchPlaceholder;
- (void)setMultipleNotesPlaceholder;
- (void)setDefaultPlaceholder;
- (void)setStatusAttributedString:(id)arg1;
- (void)setNumberOfSelectedNotes:(unsigned long long)arg1;
- (void)setNumberOfDisplayedNotes:(unsigned long long)arg1;
- (void)setRepresentedSidebarItem:(id)arg1 selectedNotes:(id)arg2 displayedNotesCount:(unsigned long long)arg3;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTheme : NSObject
{
    NSMutableArray *_themeItems;
    NSMutableDictionary *_mappingDictionary;
}

@property(retain) NSMutableDictionary *mappingDictionary; // @synthesize mappingDictionary=_mappingDictionary;
@property(retain) NSMutableArray *themeItems; // @synthesize themeItems=_themeItems;
- (void).cxx_destruct;
- (id)description;
- (id)arrayRepresentation;
- (id)readFromURL:(id)arg1;
- (void)writeToURL:(id)arg1;
- (void)updateItemLinkedItems:(id)arg1;
- (void)updateItemProxyValue:(id)arg1;
- (void)unregisterThemeItem:(id)arg1;
- (void)registerThemeItem:(id)arg1;
- (void)addThemeItemsFromTheme:(id)arg1;
- (id)themeItemForKey:(id)arg1;
- (void)updateThemeItem:(id)arg1;
- (void)removeThemeItem:(id)arg1;
- (void)addThemeItem:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)fontForKey:(id)arg1 size:(double)arg2;
- (id)colorForKey:(id)arg1;
- (id)initWithContentOfURL:(id)arg1;
- (id)init;

@end

@interface SFThemeItem : NSObject
{
    NSString *_kind;
    NSString *_key;
    id _value;
    id _proxyValue;
}

+ (id)groupThemeItem;
+ (id)numberThemeItem;
+ (id)colorThemeItem;
+ (id)fontThemeItem;
@property(copy) id proxyValue; // @synthesize proxyValue=_proxyValue;
@property(copy) id value; // @synthesize value=_value;
@property(copy) NSString *key; // @synthesize key=_key;
@property(copy) NSString *kind; // @synthesize kind=_kind;
- (void).cxx_destruct;
- (id)description;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (id)textColor;
- (BOOL)isGroup;
- (BOOL)isNumber;
- (BOOL)isFont;
- (BOOL)isColor;

@end

@interface SFCreatePasswordPromptViewController : SFBasePasswordPromptViewController
{
    NSColor *_labelColor;
    NSTextField *_titleLabel;
    NSSecureTextField *_repeatPasswordTextField;
    NSTextField *_createPasswordStrengthLabel;
}

@property NSTextField *createPasswordStrengthLabel; // @synthesize createPasswordStrengthLabel=_createPasswordStrengthLabel;
@property NSSecureTextField *repeatPasswordTextField; // @synthesize repeatPasswordTextField=_repeatPasswordTextField;
@property NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain) NSColor *labelColor; // @synthesize labelColor=_labelColor;
- (void).cxx_destruct;
- (void)shakeView:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)submitButtonPressed:(id)arg1;
- (void)stylePasswordTextFieldsForErrors:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)resetPasswordPrompt;
- (void)setErrors:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface SFNoteWikiTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)stylerRegularExpression;
+ (id)stylerMarkerAttributeName;
+ (id)stylerAttributeName;
+ (id)stylerMarker;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;
- (id)watchTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)humanizeTextInInString:(id)arg1 range:(struct _NSRange)arg2;
- (void)RTFizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)HTMLizeTextInAttributedString:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteUnorderedListMarkdownStyler : SFNoteUnorderedListStyler
{
}

+ (id)stylerRegularExpression;
- (id)attachmentRegularExpression;

@end

@interface SFPreferencesWindowController : NSWindowController <SFThemeManagerStylableObject>
{
    SFGeneralPreferencesViewController *_generalPreferencesViewController;
    SFSyncViewController *_syncViewController;
    SFSyncPreferencesViewController *_syncStatusViewController;
}

@property __weak SFSyncPreferencesViewController *syncStatusViewController; // @synthesize syncStatusViewController=_syncStatusViewController;
@property __weak SFSyncViewController *syncViewController; // @synthesize syncViewController=_syncViewController;
@property __weak SFGeneralPreferencesViewController *generalPreferencesViewController; // @synthesize generalPreferencesViewController=_generalPreferencesViewController;
- (void).cxx_destruct;
- (void)showThemesPreferences:(id)arg1;
- (void)showSyncPreferences:(id)arg1;
- (void)showBearProPreferences:(id)arg1;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (BOOL)validateMenuItem:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEditorStateController : NSObject <NSCoding>
{
    NSMutableDictionary *_states;
}

@property(retain) NSMutableDictionary *states; // @synthesize states=_states;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)invalidateStateForUUID:(id)arg1;
- (id)registerStateForUUID:(id)arg1;
- (id)stateForUUID:(id)arg1;
- (id)registeredUUIDs;
- (id)init;

@end

@interface SFEditorState : NSObject <NSCoding>
{
    BOOL _isFirstResponder;
    NSString *_UUID;
    MRVectorClock *_vectorClock;
    NSDate *_date;
    NSUndoManager *_undoManager;
    double _scrollPosition;
    double _scrollWidth;
    struct _NSRange _editRange;
    struct _NSRange _firstParagraphRange;
}

@property(nonatomic) BOOL isFirstResponder; // @synthesize isFirstResponder=_isFirstResponder;
@property(nonatomic) struct _NSRange firstParagraphRange; // @synthesize firstParagraphRange=_firstParagraphRange;
@property(nonatomic) double scrollWidth; // @synthesize scrollWidth=_scrollWidth;
@property(nonatomic) double scrollPosition; // @synthesize scrollPosition=_scrollPosition;
@property(nonatomic) struct _NSRange editRange; // @synthesize editRange=_editRange;
@property(retain) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(copy) NSDate *date; // @synthesize date=_date;
@property(copy) MRVectorClock *vectorClock; // @synthesize vectorClock=_vectorClock;
@property(copy) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isValidForVectorClock:(id)arg1;
- (BOOL)isValidForDate:(id)arg1;

@end

@interface SFStyleItem : NSObject
{
    BOOL _separator;
    NSAttributedString *_name;
    NSString *_hotkey;
    NSImage *_image;
    NSColor *_separatorColor;
    SEL _selector;
}

@property(nonatomic) BOOL separator; // @synthesize separator=_separator;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(retain) NSColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(retain) NSString *hotkey; // @synthesize hotkey=_hotkey;
@property(retain) NSAttributedString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface SFNoteTextStyleEditorViewController : NSViewController <SFThemeManagerStylableObject>
{
    BOOL _disabled;
    BOOL _filesDisabled;
    id <SFNoteTextStyleEditorViewControllerDelegate> _delegate;
    SFNoteStylersManager *_stylerManager;
    NSTableView *_styleTableView;
    NSButton *_detachButton;
    NSButton *_closeButton;
    NSArray *_styleItems;
    NSPopover *_popover;
    NSFont *_itemTextFont;
    NSColor *_itemTextColor;
    NSColor *_itemMarkerColor;
}

@property(retain) NSColor *itemMarkerColor; // @synthesize itemMarkerColor=_itemMarkerColor;
@property(retain) NSColor *itemTextColor; // @synthesize itemTextColor=_itemTextColor;
@property(retain) NSFont *itemTextFont; // @synthesize itemTextFont=_itemTextFont;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(retain) NSArray *styleItems; // @synthesize styleItems=_styleItems;
@property(nonatomic) BOOL filesDisabled; // @synthesize filesDisabled=_filesDisabled;
@property(nonatomic) BOOL disabled; // @synthesize disabled=_disabled;
@property __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property __weak NSButton *detachButton; // @synthesize detachButton=_detachButton;
@property __weak NSTableView *styleTableView; // @synthesize styleTableView=_styleTableView;
@property __weak SFNoteStylersManager *stylerManager; // @synthesize stylerManager=_stylerManager;
@property __weak id <SFNoteTextStyleEditorViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)insertFileItem;
- (id)multilineCodeStyleItem;
- (id)codeStyleItem;
- (id)quoteListStyleItem;
- (id)todoListStyleItem;
- (id)orderedListStyleItem;
- (id)unorderedListStyleItem;
- (id)markerStyleItem;
- (id)linkStyleItem;
- (id)strikeStyleItem;
- (id)underlineStyleItem;
- (id)italicStyleItem;
- (id)boldStyleItem;
- (id)lineSeparatorListStyleItem;
- (id)h3StyleItem;
- (id)h2StyleItem;
- (id)h1StyleItem;
- (id)separatorStyleItem;
- (id)allStyleItems;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldDetach:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)detachPopover:(id)arg1;
- (id)createWindowControllerWithFrame:(struct CGRect)arg1;
- (void)updateStylersTable;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)dealloc;
- (void)viewDidDisappear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesTextContainer : NSTextContainer
{
    SFNotesTextThemeManager *_themeManager;
}

@property(retain, nonatomic) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (double)lineFragmentPadding;

@end

@interface SFColorHexValueTrasformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface GRMustacheExpressionGenerator : NSObject <GRMustacheExpressionVisitor>
{
    NSString *_expressionString;
}

- (BOOL)visitScopedExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitImplicitIteratorExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitIdentifierExpression:(id)arg1 error:(id *)arg2;
- (BOOL)visitFilteredExpression:(id)arg1 error:(id *)arg2;
- (id)stringWithExpression:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteID : NSManagedObjectID
{
}

@end

@interface _SFNote : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)urlsSet;
- (id)todosSet;
- (id)tagsSet;
- (id)locationsSet;
- (id)linkedNotesSet;
- (id)linkedByNotesSet;
- (id)filesSet;
- (void)setPrimitiveTrashedValue:(BOOL)arg1;
- (BOOL)primitiveTrashedValue;
@property BOOL trashedValue;
- (void)setPrimitiveTodoIncompletedValue:(short)arg1;
- (short)primitiveTodoIncompletedValue;
@property short todoIncompletedValue;
- (void)setPrimitiveTodoCompletedValue:(short)arg1;
- (short)primitiveTodoCompletedValue;
@property short todoCompletedValue;
- (void)setPrimitiveSkipSyncValue:(BOOL)arg1;
- (BOOL)primitiveSkipSyncValue;
@property BOOL skipSyncValue;
- (void)setPrimitiveShownInTodayWidgetValue:(BOOL)arg1;
- (BOOL)primitiveShownInTodayWidgetValue;
@property BOOL shownInTodayWidgetValue;
- (void)setPrimitivePinnedValue:(BOOL)arg1;
- (BOOL)primitivePinnedValue;
@property BOOL pinnedValue;
- (void)setPrimitivePermanentlyDeletedValue:(BOOL)arg1;
- (BOOL)primitivePermanentlyDeletedValue;
@property BOOL permanentlyDeletedValue;
- (void)setPrimitiveOrderValue:(long long)arg1;
- (long long)primitiveOrderValue;
@property long long orderValue;
- (void)setPrimitiveLockedValue:(BOOL)arg1;
- (BOOL)primitiveLockedValue;
@property BOOL lockedValue;
- (void)setPrimitiveHasSourceCodeValue:(BOOL)arg1;
- (BOOL)primitiveHasSourceCodeValue;
@property BOOL hasSourceCodeValue;
- (void)setPrimitiveHasImagesValue:(BOOL)arg1;
- (BOOL)primitiveHasImagesValue;
@property BOOL hasImagesValue;
- (void)setPrimitiveHasFilesValue:(BOOL)arg1;
- (BOOL)primitiveHasFilesValue;
@property BOOL hasFilesValue;
- (void)setPrimitiveEncryptedValue:(BOOL)arg1;
- (BOOL)primitiveEncryptedValue;
@property BOOL encryptedValue;
- (void)setPrimitiveArchivedValue:(BOOL)arg1;
- (BOOL)primitiveArchivedValue;
@property BOOL archivedValue;
@property(readonly, nonatomic) SFNoteID *objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *archived; // @dynamic archived;
@property(retain, nonatomic) NSDate *archivedDate; // @dynamic archivedDate;
@property(retain, nonatomic) NSString *conflictUniqueIdentifier; // @dynamic conflictUniqueIdentifier;
@property(retain, nonatomic) NSDate *conflictUniqueIdentifierDate; // @dynamic conflictUniqueIdentifierDate;
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSNumber *encrypted; // @dynamic encrypted;
@property(retain, nonatomic) NSData *encryptedData; // @dynamic encryptedData;
@property(retain, nonatomic) NSString *encryptionUniqueIdentifier; // @dynamic encryptionUniqueIdentifier;
@property(retain, nonatomic) NSSet *files; // @dynamic files;
@property(retain, nonatomic) SFFolder *folder; // @dynamic folder;
@property(retain, nonatomic) NSNumber *hasFiles; // @dynamic hasFiles;
@property(retain, nonatomic) NSNumber *hasImages; // @dynamic hasImages;
@property(retain, nonatomic) NSNumber *hasSourceCode; // @dynamic hasSourceCode;
@property(retain, nonatomic) NSString *lastEditingDevice; // @dynamic lastEditingDevice;
@property(retain, nonatomic) NSSet *linkedByNotes; // @dynamic linkedByNotes;
@property(retain, nonatomic) NSSet *linkedNotes; // @dynamic linkedNotes;
@property(retain, nonatomic) NSSet *locations; // @dynamic locations;
@property(retain, nonatomic) NSNumber *locked; // @dynamic locked;
@property(retain, nonatomic) NSDate *lockedDate; // @dynamic lockedDate;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) NSNumber *order; // @dynamic order;
@property(retain, nonatomic) NSDate *orderDate; // @dynamic orderDate;
@property(retain, nonatomic) SFPassword *password; // @dynamic password;
@property(retain, nonatomic) NSNumber *permanentlyDeleted; // @dynamic permanentlyDeleted;
@property(retain, nonatomic) NSNumber *pinned; // @dynamic pinned;
@property(retain, nonatomic) NSDate *pinnedDate; // @dynamic pinnedDate;
@property(retain, nonatomic) SFNoteServerData *serverData; // @dynamic serverData;
@property(retain, nonatomic) NSNumber *shownInTodayWidget; // @dynamic shownInTodayWidget;
@property(retain, nonatomic) NSNumber *skipSync; // @dynamic skipSync;
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSSet *tags; // @dynamic tags;
@property(retain, nonatomic) NSString *text; // @dynamic text;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSNumber *todoCompleted; // @dynamic todoCompleted;
@property(retain, nonatomic) NSNumber *todoIncompleted; // @dynamic todoIncompleted;
@property(retain, nonatomic) NSSet *todos; // @dynamic todos;
@property(retain, nonatomic) NSNumber *trashed; // @dynamic trashed;
@property(retain, nonatomic) NSDate *trashedDate; // @dynamic trashedDate;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @dynamic uniqueIdentifier;
@property(retain, nonatomic) NSSet *urls; // @dynamic urls;
@property(retain, nonatomic) NSData *vectorClock; // @dynamic vectorClock;

@end

@interface SFNoteAttributes : NSObject
{
}

+ (id)vectorClock;
+ (id)uniqueIdentifier;
+ (id)trashedDate;
+ (id)trashed;
+ (id)todoIncompleted;
+ (id)todoCompleted;
+ (id)title;
+ (id)text;
+ (id)subtitle;
+ (id)skipSync;
+ (id)shownInTodayWidget;
+ (id)pinnedDate;
+ (id)pinned;
+ (id)permanentlyDeleted;
+ (id)orderDate;
+ (id)order;
+ (id)modificationDate;
+ (id)lockedDate;
+ (id)locked;
+ (id)lastEditingDevice;
+ (id)hasSourceCode;
+ (id)hasImages;
+ (id)hasFiles;
+ (id)encryptionUniqueIdentifier;
+ (id)encryptedData;
+ (id)encrypted;
+ (id)creationDate;
+ (id)conflictUniqueIdentifierDate;
+ (id)conflictUniqueIdentifier;
+ (id)archivedDate;
+ (id)archived;

@end

@interface SFNoteRelationships : NSObject
{
}

+ (id)urls;
+ (id)todos;
+ (id)tags;
+ (id)serverData;
+ (id)password;
+ (id)locations;
+ (id)linkedNotes;
+ (id)linkedByNotes;
+ (id)folder;
+ (id)files;

@end

@interface SFSwipeableView : NSView
{
    NSViewController<SFSwipeableViewDelegate> *_delegate;
    double _scrollDeltaX;
    double _scrollDeltaY;
}

@property double scrollDeltaY; // @synthesize scrollDeltaY=_scrollDeltaY;
@property double scrollDeltaX; // @synthesize scrollDeltaX=_scrollDeltaX;
@property __weak NSViewController<SFSwipeableViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)scrollWheel:(id)arg1;
- (id)init;

@end

@interface GRMustacheTemplate : NSObject <GRMustacheRendering>
{
    GRMustacheTemplateRepository *_templateRepository;
    GRMustacheTemplateAST *_templateAST;
    GRMustacheContext *_baseContext;
}

+ (id)renderObject:(id)arg1 fromResource:(id)arg2 bundle:(id)arg3 error:(id *)arg4;
+ (id)renderObject:(id)arg1 fromString:(id)arg2 error:(id *)arg3;
+ (id)templateFromContentsOfURL:(id)arg1 error:(id *)arg2;
+ (id)templateFromContentsOfFile:(id)arg1 error:(id *)arg2;
+ (id)templateFromResource:(id)arg1 bundle:(id)arg2 error:(id *)arg3;
+ (id)templateFromString:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) GRMustacheContext *baseContext; // @synthesize baseContext=_baseContext;
@property(retain, nonatomic) GRMustacheTemplateAST *templateAST; // @synthesize templateAST=_templateAST;
@property(retain, nonatomic) GRMustacheTemplateRepository *templateRepository; // @synthesize templateRepository=_templateRepository;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)renderContentWithContext:(id)arg1 HTMLSafe:(char *)arg2 error:(id *)arg3;
- (id)renderObjectsFromArray:(id)arg1 error:(id *)arg2;
- (id)renderObject:(id)arg1 error:(id *)arg2;
- (void)extendBaseContextWithTagDelegate:(id)arg1;
- (void)extendBaseContextWithProtectedObject:(id)arg1;
- (void)extendBaseContextWithObject:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL mustacheBoolValue;
@property(readonly) Class superclass;

@end

@interface SFAlphaColorWell : NSColorWell
{
}

- (void)deactivate;
- (void)activate:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SFTagExportCoreController : NSObject
{
    BOOL _exportAttachments;
    long long _exportFormat;
    double _scaleFactor;
}

+ (id)tagNameForFS:(id)arg1;
+ (id)crerateDestinationFolderWithDestinationURL:(id)arg1;
+ (id)exportNoteImages:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
@property double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property BOOL exportAttachments; // @synthesize exportAttachments=_exportAttachments;
@property long long exportFormat; // @synthesize exportFormat=_exportFormat;
- (id)noteExportControllerWithFileDictionary:(id)arg1;
- (id)notesForTag:(id)arg1;
- (id)exportNote:(id)arg1 withBaseURL:(id)arg2;
- (void)mergeNotesForTag:(id)arg1 withURL:(id)arg2 andError:(id *)arg3;
- (id)exportNotesForTag:(id)arg1 withURL:(id)arg2 andError:(id *)arg3;
- (id)initWithFormat:(long long)arg1 exportAttachments:(BOOL)arg2 andScaleFactor:(double)arg3;

@end

@interface SFNoteFileServerData : _SFNoteFileServerData
{
}

+ (void)deleteAllObjectsInManagedObjectContext:(id)arg1;
@property(nonatomic) __weak CKRecord *ckRecord;

@end

@interface SFNoteInvalidCharacterStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
}

+ (id)invalidUnicodeCharacterHexValues;
+ (id)stylerRegularExpression;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (id)stylerRegularExpression;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFPreferencesWindow : NSWindow
{
}

- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface SFMDToBearRenderer : NSObject <CMParserDelegate>
{
    NSMutableArray *_imagesURLs;
    CMDocument *_document;
    NSMutableString *_buffer;
    NSMutableDictionary *_listIndexes;
    long long _currentQuoteStartIndex;
    SFNoteStylersManager *_stylerManager;
}

@property(retain) SFNoteStylersManager *stylerManager; // @synthesize stylerManager=_stylerManager;
@property(nonatomic) long long currentQuoteStartIndex; // @synthesize currentQuoteStartIndex=_currentQuoteStartIndex;
@property(retain, nonatomic) NSMutableDictionary *listIndexes; // @synthesize listIndexes=_listIndexes;
@property(retain) NSMutableString *buffer; // @synthesize buffer=_buffer;
@property(retain) CMDocument *document; // @synthesize document=_document;
@property(retain) NSMutableArray *imagesURLs; // @synthesize imagesURLs=_imagesURLs;
- (void).cxx_destruct;
- (void)appendString:(id)arg1;
- (void)appendLineBreakIfNotTightForNode:(id)arg1;
- (void)appendLineBreakIfNextNodeIsNotParagraph:(id)arg1;
- (long long)listIndentLevelForNode:(id)arg1;
- (void)removeWhiteLineFillers;
- (id)fillWhiteLineForString:(id)arg1;
- (void)replaceTodoList;
- (void)parserFoundLineBreak:(id)arg1;
- (void)parserFoundSoftBreak:(id)arg1;
- (void)parserDidEndBlockQuote:(id)arg1;
- (void)parserDidStartBlockQuote:(id)arg1;
- (void)parserDidEndListItem:(id)arg1;
- (void)parserDidStartListItem:(id)arg1;
- (void)parser:(id)arg1 didEndOrderedListWithStartingNumber:(long long)arg2 tight:(BOOL)arg3;
- (void)parser:(id)arg1 didStartOrderedListWithStartingNumber:(long long)arg2 tight:(BOOL)arg3;
- (void)parser:(id)arg1 didEndUnorderedListWithTightness:(BOOL)arg2;
- (void)parser:(id)arg1 didStartUnorderedListWithTightness:(BOOL)arg2;
- (void)parser:(id)arg1 foundInlineCode:(id)arg2;
- (void)parser:(id)arg1 foundCodeBlock:(id)arg2 info:(id)arg3;
- (void)parser:(id)arg1 didEndImageWithURL:(id)arg2 title:(id)arg3;
- (void)parser:(id)arg1 didStartImageWithURL:(id)arg2 title:(id)arg3;
- (void)parser:(id)arg1 didEndLinkWithURL:(id)arg2 title:(id)arg3;
- (void)parser:(id)arg1 didStartLinkWithURL:(id)arg2 title:(id)arg3;
- (void)parserDidEndStrong:(id)arg1;
- (void)parserDidStartStrong:(id)arg1;
- (void)parserDidEndEmphasis:(id)arg1;
- (void)parserDidStartEmphasis:(id)arg1;
- (void)parserDidEndParagraph:(id)arg1;
- (void)parserDidStartParagraph:(id)arg1;
- (void)parser:(id)arg1 didEndHeaderWithLevel:(long long)arg2;
- (void)parser:(id)arg1 didStartHeaderWithLevel:(long long)arg2;
- (void)parserFoundHRule:(id)arg1;
- (void)parser:(id)arg1 foundText:(id)arg2;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (id)render;
- (id)initWithString:(id)arg1 syntax:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFStaticNoteItem : NSObject
{
}

+ (id)noteItem;
- (id)subtitle;
- (id)title;
- (id)text;
- (id)uniqueIdentifier;

@end

@interface SFSyncPreferencesViewController : NSViewController <SFThemeManagerStylableObject>
{
    SFSyncErrorHandlerCoreController *_syncErrorHandlerCoreController;
    ITSwitch *_syncDisabledByUser;
    NSColor *_headerLabelColor;
    NSColor *_prefLabelColor;
    NSTextField *_lastSyncTextField;
    SFProgressIndicator *_lastSyncProgessIndicator;
    NSTextField *_statusHeaderTextField;
    NSTextField *_statusTextField;
    SFStyleView *_statusRibbonView;
    NSStackView *_actionsStackView;
    NSView *_statusMessageView;
    NSView *_action1View;
    NSTextField *_action1TitleTextField;
    NSButton *_action1Button;
    NSTextField *_action1DescriptionTextField;
    NSView *_contactUSView;
    NSView *_placeholderView;
    NSImageView *_placeholderImageView;
}

@property __weak NSImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
@property __weak NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property __weak NSView *contactUSView; // @synthesize contactUSView=_contactUSView;
@property __weak NSTextField *action1DescriptionTextField; // @synthesize action1DescriptionTextField=_action1DescriptionTextField;
@property __weak NSButton *action1Button; // @synthesize action1Button=_action1Button;
@property __weak NSTextField *action1TitleTextField; // @synthesize action1TitleTextField=_action1TitleTextField;
@property __weak NSView *action1View; // @synthesize action1View=_action1View;
@property __weak NSView *statusMessageView; // @synthesize statusMessageView=_statusMessageView;
@property __weak NSStackView *actionsStackView; // @synthesize actionsStackView=_actionsStackView;
@property __weak SFStyleView *statusRibbonView; // @synthesize statusRibbonView=_statusRibbonView;
@property __weak NSTextField *statusTextField; // @synthesize statusTextField=_statusTextField;
@property __weak NSTextField *statusHeaderTextField; // @synthesize statusHeaderTextField=_statusHeaderTextField;
@property __weak SFProgressIndicator *lastSyncProgessIndicator; // @synthesize lastSyncProgessIndicator=_lastSyncProgessIndicator;
@property __weak NSTextField *lastSyncTextField; // @synthesize lastSyncTextField=_lastSyncTextField;
@property NSColor *prefLabelColor; // @synthesize prefLabelColor=_prefLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
@property ITSwitch *syncDisabledByUser; // @synthesize syncDisabledByUser=_syncDisabledByUser;
@property(retain) SFSyncErrorHandlerCoreController *syncErrorHandlerCoreController; // @synthesize syncErrorHandlerCoreController=_syncErrorHandlerCoreController;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)updateStatusColor;
- (void)updateLastSyncDateTextField;
- (void)updateStatusAndActions;
- (void)actionButtonClicked:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (void)viewDidAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNotesImportViewController : NSViewController
{
    NSButton *_keepDatesButton;
    NSButton *_titlesButton;
    NSButton *_fileNameButton;
    NSButton *_tagsButton;
    NSWindow *_loadingWindow;
    NSProgressIndicator *_loadingProgress;
    SFLoadingWindowController *_loadingWindowController;
    struct _NSModalSession *_loadingModalSession;
}

@property(nonatomic) struct _NSModalSession *loadingModalSession; // @synthesize loadingModalSession=_loadingModalSession;
@property(retain, nonatomic) SFLoadingWindowController *loadingWindowController; // @synthesize loadingWindowController=_loadingWindowController;
@property __weak NSProgressIndicator *loadingProgress; // @synthesize loadingProgress=_loadingProgress;
@property __weak NSWindow *loadingWindow; // @synthesize loadingWindow=_loadingWindow;
@property __weak NSButton *tagsButton; // @synthesize tagsButton=_tagsButton;
@property __weak NSButton *fileNameButton; // @synthesize fileNameButton=_fileNameButton;
@property __weak NSButton *titlesButton; // @synthesize titlesButton=_titlesButton;
@property __weak NSButton *keepDatesButton; // @synthesize keepDatesButton=_keepDatesButton;
- (void).cxx_destruct;
- (void)hideLoadingWindowUsingModalSession:(BOOL)arg1;
- (void)showLoadingWindowUsingModalSession:(BOOL)arg1;
- (void)filenameTitlesClicked:(id)arg1;
- (void)dynamicTitlesClicked:(id)arg1;
- (id)asyncManagedObjectContext:(id)arg1;
- (void)notifyImportWithNotes:(id)arg1;
- (void)importEvernoteNotes;
- (void)importDayOneNotes;
- (void)importDraftsNotes;
- (void)importVesperNotes;
- (void)restoreBackup;
- (void)importNotes;
- (void)viewDidLoad;

@end

@interface SFMainWindow : NSWindow
{
}

- (void)toggleFullScreen:(id)arg1;
- (void)recalculateKeyViewLoop;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface GRMustache : NSObject
{
}

+ (id)renderingObjectWithBlock:(CDUnknownBlockType)arg1;
+ (id)renderingObjectForObject:(id)arg1;
+ (id)standardLibrary;
+ (CDStruct_77932685)libraryVersion;
+ (void)preventNSUndefinedKeyExceptionAttack;

@end

@interface SFNoteTagIconsCoreController : NSObject
{
    NSArray *_currentLocalizations;
    NSCache *_keyCache;
}

@property(retain) NSCache *keyCache; // @synthesize keyCache=_keyCache;
@property(retain) NSArray *currentLocalizations; // @synthesize currentLocalizations=_currentLocalizations;
- (void).cxx_destruct;
- (void)setCustomIconCategory:(id)arg1 toIconName:(id)arg2;
- (id)customIconCategoryForIconName:(id)arg1;
- (id)categoryForIconName:(id)arg1;
- (id)sidebarIconForTagName:(id)arg1 selected:(BOOL)arg2;
- (id)autocompleteIconForTagName:(id)arg1 selected:(BOOL)arg2;
- (id)localizedKeywords;
- (id)universalKeywords;
- (id)testKeywords;
- (id)initWithLanguages:(id)arg1;
- (id)init;

@end

@interface GRMustacheScopedExpression : GRMustacheExpression
{
    GRMustacheExpression *_baseExpression;
    NSString *_identifier;
}

+ (id)expressionWithBaseExpression:(id)arg1 identifier:(id)arg2;
@property(readonly, retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, retain, nonatomic) GRMustacheExpression *baseExpression; // @synthesize baseExpression=_baseExpression;
- (id)initWithBaseExpression:(id)arg1 identifier:(id)arg2;
- (BOOL)acceptVisitor:(id)arg1 error:(id *)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setToken:(id)arg1;
- (void)dealloc;

@end

@interface SFNoteAutoCompletionItemsProvider : NSObject <SFEditorAutoCompleteItemsProvider>
{
    NSArray *_itemsForCompletion;
    unsigned long long _maxNumberOfCompletions;
    NSManagedObjectContext *_managedObjectContext;
}

@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(nonatomic) unsigned long long maxNumberOfCompletions; // @synthesize maxNumberOfCompletions=_maxNumberOfCompletions;
@property(retain) NSArray *itemsForCompletion; // @synthesize itemsForCompletion=_itemsForCompletion;
- (void).cxx_destruct;
- (id)allNotesInManagedObjectContext:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)completionSortDescriptorForPartialString:(id)arg1;
- (id)findNotesForPartialtitle:(id)arg1 inManagedObjectContext:(id)arg2 limitTo:(unsigned long long)arg3;
- (void)updateCompletionForPartiaString:(id)arg1 fullText:(id)arg2;
- (id)initWithManagedObjectContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFEPubChapter : NSObject
{
    NSString *_title;
    NSString *_chapterID;
    NSMutableArray *_subChapters;
}

@property(retain) NSMutableArray *subChapters; // @synthesize subChapters=_subChapters;
@property(retain) NSString *chapterID; // @synthesize chapterID=_chapterID;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 chapterID:(id)arg2;

@end

@interface Model2toModel3SFNoteMigrationPolicy : NSEntityMigrationPolicy
{
}

- (BOOL)createRelationshipsForDestinationInstance:(id)arg1 entityMapping:(id)arg2 manager:(id)arg3 error:(id *)arg4;

@end

@interface SFNoteExportCoreController : NSObject
{
    BOOL _exportTags;
    BOOL _mergeNotes;
    NSManagedObjectContext *_managedObjectContext;
    double _scaleFactor;
    NSString *_mergeFilename;
    long long _syntax;
    NSDictionary *_fileDictionary;
    SFNotesTextThemeManager *_textThemeManager;
    SFNotesTextThemeManager *_strongTextThemeManager;
}

@property(retain, nonatomic) SFNotesTextThemeManager *strongTextThemeManager; // @synthesize strongTextThemeManager=_strongTextThemeManager;
@property __weak SFNotesTextThemeManager *textThemeManager; // @synthesize textThemeManager=_textThemeManager;
@property(retain) NSDictionary *fileDictionary; // @synthesize fileDictionary=_fileDictionary;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property(retain, nonatomic) NSString *mergeFilename; // @synthesize mergeFilename=_mergeFilename;
@property(nonatomic) BOOL mergeNotes; // @synthesize mergeNotes=_mergeNotes;
@property(nonatomic) BOOL exportTags; // @synthesize exportTags=_exportTags;
@property(nonatomic) double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)configureExporter:(id)arg1;
- (id)exportNoteToPDFForPrint:(id)arg1 error:(id *)arg2;
- (id)exportNoteImages:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToBearNote:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToTextPackage:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToTXTTextBundle:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToMDTextBundle:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToEpub:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToTaskPaper:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToJPG:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToDOCX:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToRTF:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToMD:(id)arg1 toURL:(id)arg2 attachmentsRelativePath:(id)arg3 error:(id *)arg4;
- (id)exportNoteToHTML:(id)arg1 toURL:(id)arg2 attachmentsRelativePath:(id)arg3 error:(id *)arg4;
- (id)exportNoteToTXT:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNoteToPDF:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesBackup:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesImages:(id)arg1 toURL:(id)arg2 folderName:(id)arg3 error:(id *)arg4;
- (id)exportNotesToBearNotes:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToTextPackage:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToTXTTextBundle:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToMDTextBundle:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToEpub:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToTaskPaper:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToJPG:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToDOCX:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToRTF:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToMD:(id)arg1 toURL:(id)arg2 attachmentsRelativePath:(id)arg3 error:(id *)arg4;
- (id)exportNotesToHTML:(id)arg1 toURL:(id)arg2 attachmentsRelativePath:(id)arg3 error:(id *)arg4;
- (id)exportNotesToTXT:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)exportNotesToPDF:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)initWithManagedObjectContext:(id)arg1;

@end

@interface SFNoteCodeHighlightTextStyler : NSObject <SFNoteTextStyler>
{
    SFNotesTextThemeManager *_themeManager;
    SFCodeSyntaxHighlighter *_codeSyntaxHighlighter;
}

@property(retain) SFCodeSyntaxHighlighter *codeSyntaxHighlighter; // @synthesize codeSyntaxHighlighter=_codeSyntaxHighlighter;
@property(retain) SFNotesTextThemeManager *themeManager; // @synthesize themeManager=_themeManager;
- (void).cxx_destruct;
- (void)removeUnusedStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)applyStyleIn:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)styleTextInAttributedString:(id)arg1 range:(struct _NSRange *)arg2 textStorage:(id)arg3;
- (void)enableSyntaxHightlight:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GRMustacheTextNode : NSObject <GRMustacheTemplateASTNode>
{
    NSString *_text;
}

+ (id)textNodeWithText:(id)arg1;
- (id)initWithText:(id)arg1;
- (id)resolveTemplateASTNode:(id)arg1;
- (BOOL)acceptTemplateASTVisitor:(id)arg1 error:(id *)arg2;
@property(readonly, retain, nonatomic) NSString *text;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Model1toModel2SFNoteMigrationPolicy : NSEntityMigrationPolicy
{
}

- (BOOL)createDestinationInstancesForSourceInstance:(id)arg1 entityMapping:(id)arg2 manager:(id)arg3 error:(id *)arg4;

@end

@interface SFPurchaseStatusViewController : NSViewController <SFThemeManagerStylableObject>
{
    SFNotesIAPPurchases *_iapPurchases;
    NSColor *_headerLabelColor;
    NSColor *_textLabelColor;
    SFStyleView *_backgroundView;
    SFStyleView *_firstSeparator;
    NSImageView *_headerImageView;
    NSTextField *_subscriptionTextField;
    NSDictionary *_products;
}

@property(retain) NSDictionary *products; // @synthesize products=_products;
@property __weak NSTextField *subscriptionTextField; // @synthesize subscriptionTextField=_subscriptionTextField;
@property __weak NSImageView *headerImageView; // @synthesize headerImageView=_headerImageView;
@property __weak SFStyleView *firstSeparator; // @synthesize firstSeparator=_firstSeparator;
@property __weak SFStyleView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property NSColor *textLabelColor; // @synthesize textLabelColor=_textLabelColor;
@property NSColor *headerLabelColor; // @synthesize headerLabelColor=_headerLabelColor;
@property __weak SFNotesIAPPurchases *iapPurchases; // @synthesize iapPurchases=_iapPurchases;
- (void).cxx_destruct;
- (void)styleObjectWithThemeManager:(id)arg1;
- (void)setupTheme;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupObservers;
- (struct CGSize)preferredContentSize;
- (void)manageSubscription:(id)arg1;
- (void)updateSyncEnabledUntilDateTextField;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTagIconPickerViewController : NSViewController <NSCollectionViewDataSource>
{
    NSCollectionView *_collectionView;
    id <SFTagIconPickerViewControllerDelegate> _delegate;
    id <SFSidebarItem> _sidebarItem;
    SFNoteTagIconPickerCoreController *_tagIconPickerCoreController;
    NSString *_selectedIdentifier;
}

@property(retain) NSString *selectedIdentifier; // @synthesize selectedIdentifier=_selectedIdentifier;
@property(retain) SFNoteTagIconPickerCoreController *tagIconPickerCoreController; // @synthesize tagIconPickerCoreController=_tagIconPickerCoreController;
@property(nonatomic) id <SFSidebarItem> sidebarItem; // @synthesize sidebarItem=_sidebarItem;
@property(nonatomic) __weak id <SFTagIconPickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property __weak NSCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)setupTheme;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)collectionView:(id)arg1 itemForRepresentedObjectAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemsAtIndexPaths:(id)arg2;
- (void)popoverWillShow:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFTagIconPickerCollectionViewItem : NSCollectionViewItem
{
    NSImage *_icon;
    NSImage *_selectedIcon;
    SFStyleView *_bgView;
}

@property __weak SFStyleView *bgView; // @synthesize bgView=_bgView;
@property __weak NSImage *selectedIcon; // @synthesize selectedIcon=_selectedIcon;
@property __weak NSImage *icon; // @synthesize icon=_icon;
- (void).cxx_destruct;
- (void)updateIconSelected:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;

@end

@interface SFBearNoteImporter : NSObject <SSZipArchiveDelegate, SFNoteImporter>
{
    BOOL _preserveDates;
    BOOL _generateTitles;
    BOOL _filenameAsTitle;
    BOOL _escapeTags;
    NSManagedObjectContext *_managedObjectContext;
    long long _syntax;
}

@property BOOL escapeTags; // @synthesize escapeTags=_escapeTags;
@property BOOL filenameAsTitle; // @synthesize filenameAsTitle=_filenameAsTitle;
@property BOOL generateTitles; // @synthesize generateTitles=_generateTitles;
@property BOOL preserveDates; // @synthesize preserveDates=_preserveDates;
@property(nonatomic) long long syntax; // @synthesize syntax=_syntax;
@property __weak NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (id)unzippedBundleURLForZippedURL:(id)arg1;
- (id)importNotesFromFileURLs:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFNoteFile : _SFNoteFile
{
}

+ (id)uniqueIdentifierFromTextRepresentation:(id)arg1;
+ (id)parseNoteFilesFromText:(id)arg1 note:(id)arg2;
+ (id)parserRegex;
+ (id)concreteSubclasses;
+ (void)deleteAllUnusedNoteFilesInManagedObjectContext:(id)arg1;
+ (unsigned long long)numberOfFileToUploadInManagedObjectContext:(id)arg1;
+ (unsigned long long)numberOfFileToDownloadInManagedObjectContext:(id)arg1;
+ (id)noteFilesToUploadInManagedObjectContext:(id)arg1;
+ (id)noteFilesToDownloadInManagedObjectContext:(id)arg1;
+ (id)noteFileWithTextRepresentation:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteFilesWithUniqueIdentifiers:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteFileWithUniqueIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)noteFileForFileURL:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)factoryNoteFileForFileURL:(id)arg1 inManagedObjectContext:(id)arg2;
+ (BOOL)canImportFileURL:(id)arg1;
+ (id)filesInManagedObjectContext:(id)arg1 withPredicate:(id)arg2;
+ (void)fixTextAttachmentsForNote:(id)arg1 inTextStorage:(id)arg2;
- (id)textRepresentation;
- (void)updateFileMetadata;
- (void)updateUniqueIdentifier;
- (id)duplicate;
- (id)localFileManager;
- (id)additionalFileData;
- (id)localFolderName;
- (id)copyFileToLocalFolder:(id)arg1 error:(id *)arg2;
- (id)fileURL;
- (void)updateAttachmentAndMarkForUpload;
- (void)deleteFileThumbnails;
- (void)prepareForDeletion;
- (void)permanentlyDelete;

@end

@interface SFDetachedNoteEditorWindowController : NSWindowController <SFNoteEditorViewControllerDelegate, NSWindowDelegate, SFNoteInfoViewControllerDelegate, NSSharingServiceDelegate, SFNoteTextAttachmentConfigurator, NSSharingServicePickerDelegate>
{
    BOOL _windowLocked;
    BOOL _canSaveFrameInformation;
    BOOL _windowWasFloating;
    id <SFDetachedNoteEditorWindowControllerDelegate> _delegate;
    SFNote *_note;
    NSWindowController *_noteInfoWindowController;
    SFNoteInfoViewController *_infoViewController;
    NSString *_noteUUID;
    SFApplicationLockViewController *_lockViewController;
}

@property(retain) SFApplicationLockViewController *lockViewController; // @synthesize lockViewController=_lockViewController;
@property(retain, nonatomic) NSString *noteUUID; // @synthesize noteUUID=_noteUUID;
@property(nonatomic) BOOL windowWasFloating; // @synthesize windowWasFloating=_windowWasFloating;
@property(nonatomic) BOOL canSaveFrameInformation; // @synthesize canSaveFrameInformation=_canSaveFrameInformation;
@property __weak SFNoteInfoViewController *infoViewController; // @synthesize infoViewController=_infoViewController;
@property(retain, nonatomic) NSWindowController *noteInfoWindowController; // @synthesize noteInfoWindowController=_noteInfoWindowController;
@property(nonatomic, getter=isWindowLocked) BOOL windowLocked; // @synthesize windowLocked=_windowLocked;
@property(retain, nonatomic) SFNote *note; // @synthesize note=_note;
@property(nonatomic) __weak id <SFDetachedNoteEditorWindowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)isFullScreen;
- (void)generateToken:(id)arg1;
- (void)copyToken:(id)arg1;
- (BOOL)noteEditorViewController:(id)arg1 linkClicked:(id)arg2;
- (void)noteEditorViewControllerDidEndEditing:(id)arg1;
- (void)noteEditorViewController:(id)arg1 searchUIDidChange:(BOOL)arg2;
- (void)noteEditorViewController:(id)arg1 mouseMoved:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didEditNote:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didChangeSelection:(id)arg2;
- (void)noteEditorViewController:(id)arg1 didSaveNote:(id)arg2;
- (void)displayWindowStandardButtons:(BOOL)arg1 animated:(BOOL)arg2;
- (void)noteInfoViewController:(id)arg1 didCloseDetachedWindowController:(id)arg2;
- (void)noteInfoViewController:(id)arg1 didDetachWindowController:(id)arg2;
- (void)updateInfoPanelTextInfo;
- (void)openInfoPanel:(id)arg1;
- (void)printNote:(id)arg1;
- (void)configureTextAttachment:(id)arg1 forTextStyler:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (void)menuNeedsUpdate:(id)arg1;
- (id)shareItemsForNotes:(id)arg1;
- (void)performShareMenuAction:(id)arg1;
- (void)newNoteWithSelection:(id)arg1;
- (void)copyNoteIDs:(id)arg1;
- (void)copyLinkToNotes:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleFloatOnTop:(id)arg1;
- (void)exportNotes:(id)arg1;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (void)shareNotes:(id)arg1;
- (id)noteEditorViewController;
- (void)dealloc;
- (BOOL)isWindowFloating;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)cleanUpAndCloseWindow;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ISO8601DateFormatter : NSFormatter
{
    NSString *lastUsedFormatString;
    NSDateFormatter *unparsingFormatter;
    NSCalendar *parsingCalendar;
    NSCalendar *unparsingCalendar;
    NSTimeZone *defaultTimeZone;
    unsigned long long format;
    unsigned short timeSeparator;
    unsigned short timeZoneSeparator;
    BOOL includeTime;
    BOOL useMillisecondPrecision;
    BOOL parsesStrictly;
}

+ (void)purgeGlobalCaches;
+ (void)initialize;
@property unsigned short timeZoneSeparator; // @synthesize timeZoneSeparator;
@property unsigned short timeSeparator; // @synthesize timeSeparator;
@property BOOL useMillisecondPrecision; // @synthesize useMillisecondPrecision;
@property BOOL includeTime; // @synthesize includeTime;
@property unsigned long long format; // @synthesize format;
@property BOOL parsesStrictly; // @synthesize parsesStrictly;
@property(retain, nonatomic) NSTimeZone *defaultTimeZone; // @synthesize defaultTimeZone;
- (id)weekDateStringForDate:(id)arg1 timeZone:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromDate:(id)arg1 formatString:(id)arg2 timeZone:(id)arg3;
- (id)stringFromDate:(id)arg1 timeZone:(id)arg2;
- (id)stringFromDate:(id)arg1;
- (id)replaceColonsInString:(id)arg1 withTimeSeparator:(unsigned short)arg2;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)dateFromString:(id)arg1 timeZone:(out id *)arg2 range:(out struct _NSRange *)arg3;
- (id)dateFromString:(id)arg1 timeZone:(out id *)arg2;
- (id)dateFromString:(id)arg1;
- (id)dateComponentsFromString:(id)arg1 timeZone:(out id *)arg2 range:(out struct _NSRange *)arg3 fractionOfSecond:(out double *)arg4;
- (id)dateComponentsFromString:(id)arg1 timeZone:(out id *)arg2;
- (id)dateComponentsFromString:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)makeCalendarWithDesiredConfiguration;

@end

@interface SFItalicDataDetector : NSRegularExpression
{
    struct {
        char shouldMatchBeginMarkerInRange;
        char shouldMatchEndMarkerInRange;
    } _delegateImplementation;
    id <SFItalicDataDetectorDelegate> _delegate;
    NSArray *_beginMarkers;
    NSArray *_endMarkers;
}

@property(nonatomic) CDStruct_7ddbbeae delegateImplementation; // @synthesize delegateImplementation=_delegateImplementation;
@property(copy) NSArray *endMarkers; // @synthesize endMarkers=_endMarkers;
@property(copy) NSArray *beginMarkers; // @synthesize beginMarkers=_beginMarkers;
@property(nonatomic) __weak id <SFItalicDataDetectorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)hasWhiteSpaceAfterIndex:(unsigned long long)arg1 inScanner:(id)arg2;
- (BOOL)hasWhiteSpaceBeforeIndex:(unsigned long long)arg1 inScanner:(id)arg2;
- (BOOL)hasNumberAfterIndex:(unsigned long long)arg1 inScanner:(id)arg2;
- (BOOL)hasNumberBeforeIndex:(unsigned long long)arg1 inScanner:(id)arg2;
- (BOOL)hasMemberOfCharacterSet:(id)arg1 afterIndex:(unsigned long long)arg2 inScanner:(id)arg3;
- (BOOL)hasMemberOfCharacterSet:(id)arg1 beforeIndex:(unsigned long long)arg2 inScanner:(id)arg3;
- (struct _NSRange)parseEndMarker:(id)arg1 inScanner:(id)arg2;
- (struct _NSRange)parseBeginMarker:(id)arg1 inScanner:(id)arg2;
- (void)ranges:(struct _NSRange *)arg1 fromBeginRange:(struct _NSRange)arg2 endRange:(struct _NSRange)arg3;
- (id)firstMatchInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (unsigned long long)numberOfMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)matchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfFirstMatchInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (void)enumerateMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface SFNoteInfoLastEditingDevice : NSObject <SFNoteInfoItem>
{
    NSArray *_notes;
    NSString *_headerString;
    NSString *_valueString;
    NSColor *_textColor;
    NSColor *_labelColor;
}

@property(retain) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
@property(copy) NSString *valueString; // @synthesize valueString=_valueString;
@property(copy) NSString *headerString; // @synthesize headerString=_headerString;
@property __weak NSArray *notes; // @synthesize notes=_notes;
- (void).cxx_destruct;
- (double)cellHeight;
- (id)identifier;
- (id)initWithNotes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFThemeManager : NSObject
{
    SFTheme *_currentTheme;
    NSCache *_themeCache;
    NSMutableSet *_registeredStylableObjects;
}

@property(retain) NSMutableSet *registeredStylableObjects; // @synthesize registeredStylableObjects=_registeredStylableObjects;
@property(retain) NSCache *themeCache; // @synthesize themeCache=_themeCache;
@property(retain) SFTheme *currentTheme; // @synthesize currentTheme=_currentTheme;
- (void).cxx_destruct;
- (id)numberForKey:(id)arg1;
- (id)fontForKey:(id)arg1 size:(double)arg2;
- (id)colorForKey:(id)arg1;
- (void)styleRegisteredStylableObjects;
- (void)unregisterStylableObject:(id)arg1;
- (void)registerStylableObject:(id)arg1;
- (void)emptyCache;
- (void)addItemFromTheme:(id)arg1 updateStylableObjects:(BOOL)arg2;
- (void)addItemFromTheme:(id)arg1;
- (void)loadTheme:(id)arg1 updateStylableObjects:(BOOL)arg2;
- (void)loadTheme:(id)arg1;
- (id)init;

@end

@interface SFOverlayScroller : NSScroller
{
    NSColor *_backgroundColor;
    NSColor *_separatorColor;
}

+ (BOOL)isCompatibleWithOverlayScrollers;
@property(copy) NSColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)drawKnobSlotInRect:(struct CGRect)arg1 highlight:(BOOL)arg2;
- (void)drawKnob;

@end

@interface SFDOCXWriter : NSObject
{
    NSData *_documentXMLData;
    NSData *_numberingXMLData;
    NSData *_contentXMLData;
    NSData *_relsXMLData;
    NSArray *_images;
    NSMutableArray *_paragraphs;
    NSAttributedString *_attributedString;
    NSDictionary *_listDictionary;
    NSDictionary *_listNumbering;
    id <SFDOCXDocumentSourceDelegate> _sourceDelegate;
}

@property(retain, nonatomic) id <SFDOCXDocumentSourceDelegate> sourceDelegate; // @synthesize sourceDelegate=_sourceDelegate;
@property(retain, nonatomic) NSDictionary *listNumbering; // @synthesize listNumbering=_listNumbering;
@property(retain, nonatomic) NSDictionary *listDictionary; // @synthesize listDictionary=_listDictionary;
@property(retain, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(retain, nonatomic) NSMutableArray *paragraphs; // @synthesize paragraphs=_paragraphs;
@property(retain, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly) NSData *relsXMLData; // @synthesize relsXMLData=_relsXMLData;
@property(readonly) NSData *contentXMLData; // @synthesize contentXMLData=_contentXMLData;
@property(readonly) NSData *numberingXMLData; // @synthesize numberingXMLData=_numberingXMLData;
@property(readonly) NSData *documentXMLData; // @synthesize documentXMLData=_documentXMLData;
- (void).cxx_destruct;
- (id)buildContentType;
- (id)buildNumbering;
- (id)buildDocumentRelationshipsWithImages:(id)arg1;
- (id)imageElementWithID:(long long)arg1 andSize:(struct CGSize)arg2;
- (void)addStyleTopPr:(id)arg1 withFont:(id)arg2 andListElement:(id)arg3 isQuote:(BOOL)arg4 isHeader:(BOOL)arg5;
- (id)getFontColorElement:(id)arg1;
- (id)getStrikeElement;
- (id)getUnderlineElement;
- (id)getItalicForFont:(id)arg1;
- (id)getBoldForFont:(id)arg1;
- (id)getFontSizeElement:(id)arg1;
- (id)getAlignmentElement:(id)arg1;
- (id)getLinkEndCharElement;
- (id)getLinkBeginCharElement;
- (id)getLinkSeparateElement;
- (id)getLinkSpacerElement;
- (id)getLinkElement:(id)arg1;
- (id)buildSectPrElement;
- (id)buildBody;
- (id)buildRootElement;
- (id)splitStringByNewLine:(id)arg1;
- (void)splitAttributedStringIntoParagraph;
- (id)buildDocument;
- (id)initWithAttributedString:(id)arg1 images:(id)arg2 andDelegate:(id)arg3;

@end

@interface SFNoteFileServerDataID : NSManagedObjectID
{
}

@end

@interface _SFNoteFileServerData : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) SFNoteFileServerDataID *objectID;

// Remaining properties
@property(retain, nonatomic) SFNoteFile *file; // @dynamic file;
@property(retain, nonatomic) NSData *systemFields; // @dynamic systemFields;

@end

@interface SFNoteFileServerDataAttributes : NSObject
{
}

+ (id)systemFields;

@end

@interface SFNoteFileServerDataRelationships : NSObject
{
}

+ (id)file;

@end

@interface SFDetachedWindowRestoration : NSObject
{
}

+ (void)encodeRestorableState:(id)arg1 detachedNoteEditorWindowController:(id)arg2;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface SFEPubPage : NSObject
{
    NSString *_html;
    NSString *_title;
    NSArray *_chapters;
}

@property(retain) NSArray *chapters; // @synthesize chapters=_chapters;
@property(retain) NSString *title; // @synthesize title=_title;
@property(retain) NSString *html; // @synthesize html=_html;
- (void).cxx_destruct;
- (id)nameWithCounter:(unsigned long long)arg1;
- (id)fileNameWithCounter:(unsigned long long)arg1;
- (id)pageContent;
- (id)initWithHTML:(id)arg1 title:(id)arg2;

@end

@interface SFSidebarGroupCellView : NSTableCellView
{
}

- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFInternalChanges : _SFInternalChanges
{
}

+ (id)newExternalChangeForChangeType:(id)arg1 modelObject:(id)arg2 itemChangeType:(unsigned long long)arg3;
+ (void)deleteAllInternalChangesForType:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)internalChangesForChangeType:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)itemManagedObjectID;

@end

@interface MSCommonSchemaLog : MSAbstractLog <MSSerializableObject, MSModel>
{
    NSString *_ver;
    NSString *_name;
    double _popSample;
    NSString *_iKey;
    long long _flags;
    NSString *_cV;
    MSCSExtensions *_ext;
    MSCSData *_data;
}

@property(retain, nonatomic) MSCSData *data; // @synthesize data=_data;
@property(retain, nonatomic) MSCSExtensions *ext; // @synthesize ext=_ext;
@property(copy, nonatomic) NSString *cV; // @synthesize cV=_cV;
@property(nonatomic) long long flags; // @synthesize flags=_flags;
@property(copy, nonatomic) NSString *iKey; // @synthesize iKey=_iKey;
@property(nonatomic) double popSample; // @synthesize popSample=_popSample;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *ver; // @synthesize ver=_ver;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSHttpCall : NSObject
{
    BOOL _inProgress;
    int _retryCount;
    NSData *_data;
    NSDictionary *_headers;
    NSURL *_url;
    NSString *_method;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_source> *_timerSource;
    NSArray *_retryIntervals;
}

@property(getter=isInProgress) BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(retain, nonatomic) NSArray *retryIntervals; // @synthesize retryIntervals=_retryIntervals;
@property(nonatomic) int retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (unsigned int)delayForRetryCount:(unsigned long long)arg1;
- (void)startRetryTimerWithStatusCode:(unsigned long long)arg1 retryAfter:(id)arg2 event:(CDUnknownBlockType)arg3;
- (void)resetRetry;
- (BOOL)hasReachedMaxRetries;
- (id)initWithUrl:(id)arg1 method:(id)arg2 headers:(id)arg3 data:(id)arg4 retryIntervals:(id)arg5 compressionEnabled:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7;

@end

@interface MSTypedProperty : NSObject <MSSerializableObject>
{
    NSString *_type;
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSOneCollectorIngestion : MSHttpIngestion
{
}

- (id)obfuscateTickets:(id)arg1;
- (id)obfuscateTargetTokens:(id)arg1;
- (id)obfuscateHeaderValue:(id)arg1 forKey:(id)arg2;
- (id)createRequest:(id)arg1 eTag:(id)arg2 authToken:(id)arg3;
- (void)sendAsync:(id)arg1 authToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)initWithBaseUrl:(id)arg1;

@end

@interface MSDateTimeTypedProperty : MSTypedProperty
{
    NSDate *_value;
}

@property(retain, nonatomic) NSDate *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSChannelUnitConfiguration : NSObject
{
    NSString *_groupId;
    long long _priority;
    unsigned long long _batchSizeLimit;
    unsigned long long _pendingBatchesLimit;
    unsigned long long _flushInterval;
}

@property(readonly, nonatomic) unsigned long long flushInterval; // @synthesize flushInterval=_flushInterval;
@property(readonly, nonatomic) unsigned long long pendingBatchesLimit; // @synthesize pendingBatchesLimit=_pendingBatchesLimit;
@property(readonly, nonatomic) unsigned long long batchSizeLimit; // @synthesize batchSizeLimit=_batchSizeLimit;
@property(readonly, nonatomic) long long priority; // @synthesize priority=_priority;
@property(readonly, copy, nonatomic) NSString *groupId; // @synthesize groupId=_groupId;
- (void).cxx_destruct;
- (id)initDefaultConfigurationWithGroupId:(id)arg1;
- (id)initDefaultConfigurationWithGroupId:(id)arg1 flushInterval:(unsigned long long)arg2;
- (id)initWithGroupId:(id)arg1 priority:(long long)arg2 flushInterval:(unsigned long long)arg3 batchSizeLimit:(unsigned long long)arg4 pendingBatchesLimit:(unsigned long long)arg5;

@end

@interface MSHistoryInfo : NSObject <NSCoding>
{
    NSDate *_timestamp;
}

@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(id)arg1;

@end

@interface MSAppDelegateForwarder : MSDelegateForwarder <MSCustomApplicationDelegate>
{
}

+ (void)resetSharedInstance;
+ (id)sharedInstance;
+ (void)load;
- (void)custom_setDelegate:(id)arg1;
- (long long *)swizzlingOnceToken;
- (Class)originalClassForSetDelegate;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSChannelUnitDefault : NSObject <MSChannelUnitProtocol, MSIngestionDelegate, MSAuthTokenContextDelegate>
{
    BOOL _availableBatchFromStorage;
    BOOL _pendingBatchQueueFull;
    BOOL _enabled;
    BOOL _paused;
    BOOL _discardLogs;
    MSChannelUnitConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_logsDispatchQueue;
    NSHashTable *_delegates;
    id <MSIngestionProtocol> _ingestion;
    id <MSStorage> _storage;
    NSObject<OS_dispatch_source> *_timerSource;
    unsigned long long _itemsCount;
    NSMutableArray *_pendingBatchIds;
    NSHashTable *_pausedIdentifyingObjects;
    NSMutableSet *_pausedTargetKeys;
}

@property(retain, nonatomic) NSMutableSet *pausedTargetKeys; // @synthesize pausedTargetKeys=_pausedTargetKeys;
@property(retain, nonatomic) NSHashTable *pausedIdentifyingObjects; // @synthesize pausedIdentifyingObjects=_pausedIdentifyingObjects;
@property(nonatomic) BOOL discardLogs; // @synthesize discardLogs=_discardLogs;
@property(nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) BOOL pendingBatchQueueFull; // @synthesize pendingBatchQueueFull=_pendingBatchQueueFull;
@property(nonatomic) BOOL availableBatchFromStorage; // @synthesize availableBatchFromStorage=_availableBatchFromStorage;
@property(retain, nonatomic) NSMutableArray *pendingBatchIds; // @synthesize pendingBatchIds=_pendingBatchIds;
@property(nonatomic) unsigned long long itemsCount; // @synthesize itemsCount=_itemsCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(retain, nonatomic) id <MSStorage> storage; // @synthesize storage=_storage;
@property(retain, nonatomic) id <MSIngestionProtocol> ingestion; // @synthesize ingestion=_ingestion;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logsDispatchQueue; // @synthesize logsDispatchQueue=_logsDispatchQueue;
@property(retain, nonatomic) MSChannelUnitConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)notifyFailureBeforeSendingForItem:(id)arg1 withError:(id)arg2;
- (void)enumerateDelegatesForSelector:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)deleteAllLogsWithErrorSync:(id)arg1;
- (void)deleteAllLogsWithError:(id)arg1;
- (void)resumeSendingLogsWithToken:(id)arg1;
- (void)pauseSendingLogsWithToken:(id)arg1;
- (void)resumeWithIdentifyingObjectSync:(id)arg1;
- (void)pauseWithIdentifyingObjectSync:(id)arg1;
- (void)resumeWithIdentifyingObject:(id)arg1;
- (void)pauseWithIdentifyingObject:(id)arg1;
- (void)setEnabled:(BOOL)arg1 andDeleteDataOnDisabled:(BOOL)arg2;
- (void)resetTimer;
- (id)oldestPendingLogTimestampKey;
- (unsigned long long)resolveFlushInterval;
- (void)startTimer:(unsigned long long)arg1;
- (void)checkPendingLogs;
- (void)flushQueue;
- (void)flushNextBatchFromQueueForTokenArray:(id)arg1 withTokenIndex:(unsigned long long)arg2;
- (void)flushQueueForTokenArray:(id)arg1 withTokenIndex:(unsigned long long)arg2;
- (void)sendLogContainer:(id)arg1 withAuthTokenFromArray:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)enqueueItem:(id)arg1 flags:(unsigned long long)arg2;
- (void)authTokenContext:(id)arg1 didUpdateAuthToken:(id)arg2;
- (void)ingestionDidReceiveFatalError:(id)arg1;
- (void)ingestionDidResume:(id)arg1;
- (void)ingestionDidPause:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (id)initWithIngestion:(id)arg1 storage:(id)arg2 configuration:(id)arg3 logsDispatchQueue:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSServiceAbstract : NSObject <MSServiceCommon, MSService>
{
    BOOL _startedFromApplication;
    BOOL _started;
    id <MSChannelGroupProtocol> _channelGroup;
    id <MSChannelUnitProtocol> _channelUnit;
    NSString *_appSecret;
    NSString *_defaultTransmissionTargetToken;
    NSString *_isEnabledKey;
}

+ (BOOL)isEnabled;
+ (void)setEnabled:(BOOL)arg1;
@property(nonatomic, getter=isStarted) BOOL started; // @synthesize started=_started;
@property(readonly, copy, nonatomic) NSString *isEnabledKey; // @synthesize isEnabledKey=_isEnabledKey;
@property(nonatomic) BOOL startedFromApplication; // @synthesize startedFromApplication=_startedFromApplication;
@property(retain, nonatomic) NSString *defaultTransmissionTargetToken; // @synthesize defaultTransmissionTargetToken=_defaultTransmissionTargetToken;
@property(retain, nonatomic) NSString *appSecret; // @synthesize appSecret=_appSecret;
@property(retain, nonatomic) id <MSChannelUnitProtocol> channelUnit; // @synthesize channelUnit=_channelUnit;
@property(retain, nonatomic) id <MSChannelGroupProtocol> channelGroup; // @synthesize channelGroup=_channelGroup;
- (void).cxx_destruct;
- (void)updateConfigurationWithAppSecret:(id)arg1 transmissionTargetToken:(id)arg2;
- (void)startWithChannelGroup:(id)arg1 appSecret:(id)arg2 transmissionTargetToken:(id)arg3 fromApplication:(BOOL)arg4;
- (BOOL)isStartedFromApplication;
- (BOOL)isAppSecretRequired;
@property(readonly, nonatomic) long long initializationPriority;
@property(readonly, nonatomic, getter=isAvailable) BOOL available;
- (BOOL)canBeUsed;
- (void)applyEnabledState:(BOOL)arg1;
@property(nonatomic, getter=isEnabled) BOOL enabled;
- (id)init;

// Remaining properties
@property(retain, nonatomic) MSChannelUnitConfiguration *channelUnitConfiguration;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *groupId;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSNetExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_provider;
}

@property(copy, nonatomic) NSString *provider; // @synthesize provider=_provider;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSOrderedDictionary : NSMutableDictionary
{
    NSMutableArray *_order;
    NSMutableDictionary *_dictionary;
}

@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(retain, nonatomic) NSMutableArray *order; // @synthesize order=_order;
- (void).cxx_destruct;
- (BOOL)isEqualToDictionary:(id)arg1;
- (id)mutableCopy;
- (void)removeAllObjects;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface MSMetadataExtension : NSObject <MSSerializableObject, MSModel>
{
    NSDictionary *_metadata;
}

@property(copy) NSDictionary *metadata; // @synthesize metadata=_metadata;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSStartServiceLog : MSAbstractLog <MSNoAutoAssignSessionIdLog>
{
    NSArray *_services;
}

@property(retain, nonatomic) NSArray *services; // @synthesize services=_services;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)serializeToDictionary;
- (BOOL)isEqual:(id)arg1;
- (id)init;

@end

@interface MSAuthTokenInfo : NSObject <NSCoding>
{
    NSString *_accountId;
    NSString *_authToken;
    NSDate *_startTime;
    NSDate *_expiresOn;
}

@property(readonly, nonatomic) NSDate *expiresOn; // @synthesize expiresOn=_expiresOn;
@property(readonly, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property(readonly, copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(readonly, copy, nonatomic) NSString *accountId; // @synthesize accountId=_accountId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAuthToken:(id)arg1 accountId:(id)arg2 startTime:(id)arg3 expiresOn:(id)arg4;

@end

@interface MSHttpUtil : NSObject
{
}

+ (id)hideAuthToken:(id)arg1;
+ (id)hideSecret:(id)arg1;
+ (BOOL)isSSLConnectionError:(id)arg1;
+ (BOOL)isNoInternetConnectionError:(id)arg1;
+ (BOOL)isSuccessStatusCode:(long long)arg1;
+ (BOOL)isRecoverableError:(long long)arg1;

@end

@interface MSBooleanTypedProperty : MSTypedProperty
{
    BOOL _value;
}

@property(nonatomic) BOOL value; // @synthesize value=_value;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSWrapperLogger : NSObject
{
}

+ (void)MSWrapperLog:(CDUnknownBlockType)arg1 tag:(id)arg2 level:(unsigned long long)arg3;

@end

@interface MSOneCollectorChannelDelegate : NSObject <MSChannelDelegate>
{
    NSMutableDictionary *_oneCollectorChannels;
    MSOneCollectorIngestion *_oneCollectorIngestion;
    NSString *_baseUrl;
    NSMutableDictionary *_epochsAndSeqsByIKey;
    NSUUID *_installId;
}

@property(retain, nonatomic) NSUUID *installId; // @synthesize installId=_installId;
@property(retain, nonatomic) NSMutableDictionary *epochsAndSeqsByIKey; // @synthesize epochsAndSeqsByIKey=_epochsAndSeqsByIKey;
@property(copy, nonatomic) NSString *baseUrl; // @synthesize baseUrl=_baseUrl;
@property(retain, nonatomic) MSOneCollectorIngestion *oneCollectorIngestion; // @synthesize oneCollectorIngestion=_oneCollectorIngestion;
@property(retain, nonatomic) NSMutableDictionary *oneCollectorChannels; // @synthesize oneCollectorChannels=_oneCollectorChannels;
- (void).cxx_destruct;
- (void)setLogUrl:(id)arg1;
- (BOOL)validateLogName:(id)arg1;
- (BOOL)validateLog:(id)arg1;
- (BOOL)shouldSendLogToOneCollector:(id)arg1;
- (BOOL)isOneCollectorGroup:(id)arg1;
- (void)channel:(id)arg1 didResumeWithIdentifyingObject:(id)arg2;
- (void)channel:(id)arg1 didPauseWithIdentifyingObject:(id)arg2;
- (void)channel:(id)arg1 didSetEnabled:(BOOL)arg2 andDeleteDataOnDisabled:(BOOL)arg3;
- (BOOL)channelUnit:(id)arg1 shouldFilterLog:(id)arg2;
- (void)channel:(id)arg1 didPrepareLog:(id)arg2 internalId:(id)arg3 flags:(unsigned long long)arg4;
- (void)channel:(id)arg1 prepareLog:(id)arg2;
- (void)channelGroup:(id)arg1 didAddChannelUnit:(id)arg2;
- (id)initWithInstallId:(id)arg1 baseUrl:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSHttpClient : NSObject <MSHttpClientProtocol>
{
    BOOL _paused;
    BOOL _enabled;
    BOOL _compressionEnabled;
    NSURLSession *_session;
    MS_Reachability *_reachability;
    NSMutableSet *_pendingCalls;
    NSArray *_retryIntervals;
    NSURLSessionConfiguration *_sessionConfiguration;
}

@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic, getter=isCompressionEnabled) BOOL compressionEnabled; // @synthesize compressionEnabled=_compressionEnabled;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property(retain, nonatomic) NSArray *retryIntervals; // @synthesize retryIntervals=_retryIntervals;
@property(retain, nonatomic) NSMutableSet *pendingCalls; // @synthesize pendingCalls=_pendingCalls;
@property(retain, nonatomic) MS_Reachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (void)dealloc;
- (id)prettyPrintHeaders:(id)arg1;
- (id)obfuscateHeaderValue:(id)arg1 forKey:(id)arg2;
- (void)resume;
- (void)pause;
- (void)networkStateChanged:(id)arg1;
- (void)requestCompletedWithHttpCall:(id)arg1 data:(id)arg2 response:(id)arg3 error:(id)arg4;
- (void)sendCallAsync:(id)arg1;
- (void)sendAsync:(id)arg1 method:(id)arg2 headers:(id)arg3 data:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)initWithMaxHttpConnectionsPerHost:(id)arg1 retryIntervals:(id)arg2 reachability:(id)arg3 compressionEnabled:(BOOL)arg4;
- (id)initWithMaxHttpConnectionsPerHost:(long long)arg1 compressionEnabled:(BOOL)arg2;
- (id)initWithCompressionEnabled:(BOOL)arg1;
- (id)initNoRetriesWithCompressionEnabled:(BOOL)arg1;
- (id)init;

@end

@interface MSTicketCache : NSObject
{
    NSMutableDictionary *_tickets;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *tickets; // @synthesize tickets=_tickets;
- (void).cxx_destruct;
- (void)clearCache;
- (void)setTicket:(id)arg1 forKey:(id)arg2;
- (id)ticketFor:(id)arg1;
- (id)init;

@end

@interface MSSessionHistoryInfo : MSHistoryInfo
{
    NSString *_sessionId;
}

@property(copy, nonatomic) NSString *sessionId; // @synthesize sessionId=_sessionId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(id)arg1 andSessionId:(id)arg2;

@end

@interface MSDelegateForwarder : NSObject
{
    BOOL _enabled;
    NSHashTable *_delegates;
    CDUnknownFunctionPointerType _originalSetDelegateImp;
    NSMutableDictionary *_originalImplementations;
    NSDictionary *_deprecatedSelectors;
    NSMutableSet *_selectorsToSwizzle;
}

+ (void)flushTraceBuffer;
+ (id)enabledKey;
+ (void)resetSharedInstance;
+ (id)sharedInstance;
+ (void)load;
@property(readonly, nonatomic) NSMutableSet *selectorsToSwizzle; // @synthesize selectorsToSwizzle=_selectorsToSwizzle;
@property(retain, nonatomic) NSDictionary *deprecatedSelectors; // @synthesize deprecatedSelectors=_deprecatedSelectors;
@property(readonly, nonatomic) NSMutableDictionary *originalImplementations; // @synthesize originalImplementations=_originalImplementations;
@property(nonatomic) CDUnknownFunctionPointerType originalSetDelegateImp; // @synthesize originalSetDelegateImp=_originalSetDelegateImp;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
- (void).cxx_destruct;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
- (void)setEnabledFromPlistForKey:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (CDUnknownFunctionPointerType)swizzleOriginalSelector:(SEL)arg1 withCustomSelector:(SEL)arg2 originalClass:(Class)arg3;
- (void)swizzleOriginalDelegate:(id)arg1;
- (void)addDelegateSelectorToSwizzle:(SEL)arg1;
- (void)addTraceBlock:(CDUnknownBlockType)arg1;
- (void)custom_setDelegate:(id)arg1;
- (long long *)swizzlingOnceToken;
- (Class)originalClassForSetDelegate;
- (id)init;

@end

@interface MSProtocolExtension : NSObject <MSSerializableObject, MSModel>
{
    NSArray *_ticketKeys;
    NSString *_devMake;
    NSString *_devModel;
}

@property(copy, nonatomic) NSString *devModel; // @synthesize devModel=_devModel;
@property(copy, nonatomic) NSString *devMake; // @synthesize devMake=_devMake;
@property(retain, nonatomic) NSArray *ticketKeys; // @synthesize ticketKeys=_ticketKeys;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSDeviceTracker : NSObject
{
    MSDevice *_device;
    NSMutableArray *_deviceHistory;
}

+ (void)refreshDeviceNextTime;
+ (void)resetSharedInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *deviceHistory; // @synthesize deviceHistory=_deviceHistory;
@property(retain, nonatomic) MSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (id)appNamespace:(id)arg1;
- (id)appBuild:(id)arg1;
- (id)appVersion:(id)arg1;
- (id)screenSize;
- (id)timeZoneOffset:(id)arg1;
- (id)locale:(id)arg1;
- (id)osBuild;
- (id)osVersion;
- (id)osName;
- (id)deviceModel;
- (void)clearDevices;
- (id)deviceForTimestamp:(id)arg1;
- (void)refreshWrapperSdk:(id)arg1;
- (id)updatedDevice;
- (void)setCountryCode:(id)arg1;
- (void)setWrapperSdk:(id)arg1;
- (id)init;

@end

@interface MSKeychainUtil : NSObject
{
}

+ (int)secItemCopyMatchingQuery:(id)arg1 result:(const void **)arg2;
+ (int)addSecItem:(id)arg1;
+ (int)deleteSecItem:(id)arg1;
+ (id)generateItem:(id)arg1 withServiceName:(id)arg2;
+ (BOOL)clear;
+ (id)stringForKey:(id)arg1 statusCode:(int *)arg2;
+ (id)stringForKey:(id)arg1 withServiceName:(id)arg2 statusCode:(int *)arg3;
+ (id)deleteStringForKey:(id)arg1;
+ (id)deleteStringForKey:(id)arg1 withServiceName:(id)arg2;
+ (BOOL)storeString:(id)arg1 forKey:(id)arg2;
+ (BOOL)storeString:(id)arg1 forKey:(id)arg2 withServiceName:(id)arg3;

@end

@interface MSChannelGroupDefault : NSObject <MSChannelDelegate, MSChannelGroupProtocol>
{
    NSHashTable *_delegates;
    MSAppCenterIngestion *_ingestion;
    id <MSStorage> _storage;
    NSObject<OS_dispatch_queue> *_logsDispatchQueue;
    NSMutableArray *_channels;
}

@property(retain, nonatomic) NSMutableArray *channels; // @synthesize channels=_channels;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logsDispatchQueue; // @synthesize logsDispatchQueue=_logsDispatchQueue;
@property(retain, nonatomic) id <MSStorage> storage; // @synthesize storage=_storage;
@property(retain, nonatomic) MSAppCenterIngestion *ingestion; // @synthesize ingestion=_ingestion;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
- (void).cxx_destruct;
- (void)setMaxStorageSize:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setAppSecret:(id)arg1;
- (void)setLogUrl:(id)arg1;
- (void)resumeWithIdentifyingObject:(id)arg1;
- (void)pauseWithIdentifyingObject:(id)arg1;
- (void)setEnabled:(BOOL)arg1 andDeleteDataOnDisabled:(BOOL)arg2;
- (void)channel:(id)arg1 didResumeWithIdentifyingObject:(id)arg2;
- (void)channel:(id)arg1 didPauseWithIdentifyingObject:(id)arg2;
- (BOOL)channelUnit:(id)arg1 shouldFilterLog:(id)arg2;
- (void)channel:(id)arg1 didFailSendingLog:(id)arg2 withError:(id)arg3;
- (void)channel:(id)arg1 didSetEnabled:(BOOL)arg2 andDeleteDataOnDisabled:(BOOL)arg3;
- (void)channel:(id)arg1 didSucceedSendingLog:(id)arg2;
- (void)channel:(id)arg1 willSendLog:(id)arg2;
- (void)channel:(id)arg1 didCompleteEnqueueingLog:(id)arg2 internalId:(id)arg3;
- (void)channel:(id)arg1 didPrepareLog:(id)arg2 internalId:(id)arg3 flags:(unsigned long long)arg4;
- (void)channel:(id)arg1 prepareLog:(id)arg2;
- (void)enumerateDelegatesForSelector:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (id)channelUnitForGroupId:(id)arg1;
- (id)addChannelUnitWithConfiguration:(id)arg1 withIngestion:(id)arg2;
- (id)addChannelUnitWithConfiguration:(id)arg1;
- (id)initWithIngestion:(id)arg1;
- (id)initWithInstallId:(id)arg1 logUrl:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCustomPropertiesLog : MSAbstractLog
{
    NSString *_type;
    NSDictionary *_properties;
}

+ (id)serializeProperty:(id)arg1;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void)setType:(id)arg1;
- (id)type;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)serializeToDictionary;
- (BOOL)isValid;
- (BOOL)isEqual:(id)arg1;
- (id)init;

@end

@interface MSCSExtensions : NSObject <MSSerializableObject, MSModel>
{
    MSMetadataExtension *_metadataExt;
    MSProtocolExtension *_protocolExt;
    MSUserExtension *_userExt;
    MSDeviceExtension *_deviceExt;
    MSOSExtension *_osExt;
    MSAppExtension *_appExt;
    MSNetExtension *_netExt;
    MSSDKExtension *_sdkExt;
    MSLocExtension *_locExt;
}

@property(retain, nonatomic) MSLocExtension *locExt; // @synthesize locExt=_locExt;
@property(retain, nonatomic) MSSDKExtension *sdkExt; // @synthesize sdkExt=_sdkExt;
@property(retain, nonatomic) MSNetExtension *netExt; // @synthesize netExt=_netExt;
@property(retain, nonatomic) MSAppExtension *appExt; // @synthesize appExt=_appExt;
@property(retain, nonatomic) MSOSExtension *osExt; // @synthesize osExt=_osExt;
@property(retain, nonatomic) MSDeviceExtension *deviceExt; // @synthesize deviceExt=_deviceExt;
@property(retain, nonatomic) MSUserExtension *userExt; // @synthesize userExt=_userExt;
@property(retain, nonatomic) MSProtocolExtension *protocolExt; // @synthesize protocolExt=_protocolExt;
@property(retain, nonatomic) MSMetadataExtension *metadataExt; // @synthesize metadataExt=_metadataExt;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSCustomProperties : NSObject
{
    NSMutableDictionary *_properties;
}

@property(retain, nonatomic) NSMutableDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (id)propertiesImmutableCopy;
- (BOOL)isValidValue:(id)arg1;
- (BOOL)isValidKey:(id)arg1;
- (id)clearPropertyForKey:(id)arg1;
- (id)setObject:(id)arg1 forKey:(id)arg2;
- (id)setDate:(id)arg1 forKey:(id)arg2;
- (id)setBool:(BOOL)arg1 forKey:(id)arg2;
- (id)setNumber:(id)arg1 forKey:(id)arg2;
- (id)setString:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface MSAuthTokenValidityInfo : NSObject
{
    NSString *_authToken;
    NSDate *_startTime;
    NSDate *_endTime;
}

@property(readonly, nonatomic) NSDate *endTime; // @synthesize endTime=_endTime;
@property(readonly, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
- (void).cxx_destruct;
- (BOOL)expiresSoon;
- (id)initWithAuthToken:(id)arg1 startTime:(id)arg2 endTime:(id)arg3;

@end

@interface MSStringTypedProperty : MSTypedProperty
{
    NSString *_value;
}

@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSLogWithProperties : MSAbstractLog
{
    NSDictionary *_properties;
}

@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;

@end

@interface MSCSEpochAndSeq : NSObject
{
    unsigned long long _seq;
    NSString *_epoch;
}

@property(retain, nonatomic) NSString *epoch; // @synthesize epoch=_epoch;
@property(nonatomic) unsigned long long seq; // @synthesize seq=_seq;
- (void).cxx_destruct;
- (id)initWithEpoch:(id)arg1;

@end

@interface MS_Reachability : NSObject
{
    struct __SCNetworkReachability *_reachabilityRef;
}

+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
@property(nonatomic) struct __SCNetworkReachability *reachabilityRef; // @synthesize reachabilityRef=_reachabilityRef;
- (long long)currentReachabilityStatus;
- (BOOL)connectionRequired;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (void)startNotifier;

@end

@interface MSAppExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_appId;
    NSString *_ver;
    NSString *_name;
    NSString *_locale;
    NSString *_userId;
}

@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *ver; // @synthesize ver=_ver;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSDBStorage : NSObject
{
    NSURL *_dbFileURL;
    long long _maxSizeInBytes;
    long long _pageSize;
}

+ (int)configureSQLite;
+ (int)setMaxPageCount:(long long)arg1 inOpenedDatabase:(void *)arg2;
+ (long long)querySingleValue:(id)arg1 inOpenedDatabase:(void *)arg2;
+ (long long)getMaxPageCountInOpenedDatabase:(void *)arg1;
+ (long long)getPageCountInOpenedDatabase:(void *)arg1;
+ (long long)getPageSizeInOpenedDatabase:(void *)arg1;
+ (struct sqlite3 *)openDatabaseAtFileURL:(id)arg1 withResult:(int *)arg2;
+ (id)executeSelectionQuery:(id)arg1 inOpenedDatabase:(void *)arg2 result:(int *)arg3;
+ (id)executeSelectionQuery:(id)arg1 inOpenedDatabase:(void *)arg2;
+ (int)executeNonSelectionQuery:(id)arg1 inOpenedDatabase:(void *)arg2;
+ (void)enableAutoVacuumInOpenedDatabase:(void *)arg1;
+ (void)setVersion:(unsigned long long)arg1 inOpenedDatabase:(void *)arg2;
+ (unsigned long long)versionInOpenedDatabase:(void *)arg1 result:(int *)arg2;
+ (BOOL)tableExists:(id)arg1 inOpenedDatabase:(void *)arg2 result:(int *)arg3;
+ (BOOL)tableExists:(id)arg1 inOpenedDatabase:(void *)arg2;
+ (id)columnsIndexes:(struct NSDictionary *)arg1;
+ (int)createTablesWithSchema:(struct NSDictionary *)arg1 inOpenedDatabase:(void *)arg2;
+ (id)columnsQueryFromColumnsSchema:(struct NSArray *)arg1;
+ (void)load;
@property(nonatomic) long long pageSize; // @synthesize pageSize=_pageSize;
@property(nonatomic) long long maxSizeInBytes; // @synthesize maxSizeInBytes=_maxSizeInBytes;
@property(retain, nonatomic) NSURL *dbFileURL; // @synthesize dbFileURL=_dbFileURL;
- (void).cxx_destruct;
- (void)setMaxStorageSize:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)migrateDatabase:(void *)arg1 fromVersion:(unsigned long long)arg2;
- (void)customizeDatabase:(void *)arg1;
- (id)executeSelectionQuery:(id)arg1;
- (int)executeNonSelectionQuery:(id)arg1;
- (unsigned long long)countEntriesForTable:(id)arg1 condition:(id)arg2;
- (BOOL)createTable:(id)arg1 columnsSchema:(struct NSArray *)arg2 uniqueColumnsConstraint:(id)arg3;
- (BOOL)createTable:(id)arg1 columnsSchema:(struct NSArray *)arg2;
- (void)dropDatabase;
- (BOOL)dropTable:(id)arg1;
- (int)executeQueryUsingBlock:(CDUnknownBlockType)arg1;
- (int)configureDatabaseWithSchema:(struct NSDictionary *)arg1 version:(unsigned long long)arg2 filename:(id)arg3;
- (id)initWithVersion:(unsigned long long)arg1 filename:(id)arg2;
- (id)initWithSchema:(struct NSDictionary *)arg1 version:(unsigned long long)arg2 filename:(id)arg3;

@end

@interface MSLogContainer : NSObject
{
    NSString *_batchId;
    NSArray *_logs;
}

@property(retain, nonatomic) NSArray *logs; // @synthesize logs=_logs;
@property(copy, nonatomic) NSString *batchId; // @synthesize batchId=_batchId;
- (void).cxx_destruct;
- (BOOL)isValid;
- (id)serializeLogWithPrettyPrinting:(BOOL)arg1;
- (id)serializeLog;
- (id)initWithBatchId:(id)arg1 andLogs:(id)arg2;

@end

@interface MSCompression : NSObject
{
}

+ (id)compressData:(id)arg1;

@end

@interface MSUserExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_localId;
    NSString *_locale;
}

@property(copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(copy, nonatomic) NSString *localId; // @synthesize localId=_localId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSAbstractLog : NSObject <MSLog, MSSerializableObject, MSLogConversion>
{
    NSString *_type;
    NSDate *_timestamp;
    NSString *_sid;
    NSString *_distributionGroupId;
    NSString *_userId;
    MSDevice *_device;
    NSObject *_tag;
    NSSet *_transmissionTargetTokens;
}

@property(retain, nonatomic) NSSet *transmissionTargetTokens; // @synthesize transmissionTargetTokens=_transmissionTargetTokens;
@property(retain, nonatomic) NSObject *tag; // @synthesize tag=_tag;
@property(retain, nonatomic) MSDevice *device; // @synthesize device=_device;
@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(copy, nonatomic) NSString *distributionGroupId; // @synthesize distributionGroupId=_distributionGroupId;
@property(copy, nonatomic) NSString *sid; // @synthesize sid=_sid;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)convertTimeZoneOffsetToISO8601:(long long)arg1;
- (id)combineSDKLibVer:(id)arg1 withVersion:(id)arg2;
- (id)combineOsVersion:(id)arg1 withBuild:(id)arg2;
- (id)toCommonSchemaLogForTargetToken:(id)arg1 flags:(unsigned long long)arg2;
- (id)toCommonSchemaLogsWithFlags:(unsigned long long)arg1;
- (void)addTransmissionTargetToken:(id)arg1;
- (id)serializeLogWithPrettyPrinting:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSessionContext : NSObject
{
    MSSessionHistoryInfo *_currentSessionInfo;
    NSMutableArray *_sessionHistory;
}

+ (void)resetSharedInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *sessionHistory; // @synthesize sessionHistory=_sessionHistory;
@property(retain, nonatomic) MSSessionHistoryInfo *currentSessionInfo; // @synthesize currentSessionInfo=_currentSessionInfo;
- (void).cxx_destruct;
- (void)clearSessionHistoryAndKeepCurrentSession:(BOOL)arg1;
- (id)sessionIdAt:(id)arg1;
- (void)setSessionId:(id)arg1;
- (id)sessionId;
- (id)init;

@end

@interface MSDeviceExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_localId;
}

@property(copy, nonatomic) NSString *localId; // @synthesize localId=_localId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSDeviceHistoryInfo : MSHistoryInfo
{
    MSDevice *_device;
}

@property(retain, nonatomic) MSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(id)arg1 andDevice:(id)arg2;

@end

@interface MSAppCenter : NSObject
{
    BOOL _sdkConfigured;
    BOOL _configuredFromApplication;
    BOOL _enabledStateUpdating;
    BOOL _setMaxStorageSizeHasBeenCalled;
    NSUUID *_installId;
    NSString *_logUrl;
    id <MSChannelUnitProtocol> _channelUnit;
    MSOneCollectorChannelDelegate *_oneCollectorChannelDelegate;
    id <MSChannelGroupProtocol> _channelGroup;
    NSMutableArray *_services;
    NSMutableArray *_startedServiceNames;
    NSString *_appSecret;
    NSString *_defaultTransmissionTargetToken;
    NSNumber *_requestedMaxStorageSizeInBytes;
    CDUnknownBlockType _maxStorageSizeCompletionHandler;
}

+ (void)resetSharedInstance;
+ (void)setCountryCode:(id)arg1;
+ (void)setUserId:(id)arg1;
+ (void)setMaxStorageSize:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)groupId;
+ (id)logTag;
+ (id)sdkVersion;
+ (BOOL)isDebuggerAttached;
+ (void)setCustomProperties:(id)arg1;
+ (void)setWrapperSdk:(id)arg1;
+ (void)setLogHandler:(CDUnknownBlockType)arg1;
+ (void)setLogLevel:(unsigned long long)arg1;
+ (unsigned long long)logLevel;
+ (id)installId;
+ (BOOL)isAppDelegateForwarderEnabled;
+ (BOOL)isEnabled;
+ (void)setEnabled:(BOOL)arg1;
+ (void)setLogUrl:(id)arg1;
+ (BOOL)isRunningInAppCenterTestCloud;
+ (BOOL)isConfigured;
+ (void)startFromLibraryWithServices:(id)arg1;
+ (void)startService:(Class)arg1;
+ (void)startWithServices:(id)arg1;
+ (void)start:(id)arg1 withServices:(id)arg2;
+ (void)configure;
+ (void)configureWithAppSecret:(id)arg1;
+ (id)sharedInstance;
@property BOOL setMaxStorageSizeHasBeenCalled; // @synthesize setMaxStorageSizeHasBeenCalled=_setMaxStorageSizeHasBeenCalled;
@property(copy, nonatomic) CDUnknownBlockType maxStorageSizeCompletionHandler; // @synthesize maxStorageSizeCompletionHandler=_maxStorageSizeCompletionHandler;
@property(nonatomic, getter=isEnabledStateUpdating) BOOL enabledStateUpdating; // @synthesize enabledStateUpdating=_enabledStateUpdating;
@property(nonatomic, getter=isConfiguredFromApplication) BOOL configuredFromApplication; // @synthesize configuredFromApplication=_configuredFromApplication;
@property(nonatomic, getter=isSdkConfigured) BOOL sdkConfigured; // @synthesize sdkConfigured=_sdkConfigured;
@property(retain, nonatomic) NSNumber *requestedMaxStorageSizeInBytes; // @synthesize requestedMaxStorageSizeInBytes=_requestedMaxStorageSizeInBytes;
@property(copy, nonatomic) NSString *defaultTransmissionTargetToken; // @synthesize defaultTransmissionTargetToken=_defaultTransmissionTargetToken;
@property(copy, nonatomic) NSString *appSecret; // @synthesize appSecret=_appSecret;
@property(retain, nonatomic) NSMutableArray *startedServiceNames; // @synthesize startedServiceNames=_startedServiceNames;
@property(retain, nonatomic) NSMutableArray *services; // @synthesize services=_services;
@property(retain, nonatomic) id <MSChannelGroupProtocol> channelGroup; // @synthesize channelGroup=_channelGroup;
@property(retain, nonatomic) MSOneCollectorChannelDelegate *oneCollectorChannelDelegate; // @synthesize oneCollectorChannelDelegate=_oneCollectorChannelDelegate;
@property(retain, nonatomic) id <MSChannelUnitProtocol> channelUnit; // @synthesize channelUnit=_channelUnit;
- (void).cxx_destruct;
- (BOOL)shouldDisable:(id)arg1;
- (void)sendCustomPropertiesLog:(id)arg1;
- (void)sendStartServiceLog:(id)arg1;
- (BOOL)canBeUsed;
@property(readonly, nonatomic) NSUUID *installId; // @synthesize installId=_installId;
- (void)initializeChannelGroup;
- (void)applyPipelineEnabledState:(BOOL)arg1;
@property(nonatomic, getter=isEnabled) BOOL enabled;
- (void)setCustomProperties:(id)arg1;
- (void)setUserId:(id)arg1;
- (void)setMaxStorageSize:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(copy) NSString *logUrl; // @synthesize logUrl=_logUrl;
- (BOOL)startService:(Class)arg1 withAppSecret:(id)arg2 transmissionTargetToken:(id)arg3 fromApplication:(BOOL)arg4;
- (id)sortServices:(id)arg1;
- (void)startServices:(id)arg1 withAppSecret:(id)arg2 transmissionTargetToken:(id)arg3 fromApplication:(BOOL)arg4;
- (void)start:(id)arg1 withServices:(id)arg2 fromApplication:(BOOL)arg3;
- (BOOL)configureWithAppSecret:(id)arg1 transmissionTargetToken:(id)arg2 fromApplication:(BOOL)arg3;
- (id)init;

@end

@interface MSUserDefaults : NSObject
{
}

+ (id)shared;
- (BOOL)updateObject:(id)arg1 forKey:(id)arg2;
- (BOOL)updateObject:(id)arg1 forKey:(id)arg2 expiration:(float)arg3;
- (id)updateDictionary:(id)arg1 forKey:(id)arg2;
- (id)updateDictionary:(id)arg1 forKey:(id)arg2 expiration:(float)arg3;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;

@end

@interface MSSDKExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_libVer;
    NSString *_epoch;
    long long _seq;
    NSUUID *_installId;
}

@property(retain, nonatomic) NSUUID *installId; // @synthesize installId=_installId;
@property(nonatomic) long long seq; // @synthesize seq=_seq;
@property(copy, nonatomic) NSString *epoch; // @synthesize epoch=_epoch;
@property(copy, nonatomic) NSString *libVer; // @synthesize libVer=_libVer;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSIngestionCall : NSObject
{
    BOOL _submitted;
    CDUnknownBlockType _completionHandler;
    NSObject *_data;
    NSString *_callId;
    id <MSIngestionCallDelegate> _delegate;
    NSString *_eTag;
    NSString *_authToken;
    NSObject<OS_dispatch_source> *_timerSource;
    unsigned long long _retryCount;
    NSArray *_retryIntervals;
}

@property(retain, nonatomic) NSArray *retryIntervals; // @synthesize retryIntervals=_retryIntervals;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(copy, nonatomic) NSString *eTag; // @synthesize eTag=_eTag;
@property(nonatomic) __weak id <MSIngestionCallDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isSubmitted) BOOL submitted; // @synthesize submitted=_submitted;
@property(copy, nonatomic) NSString *callId; // @synthesize callId=_callId;
@property(retain, nonatomic) NSObject *data; // @synthesize data=_data;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)ingestion:(id)arg1 callCompletedWithResponse:(id)arg2 data:(id)arg3 error:(id)arg4;
- (void)resetRetry;
- (void)resetTimer;
- (void)startRetryTimerWithStatusCode:(unsigned long long)arg1;
- (unsigned int)delayForRetryCount:(unsigned long long)arg1;
- (BOOL)hasReachedMaxRetries;
- (id)initWithRetryIntervals:(id)arg1;

@end

@interface MSLogger : NSObject
{
}

+ (void)setIsUserDefinedLogLevel:(BOOL)arg1;
+ (BOOL)isUserDefinedLogLevel;
+ (void)logMessage:(CDUnknownBlockType)arg1 level:(unsigned long long)arg2 tag:(id)arg3 file:(const char *)arg4 function:(const char *)arg5 line:(unsigned int)arg6;
+ (void)setLogHandler:(CDUnknownBlockType)arg1;
+ (void)setCurrentLogLevel:(unsigned long long)arg1;
+ (unsigned long long)currentLogLevel;
+ (void)initialize;

@end

@interface MSEncrypter : NSObject
{
    NSData *_originalKeyData;
    NSData *_alternateKeyData;
}

+ (id)getMetadataStringWithKeyTag:(id)arg1;
+ (id)generateInitializationVector;
+ (id)generateAndSaveKeyWithTag:(id)arg1;
+ (id)performCryptoOperation:(unsigned int)arg1 input:(id)arg2 initializationVector:(id)arg3 key:(id)arg4;
+ (void)rotateToNewKeyTag:(id)arg1;
+ (id)getCurrentKeyTag;
@property(retain) NSData *alternateKeyData; // @synthesize alternateKeyData=_alternateKeyData;
@property(retain) NSData *originalKeyData; // @synthesize originalKeyData=_originalKeyData;
- (void).cxx_destruct;
- (id)getKeyWithKeyTag:(id)arg1;
- (id)decryptData:(id)arg1;
- (id)decryptString:(id)arg1;
- (id)encryptData:(id)arg1;
- (id)encryptString:(id)arg1;

@end

@interface MSWrapperSdk : NSObject <MSSerializableObject>
{
    NSString *_wrapperSdkVersion;
    NSString *_wrapperSdkName;
    NSString *_wrapperRuntimeVersion;
    NSString *_liveUpdateReleaseLabel;
    NSString *_liveUpdateDeploymentKey;
    NSString *_liveUpdatePackageHash;
}

@property(copy, nonatomic) NSString *liveUpdatePackageHash; // @synthesize liveUpdatePackageHash=_liveUpdatePackageHash;
@property(copy, nonatomic) NSString *liveUpdateDeploymentKey; // @synthesize liveUpdateDeploymentKey=_liveUpdateDeploymentKey;
@property(copy, nonatomic) NSString *liveUpdateReleaseLabel; // @synthesize liveUpdateReleaseLabel=_liveUpdateReleaseLabel;
@property(copy, nonatomic) NSString *wrapperRuntimeVersion; // @synthesize wrapperRuntimeVersion=_wrapperRuntimeVersion;
@property(copy, nonatomic) NSString *wrapperSdkName; // @synthesize wrapperSdkName=_wrapperSdkName;
@property(copy, nonatomic) NSString *wrapperSdkVersion; // @synthesize wrapperSdkVersion=_wrapperSdkVersion;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;
- (id)initWithWrapperSdkVersion:(id)arg1 wrapperSdkName:(id)arg2 wrapperRuntimeVersion:(id)arg3 liveUpdateReleaseLabel:(id)arg4 liveUpdateDeploymentKey:(id)arg5 liveUpdatePackageHash:(id)arg6;

@end

@interface MSAuthTokenContext : NSObject
{
    BOOL _resetAuthTokenRequired;
    NSHashTable *_delegates;
    MSEncrypter *_encrypter;
    NSArray *_authTokenHistoryArray;
}

+ (void)resetSharedInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *authTokenHistoryArray; // @synthesize authTokenHistoryArray=_authTokenHistoryArray;
@property(retain, nonatomic) MSEncrypter *encrypter; // @synthesize encrypter=_encrypter;
@property(nonatomic, getter=isResetAuthTokenRequired) BOOL resetAuthTokenRequired; // @synthesize resetAuthTokenRequired=_resetAuthTokenRequired;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
- (void).cxx_destruct;
- (void)preventResetAuthTokenAfterStart;
- (void)finishInitialize;
- (void)checkIfTokenNeedsToBeRefreshed:(id)arg1;
- (void)setAuthTokenHistory:(id)arg1;
- (id)retrieveAuthTokenHistory;
- (id)authTokenHistory;
- (void)removeAuthToken:(id)arg1;
- (id)authTokenValidityArray;
- (id)accountId;
- (id)authToken;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)setAuthToken:(id)arg1 withAccountId:(id)arg2 expiresOn:(id)arg3;
- (id)init;

@end

@interface MSLogDBStorage : MSDBStorage <MSStorage>
{
    NSMutableDictionary *_batches;
    unsigned long long _idColumnIndex;
    unsigned long long _groupIdColumnIndex;
    unsigned long long _logColumnIndex;
    unsigned long long _targetTokenColumnIndex;
    MSEncrypter *_targetTokenEncrypter;
}

+ (int)deleteLogsFromDBWithColumnValues:(id)arg1 columnName:(id)arg2 inOpenedDatabase:(void *)arg3;
@property(readonly, nonatomic) MSEncrypter *targetTokenEncrypter; // @synthesize targetTokenEncrypter=_targetTokenEncrypter;
@property(readonly, nonatomic) unsigned long long targetTokenColumnIndex; // @synthesize targetTokenColumnIndex=_targetTokenColumnIndex;
@property(readonly, nonatomic) unsigned long long logColumnIndex; // @synthesize logColumnIndex=_logColumnIndex;
@property(readonly, nonatomic) unsigned long long groupIdColumnIndex; // @synthesize groupIdColumnIndex=_groupIdColumnIndex;
@property(readonly, nonatomic) unsigned long long idColumnIndex; // @synthesize idColumnIndex=_idColumnIndex;
@property(retain, nonatomic) NSMutableDictionary *batches; // @synthesize batches=_batches;
- (void).cxx_destruct;
- (void)migrateDatabase:(void *)arg1 fromVersion:(unsigned long long)arg2;
- (void)customizeDatabase:(void *)arg1;
- (void)createPriorityIndex:(void *)arg1;
- (unsigned long long)countLogs;
- (void)deleteLogsFromDBWithColumnValues:(id)arg1 columnName:(id)arg2;
- (void)deleteLogsFromDBWithColumnValue:(id)arg1 columnName:(id)arg2;
- (void)deleteLogFromDBWithId:(id)arg1;
- (id)logsWithCondition:(id)arg1;
- (id)logsFromDBWithGroupId:(id)arg1;
- (void)deleteLogsWithBatchId:(id)arg1 groupId:(id)arg2;
- (id)deleteLogsWithGroupId:(id)arg1;
- (BOOL)loadLogsWithGroupId:(id)arg1 limit:(unsigned long long)arg2 excludedTargetKeys:(id)arg3 afterDate:(id)arg4 beforeDate:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (unsigned long long)countLogsBeforeDate:(id)arg1;
- (BOOL)saveLog:(id)arg1 withGroupId:(id)arg2 flags:(unsigned long long)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDoubleTypedProperty : MSTypedProperty
{
    double _value;
}

@property(nonatomic) double value; // @synthesize value=_value;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSLongTypedProperty : MSTypedProperty
{
    long long _value;
}

@property(nonatomic) long long value; // @synthesize value=_value;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSUserIdHistoryInfo : MSHistoryInfo
{
    NSString *_userId;
}

@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(id)arg1 andUserId:(id)arg2;

@end

@interface MSUtility : NSObject
{
}

+ (id)sdkVersion;
+ (id)sdkName;
+ (BOOL)isAppStoreReceiptSandbox;
+ (BOOL)hasEmbeddedMobileProvision;
+ (long long)currentAppEnvironment;
+ (void)sharedAppOpenUrl:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (long long)sharedAppState;
+ (id)sharedAppDelegate;
+ (id)sharedApp;
+ (long long)applicationState;
+ (id)ISO8601DateFormatter;
+ (id)dateFromISO8601:(id)arg1;
+ (id)dateToISO8601:(id)arg1;
+ (double)nowInMilliseconds;
+ (BOOL)disableBackupForDirectoryURL:(id)arg1;
+ (BOOL)createDirectoryAtURL:(id)arg1;
+ (id)appCenterDirectoryURL;
+ (id)fullURLForPathComponent:(id)arg1;
+ (BOOL)fileExistsForPathComponent:(id)arg1;
+ (id)contentsOfDirectory:(id)arg1 propertiesForKeys:(id)arg2;
+ (id)loadDataForPathComponent:(id)arg1;
+ (id)createDirectoryForPathComponent:(id)arg1;
+ (BOOL)deleteFileAtURL:(id)arg1;
+ (BOOL)deleteItemForPathComponent:(id)arg1;
+ (id)createFileAtPathComponent:(id)arg1 withData:(id)arg2 atomically:(BOOL)arg3 forceOverwrite:(BOOL)arg4;

@end

@interface MSHttpIngestion : NSObject <MSIngestionProtocol>
{
    BOOL _paused;
    BOOL _enabled;
    NSString *_baseURL;
    NSString *_apiPath;
    MS_Reachability *_reachability;
    NSURL *_sendURL;
    NSString *_httpMethod;
    NSDictionary *_httpHeaders;
    NSMutableDictionary *_pendingCalls;
    NSURLSession *_session;
    long long _maxNumberOfConnections;
    NSArray *_callsRetryIntervals;
    NSHashTable *_delegates;
}

+ (id)eTagFromResponse:(id)arg1;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(retain) NSHashTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSArray *callsRetryIntervals; // @synthesize callsRetryIntervals=_callsRetryIntervals;
@property(readonly, nonatomic) long long maxNumberOfConnections; // @synthesize maxNumberOfConnections=_maxNumberOfConnections;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain) NSMutableDictionary *pendingCalls; // @synthesize pendingCalls=_pendingCalls;
@property(retain, nonatomic) NSDictionary *httpHeaders; // @synthesize httpHeaders=_httpHeaders;
@property(copy, nonatomic) NSString *httpMethod; // @synthesize httpMethod=_httpMethod;
@property(retain, nonatomic) NSURL *sendURL; // @synthesize sendURL=_sendURL;
@property(nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property(retain, nonatomic) MS_Reachability *reachability; // @synthesize reachability=_reachability;
@property(copy, nonatomic) NSString *apiPath; // @synthesize apiPath=_apiPath;
@property(copy, nonatomic) NSString *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (void)dealloc;
- (void)sendAsync:(id)arg1 eTag:(id)arg2 authToken:(id)arg3 callId:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)prettyPrintHeaders:(id)arg1;
- (void)enumerateDelegatesForSelector:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)obfuscateHeaderValue:(id)arg1 forKey:(id)arg2;
- (id)createRequest:(id)arg1 eTag:(id)arg2 authToken:(id)arg3;
- (void)networkStateChanged;
- (void)networkStateChanged:(id)arg1;
- (void)call:(id)arg1 completedWithResult:(long long)arg2;
- (void)sendCallAsync:(id)arg1;
- (void)resume;
- (void)pause;
- (void)setEnabled:(BOOL)arg1 andDeleteDataOnDisabled:(BOOL)arg2;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)sendAsync:(id)arg1 eTag:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendAsync:(id)arg1 eTag:(id)arg2 authToken:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendAsync:(id)arg1 authToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic, getter=isReadyToSend) BOOL readyToSend;
- (id)initWithBaseUrl:(id)arg1 apiPath:(id)arg2 headers:(id)arg3 queryStrings:(id)arg4 reachability:(id)arg5 retryIntervals:(id)arg6 maxNumberOfConnections:(long long)arg7;
- (id)initWithBaseUrl:(id)arg1 apiPath:(id)arg2 headers:(id)arg3 queryStrings:(id)arg4 reachability:(id)arg5 retryIntervals:(id)arg6;
- (id)initWithBaseUrl:(id)arg1 apiPath:(id)arg2 headers:(id)arg3 queryStrings:(id)arg4 reachability:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAppCenterIngestion : MSHttpIngestion
{
    NSString *_appSecret;
}

@property(copy, nonatomic) NSString *appSecret; // @synthesize appSecret=_appSecret;
- (void).cxx_destruct;
- (id)obfuscateHeaderValue:(id)arg1 forKey:(id)arg2;
- (id)createRequest:(id)arg1 eTag:(id)arg2 authToken:(id)arg3;
- (void)sendAsync:(id)arg1 authToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)isReadyToSend;
- (id)initWithBaseUrl:(id)arg1 installId:(id)arg2;

@end

@interface MSUserIdContext : NSObject
{
    MSUserIdHistoryInfo *_currentUserIdInfo;
    NSMutableArray *_userIdHistory;
    NSHashTable *_delegates;
}

+ (id)prefixedUserIdFromUserId:(id)arg1;
+ (BOOL)isUserIdValidForOneCollector:(id)arg1;
+ (BOOL)isUserIdValidForAppCenter:(id)arg1;
+ (void)resetSharedInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSMutableArray *userIdHistory; // @synthesize userIdHistory=_userIdHistory;
@property(retain, nonatomic) MSUserIdHistoryInfo *currentUserIdInfo; // @synthesize currentUserIdInfo=_currentUserIdInfo;
- (void).cxx_destruct;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)clearUserIdHistory;
- (id)userIdAt:(id)arg1;
- (void)setUserId:(id)arg1;
- (id)userId;
- (id)init;

@end

@interface MSLocExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_tz;
}

@property(copy, nonatomic) NSString *tz; // @synthesize tz=_tz;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSCSData : NSObject <MSSerializableObject, MSModel>
{
    NSDictionary *_properties;
}

@property(copy) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSOSExtension : NSObject <MSSerializableObject, MSModel>
{
    NSString *_name;
    NSString *_ver;
}

@property(copy, nonatomic) NSString *ver; // @synthesize ver=_ver;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSDevice : MSWrapperSdk <MSSerializableObject>
{
    NSString *_sdkName;
    NSString *_sdkVersion;
    NSString *_model;
    NSString *_oemName;
    NSString *_osName;
    NSString *_osVersion;
    NSString *_osBuild;
    NSNumber *_osApiLevel;
    NSString *_locale;
    NSNumber *_timeZoneOffset;
    NSString *_screenSize;
    NSString *_appVersion;
    NSString *_carrierName;
    NSString *_carrierCountry;
    NSString *_appBuild;
    NSString *_appNamespace;
}

@property(copy, nonatomic) NSString *appNamespace; // @synthesize appNamespace=_appNamespace;
@property(copy, nonatomic) NSString *appBuild; // @synthesize appBuild=_appBuild;
@property(copy, nonatomic) NSString *carrierCountry; // @synthesize carrierCountry=_carrierCountry;
@property(copy, nonatomic) NSString *carrierName; // @synthesize carrierName=_carrierName;
@property(copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(copy, nonatomic) NSString *screenSize; // @synthesize screenSize=_screenSize;
@property(retain, nonatomic) NSNumber *timeZoneOffset; // @synthesize timeZoneOffset=_timeZoneOffset;
@property(copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(copy, nonatomic) NSNumber *osApiLevel; // @synthesize osApiLevel=_osApiLevel;
@property(copy, nonatomic) NSString *osBuild; // @synthesize osBuild=_osBuild;
@property(copy, nonatomic) NSString *osVersion; // @synthesize osVersion=_osVersion;
@property(copy, nonatomic) NSString *osName; // @synthesize osName=_osName;
@property(copy, nonatomic) NSString *oemName; // @synthesize oemName=_oemName;
@property(copy, nonatomic) NSString *model; // @synthesize model=_model;
@property(copy, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(copy, nonatomic) NSString *sdkName; // @synthesize sdkName=_sdkName;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSErrorReport : NSObject
{
    NSString *_incidentIdentifier;
    NSString *_reporterKey;
    NSString *_signal;
    NSString *_exceptionName;
    NSString *_exceptionReason;
    NSDate *_appStartTime;
    NSDate *_appErrorTime;
    MSDevice *_device;
    unsigned long long _appProcessIdentifier;
}

@property(readonly, nonatomic) unsigned long long appProcessIdentifier; // @synthesize appProcessIdentifier=_appProcessIdentifier;
@property(readonly, nonatomic) MSDevice *device; // @synthesize device=_device;
@property(readonly, nonatomic) NSDate *appErrorTime; // @synthesize appErrorTime=_appErrorTime;
@property(readonly, nonatomic) NSDate *appStartTime; // @synthesize appStartTime=_appStartTime;
@property(readonly, copy, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_exceptionReason;
@property(readonly, copy, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property(copy, nonatomic) NSString *signal; // @synthesize signal=_signal;
@property(readonly, copy, nonatomic) NSString *reporterKey; // @synthesize reporterKey=_reporterKey;
@property(readonly, copy, nonatomic) NSString *incidentIdentifier; // @synthesize incidentIdentifier=_incidentIdentifier;
- (void).cxx_destruct;
- (BOOL)isAppKill;
- (id)initWithErrorId:(id)arg1 reporterKey:(id)arg2 signal:(id)arg3 exceptionName:(id)arg4 exceptionReason:(id)arg5 appStartTime:(id)arg6 appErrorTime:(id)arg7 device:(id)arg8 appProcessIdentifier:(unsigned long long)arg9;

@end

@interface MSAbstractErrorLog : MSLogWithProperties
{
    BOOL _fatal;
    NSString *_id;
    NSNumber *_processId;
    NSString *_processName;
    NSNumber *_parentProcessId;
    NSString *_parentProcessName;
    NSNumber *_errorThreadId;
    NSString *_errorThreadName;
    NSDate *_appLaunchTimestamp;
    NSString *_architecture;
}

@property(copy, nonatomic) NSString *architecture; // @synthesize architecture=_architecture;
@property(retain, nonatomic) NSDate *appLaunchTimestamp; // @synthesize appLaunchTimestamp=_appLaunchTimestamp;
@property(nonatomic, getter=isFatal) BOOL fatal; // @synthesize fatal=_fatal;
@property(copy, nonatomic) NSString *errorThreadName; // @synthesize errorThreadName=_errorThreadName;
@property(retain, nonatomic) NSNumber *errorThreadId; // @synthesize errorThreadId=_errorThreadId;
@property(copy, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(retain, nonatomic) NSNumber *parentProcessId; // @synthesize parentProcessId=_parentProcessId;
@property(copy, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(retain, nonatomic) NSNumber *processId; // @synthesize processId=_processId;
@property(copy, nonatomic) NSString *errorId; // @synthesize errorId=_id;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSWrapperExceptionManager : NSObject
{
}

+ (id)loadWrapperExceptionWithBaseFilename:(id)arg1;
+ (void)deleteWrapperExceptionWithBaseFilename:(id)arg1;
+ (void)saveWrapperException:(id)arg1 withBaseFilename:(id)arg2;
+ (void)correlateLastSavedWrapperExceptionToReport:(id)arg1;
+ (void)deleteAllWrapperExceptions;
+ (void)deleteWrapperExceptionWithUUIDString:(id)arg1;
+ (void)saveWrapperException:(id)arg1;
+ (id)loadWrapperExceptionWithUUIDString:(id)arg1;
+ (void)load;

@end

@interface MSHandledErrorLog : MSLogWithProperties
{
    NSString *_errorId;
    MSException *_exception;
}

@property(retain, nonatomic) MSException *exception; // @synthesize exception=_exception;
@property(copy, nonatomic) NSString *errorId; // @synthesize errorId=_errorId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;
- (id)init;

@end

@interface MSCrashesCXXExceptionWrapperException : NSException
{
    const CDStruct_3098c0ae *_info;
}

@property(readonly, nonatomic) const CDStruct_3098c0ae *info; // @synthesize info=_info;
- (id)callStackReturnAddresses;
- (id)initWithCXXExceptionInfo:(const CDStruct_3098c0ae *)arg1;

@end

@interface MSStackFrame : NSObject <MSSerializableObject>
{
    NSString *_address;
    NSString *_code;
    NSString *_className;
    NSString *_methodName;
    NSNumber *_lineNumber;
    NSString *_fileName;
}

@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSString *methodName; // @synthesize methodName=_methodName;
@property(copy, nonatomic) NSString *className; // @synthesize className=_className;
@property(copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(copy, nonatomic) NSString *address; // @synthesize address=_address;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;

@end

@interface MSCrashes : MSServiceAbstract <MSChannelDelegate, MSServiceInternal>
{
    BOOL _didCrashInLastSession;
    BOOL _didReceiveMemoryWarningInLastSession;
    BOOL _enableMachExceptionHandler;
    BOOL _automaticProcessingEnabled;
    id <MSCrashesDelegate> _delegate;
    id <MSChannelGroupProtocol> _channelGroup;
    MSChannelUnitConfiguration *_channelUnitConfiguration;
    MSErrorReport *_lastSessionCrashReport;
    NSObject<OS_dispatch_queue> *_bufferFileQueue;
    NSObject<OS_dispatch_group> *_bufferFileGroup;
    NSObject<OS_dispatch_semaphore> *_delayedProcessingSemaphore;
    id <MSChannelUnitProtocol> _bufferChannelUnit;
    MSEncrypter *_targetTokenEncrypter;
    NSObject<OS_dispatch_source> *_memoryPressureSource;
    NSMutableArray *_crashFiles;
    NSString *_crashesPathComponent;
    NSString *_logBufferPathComponent;
    NSString *_analyzerInProgressFilePathComponent;
    MSPLCrashReporter *_plCrashReporter;
    CDUnknownFunctionPointerType _exceptionHandler;
    NSMutableArray *_unprocessedLogs;
    NSMutableArray *_unprocessedReports;
    NSMutableArray *_unprocessedFilePaths;
    CDUnknownBlockType _userConfirmationHandler;
    NSDate *_appStartTime;
}

+ (void)resetSharedInstance;
+ (void)sendErrorAttachments:(id)arg1 withIncidentIdentifier:(id)arg2;
+ (BOOL)validatePropertiesForAttachment:(id)arg1;
+ (id)logTag;
+ (id)serviceName;
+ (id)sharedInstance;
+ (void)setDelegate:(id)arg1;
+ (void)disableMachExceptionHandler;
+ (void)applicationDidReportException:(id)arg1;
+ (id)lastSessionCrashReport;
+ (void)notifyWithUserConfirmation:(unsigned long long)arg1;
+ (void)setUserConfirmationHandler:(CDUnknownBlockType)arg1;
+ (BOOL)hasReceivedMemoryWarningInLastSession;
+ (BOOL)hasCrashedInLastSession;
+ (void)generateTestCrash;
@property(nonatomic, getter=isAutomaticProcessingEnabled) BOOL automaticProcessingEnabled; // @synthesize automaticProcessingEnabled=_automaticProcessingEnabled;
@property(retain, nonatomic) NSDate *appStartTime; // @synthesize appStartTime=_appStartTime;
@property(copy) CDUnknownBlockType userConfirmationHandler; // @synthesize userConfirmationHandler=_userConfirmationHandler;
@property(retain) NSMutableArray *unprocessedFilePaths; // @synthesize unprocessedFilePaths=_unprocessedFilePaths;
@property(retain) NSMutableArray *unprocessedReports; // @synthesize unprocessedReports=_unprocessedReports;
@property(retain) NSMutableArray *unprocessedLogs; // @synthesize unprocessedLogs=_unprocessedLogs;
@property(nonatomic) CDUnknownFunctionPointerType exceptionHandler; // @synthesize exceptionHandler=_exceptionHandler;
@property(retain, nonatomic) MSPLCrashReporter *plCrashReporter; // @synthesize plCrashReporter=_plCrashReporter;
@property(copy, nonatomic) NSString *analyzerInProgressFilePathComponent; // @synthesize analyzerInProgressFilePathComponent=_analyzerInProgressFilePathComponent;
@property(copy, nonatomic) NSString *logBufferPathComponent; // @synthesize logBufferPathComponent=_logBufferPathComponent;
@property(copy, nonatomic) NSString *crashesPathComponent; // @synthesize crashesPathComponent=_crashesPathComponent;
@property(copy, nonatomic) NSMutableArray *crashFiles; // @synthesize crashFiles=_crashFiles;
@property(nonatomic, getter=isMachExceptionHandlerEnabled) BOOL enableMachExceptionHandler; // @synthesize enableMachExceptionHandler=_enableMachExceptionHandler;
@property(retain) NSObject<OS_dispatch_source> *memoryPressureSource; // @synthesize memoryPressureSource=_memoryPressureSource;
@property(readonly, nonatomic) MSEncrypter *targetTokenEncrypter; // @synthesize targetTokenEncrypter=_targetTokenEncrypter;
@property(retain, nonatomic) id <MSChannelUnitProtocol> bufferChannelUnit; // @synthesize bufferChannelUnit=_bufferChannelUnit;
@property(retain) NSObject<OS_dispatch_semaphore> *delayedProcessingSemaphore; // @synthesize delayedProcessingSemaphore=_delayedProcessingSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *bufferFileGroup; // @synthesize bufferFileGroup=_bufferFileGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *bufferFileQueue; // @synthesize bufferFileQueue=_bufferFileQueue;
@property(retain, getter=getLastSessionCrashReport) MSErrorReport *lastSessionCrashReport; // @synthesize lastSessionCrashReport=_lastSessionCrashReport;
@property BOOL didReceiveMemoryWarningInLastSession; // @synthesize didReceiveMemoryWarningInLastSession=_didReceiveMemoryWarningInLastSession;
@property BOOL didCrashInLastSession; // @synthesize didCrashInLastSession=_didCrashInLastSession;
@property(retain, nonatomic) MSChannelUnitConfiguration *channelUnitConfiguration; // @synthesize channelUnitConfiguration=_channelUnitConfiguration;
@property(retain, nonatomic) id <MSChannelGroupProtocol> channelGroup; // @synthesize channelGroup=_channelGroup;
@property(nonatomic) __weak id <MSCrashesDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)buildHandledErrorReportWithErrorID:(id)arg1;
- (id)trackModelException:(id)arg1 withProperties:(id)arg2 withAttachments:(id)arg3;
- (void)clearUnprocessedReports;
- (void)handleUserConfirmation:(unsigned long long)arg1;
- (void)notifyWithUserConfirmation:(unsigned long long)arg1;
- (BOOL)shouldAlwaysSend;
- (BOOL)userPromptedForConfirmation;
- (BOOL)sendCrashReportsOrAwaitUserConfirmation;
- (BOOL)shouldProcessErrorReport:(id)arg1;
- (void)emptyLogBufferFiles;
- (void)setupLogBuffer;
- (void)createAnalyzerFile;
- (void)removeAnalyzerFile;
- (id)persistedCrashReports;
- (void)handleLatestCrashReport;
- (void)deleteCrashReportWithFileURL:(id)arg1;
- (void)deleteAllFromCrashesDirectory;
- (void)sendErrorAttachments:(id)arg1 withIncidentIdentifier:(id)arg2;
- (BOOL)sendCrashReportsOrAwaitUserConfirmationForFilteredIds:(id)arg1;
- (id)unprocessedCrashReports;
- (void)processMemoryWarningInLastSession;
- (void)processLogBufferAfterCrash;
- (void)processCrashReports;
- (void)startCrashProcessing;
- (void)startDelayedCrashProcessing;
- (void)configureCrashReporterWithUncaughtExceptionHandlerEnabled:(BOOL)arg1;
- (void)channel:(id)arg1 didFailSendingLog:(id)arg2 withError:(id)arg3;
- (void)channel:(id)arg1 didSucceedSendingLog:(id)arg2;
- (void)channel:(id)arg1 willSendLog:(id)arg2;
- (void)channel:(id)arg1 didCompleteEnqueueingLog:(id)arg2 internalId:(id)arg3;
- (void)channel:(id)arg1 didPrepareLog:(id)arg2 internalId:(id)arg3 flags:(unsigned long long)arg4;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)applicationWillEnterForeground;
- (void)clearContextHistoryAndKeepCurrentSession;
@property(readonly, nonatomic) long long initializationPriority;
@property(readonly, copy, nonatomic) NSString *groupId;
- (void)updateConfigurationWithAppSecret:(id)arg1 transmissionTargetToken:(id)arg2;
- (void)startWithChannelGroup:(id)arg1 appSecret:(id)arg2 transmissionTargetToken:(id)arg3 fromApplication:(BOOL)arg4;
- (void)applyEnabledState:(BOOL)arg1;
- (id)init;

// Remaining properties
@property(retain, nonatomic) NSString *appSecret;
@property(readonly, nonatomic, getter=isAvailable) BOOL available;
@property(retain, nonatomic) id <MSChannelUnitProtocol> channelUnit;
@property(readonly, copy) NSString *debugDescription;
@property(retain, nonatomic) NSString *defaultTransmissionTargetToken;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isEnabled) BOOL enabled;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSApplicationForwarder : NSObject
{
}

+ (void)registerForwarding;

@end

@interface MSErrorAttachmentLog : MSAbstractLog
{
    NSString *_contentType;
    NSString *_filename;
    NSData *_data;
    NSString *_attachmentId;
    NSString *_errorId;
}

+ (id)attachmentWithBinary:(id)arg1 filename:(id)arg2 contentType:(id)arg3;
+ (id)attachmentWithText:(id)arg1 filename:(id)arg2;
@property(copy, nonatomic) NSString *errorId; // @synthesize errorId=_errorId;
@property(copy, nonatomic) NSString *attachmentId; // @synthesize attachmentId=_attachmentId;
@property(copy, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isValid;
- (BOOL)isEqual:(id)arg1;
- (id)serializeToDictionary;
- (id)initWithFilename:(id)arg1 attachmentText:(id)arg2;
- (id)initWithFilename:(id)arg1 attachmentBinary:(id)arg2 contentType:(id)arg3;
- (id)init;

@end

@interface MSAppleErrorLog : MSAbstractErrorLog <MSNoAutoAssignSessionIdLog>
{
    NSNumber *_primaryArchitectureId;
    NSNumber *_architectureVariantId;
    NSString *_applicationPath;
    NSString *_osExceptionType;
    NSString *_osExceptionCode;
    NSString *_osExceptionAddress;
    NSString *_exceptionType;
    NSString *_exceptionReason;
    NSString *_selectorRegisterValue;
    NSArray *_threads;
    NSArray *_binaries;
    NSDictionary *_registers;
    MSException *_exception;
}

@property(retain, nonatomic) MSException *exception; // @synthesize exception=_exception;
@property(retain, nonatomic) NSDictionary *registers; // @synthesize registers=_registers;
@property(retain, nonatomic) NSArray *binaries; // @synthesize binaries=_binaries;
@property(retain, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(copy, nonatomic) NSString *selectorRegisterValue; // @synthesize selectorRegisterValue=_selectorRegisterValue;
@property(copy, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_exceptionReason;
@property(copy, nonatomic) NSString *exceptionType; // @synthesize exceptionType=_exceptionType;
@property(copy, nonatomic) NSString *osExceptionAddress; // @synthesize osExceptionAddress=_osExceptionAddress;
@property(copy, nonatomic) NSString *osExceptionCode; // @synthesize osExceptionCode=_osExceptionCode;
@property(copy, nonatomic) NSString *osExceptionType; // @synthesize osExceptionType=_osExceptionType;
@property(copy, nonatomic) NSString *applicationPath; // @synthesize applicationPath=_applicationPath;
@property(retain, nonatomic) NSNumber *architectureVariantId; // @synthesize architectureVariantId=_architectureVariantId;
@property(retain, nonatomic) NSNumber *primaryArchitectureId; // @synthesize primaryArchitectureId=_primaryArchitectureId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;
- (id)init;

@end

@interface MSThread : NSObject <MSSerializableObject>
{
    NSNumber *_threadId;
    NSString *_name;
    NSMutableArray *_frames;
    MSException *_exception;
}

@property(retain, nonatomic) MSException *exception; // @synthesize exception=_exception;
@property(retain, nonatomic) NSMutableArray *frames; // @synthesize frames=_frames;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSNumber *threadId; // @synthesize threadId=_threadId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;
- (id)init;

@end

@interface MSCrashesUncaughtCXXExceptionHandlerManager : NSObject
{
}

+ (unsigned long long)countCXXExceptionHandler;
+ (void)removeCXXExceptionHandler:(CDUnknownFunctionPointerType)arg1;
+ (void)addCXXExceptionHandler:(CDUnknownFunctionPointerType)arg1;

@end

@interface MSErrorLogFormatter : NSObject
{
}

+ (id)formatAddress:(unsigned long long)arg1 is64bit:(BOOL)arg2;
+ (unsigned long long)normalizeAddress:(unsigned long long)arg1 is64bit:(BOOL)arg2;
+ (id)uuidRefToString:(struct __CFUUID *)arg1;
+ (id)addressesFromReport:(id)arg1 is64bit:(BOOL)arg2;
+ (id)findCrashedThreadInReport:(id)arg1;
+ (BOOL)isCodeType64bit:(id)arg1;
+ (id)extractCodeTypeFromReport:(id)arg1;
+ (long long)imageTypeForImagePath:(id)arg1 processPath:(id)arg2;
+ (id)selectorForRegisterWithName:(id)arg1 ofThread:(id)arg2 report:(id)arg3;
+ (id)anonymizedPathFromPath:(id)arg1;
+ (BOOL)isBinaryWithStart:(unsigned long long)arg1 end:(unsigned long long)arg2 inAddresses:(id)arg3;
+ (id)extractBinaryImagesFromReport:(id)arg1 codeType:(id)arg2 is64bit:(BOOL)arg3;
+ (id)selectorRegisterValueFromReport:(id)arg1 ofCrashedThread:(id)arg2 is64bit:(BOOL)arg3;
+ (id)extractExceptionReasonFromReport:(id)arg1;
+ (id)extractRegistersFromCrashedThread:(id)arg1 is64bit:(BOOL)arg2;
+ (id)formatStackFrame:(id)arg1 report:(id)arg2;
+ (id)extractThreadsFromReport:(id)arg1 crashedThread:(id)arg2 is64bit:(BOOL)arg3;
+ (id)getCrashTimeFromReport:(id)arg1;
+ (id)getAppLaunchTimeFromReport:(id)arg1;
+ (id)addProcessInfoAndApplicationPathTo:(id)arg1 fromCrashReport:(id)arg2;
+ (id)errorIdForCrashReport:(id)arg1;
+ (id)errorReportFromLog:(id)arg1;
+ (id)errorReportFromCrashReport:(id)arg1;
+ (id)errorLogFromCrashReport:(id)arg1;

@end

@interface MSCrashesUtil : NSObject
{
}

+ (void)resetDirectory;
+ (id)wrapperExceptionsDir;
+ (id)logBufferDir;
+ (id)crashesDir;

@end

@interface MSBinary : NSObject <MSSerializableObject>
{
    NSString *_binaryId;
    NSString *_startAddress;
    NSString *_endAddress;
    NSString *_name;
    NSString *_path;
    NSString *_architecture;
    NSNumber *_primaryArchitectureId;
    NSNumber *_architectureVariantId;
}

@property(retain, nonatomic) NSNumber *architectureVariantId; // @synthesize architectureVariantId=_architectureVariantId;
@property(retain, nonatomic) NSNumber *primaryArchitectureId; // @synthesize primaryArchitectureId=_primaryArchitectureId;
@property(copy, nonatomic) NSString *architecture; // @synthesize architecture=_architecture;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *endAddress; // @synthesize endAddress=_endAddress;
@property(copy, nonatomic) NSString *startAddress; // @synthesize startAddress=_startAddress;
@property(copy, nonatomic) NSString *binaryId; // @synthesize binaryId=_binaryId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSWrapperCrashesHelper : NSObject
{
    id <MSCrashHandlerSetupDelegate> _crashHandlerSetupDelegate;
}

+ (id)buildHandledErrorReportWithErrorID:(id)arg1;
+ (id)trackModelException:(id)arg1 withProperties:(id)arg2 withAttachments:(id)arg3;
+ (void)sendErrorAttachments:(id)arg1 withIncidentIdentifier:(id)arg2;
+ (BOOL)sendCrashReportsOrAwaitUserConfirmationForFilteredIds:(id)arg1;
+ (id)unprocessedCrashReports;
+ (void)setAutomaticProcessing:(BOOL)arg1;
+ (id)getCrashHandlerSetupDelegate;
+ (void)setCrashHandlerSetupDelegate:(id)arg1;
+ (id)sharedInstance;
@property(nonatomic) __weak id <MSCrashHandlerSetupDelegate> crashHandlerSetupDelegate; // @synthesize crashHandlerSetupDelegate=_crashHandlerSetupDelegate;
- (void).cxx_destruct;

@end

@interface MSException : NSObject <MSSerializableObject>
{
    NSString *_type;
    NSString *_message;
    NSString *_stackTrace;
    NSArray *_frames;
    NSArray *_innerExceptions;
    NSString *_wrapperSdkName;
}

@property(copy, nonatomic) NSString *wrapperSdkName; // @synthesize wrapperSdkName=_wrapperSdkName;
@property(retain, nonatomic) NSArray *innerExceptions; // @synthesize innerExceptions=_innerExceptions;
@property(retain, nonatomic) NSArray *frames; // @synthesize frames=_frames;
@property(copy, nonatomic) NSString *stackTrace; // @synthesize stackTrace=_stackTrace;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)serializeToDictionary;

@end

@interface MSWrapperException : NSObject <MSSerializableObject>
{
    MSException *_modelException;
    NSData *_exceptionData;
    NSNumber *_processId;
}

@property(copy, nonatomic) NSNumber *processId; // @synthesize processId=_processId;
@property(retain, nonatomic) NSData *exceptionData; // @synthesize exceptionData=_exceptionData;
@property(retain, nonatomic) MSException *modelException; // @synthesize modelException=_modelException;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)serializeToDictionary;

@end

@interface MSPLCrashSignalHandler : NSObject
{
    struct __darwin_sigaltstack {
        void *ss_sp;
        unsigned long long ss_size;
        int ss_flags;
    } _sigstk;
}

+ (void)resetHandlers;
+ (id)sharedHandler;
+ (void)initialize;
- (BOOL)registerHandlerForSignal:(int)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (BOOL)registerHandlerWithSignal:(int)arg1 error:(id *)arg2;
- (id)init;

@end

@interface MSPLCrashReporter : NSObject
{
    MSPLCrashReporterConfig *_config;
    BOOL _enabled;
    MSPLCrashMachExceptionServer *_machServer;
    MSPLCrashMachExceptionPortSet *_previousMachPorts;
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
    NSString *_applicationMarketingVersion;
    NSString *_crashReportDirectory;
}

+ (id)sharedReporter;
+ (void)initialize;
- (void)setCrashCallbacks:(struct PLCrashReporterCallbacks *)arg1;
- (id)generateLiveReportAndReturnError:(id *)arg1;
- (id)generateLiveReport;
- (id)generateLiveReportWithThread:(unsigned int)arg1 error:(id *)arg2;
- (id)generateLiveReportWithThread:(unsigned int)arg1;
- (BOOL)enableCrashReporterAndReturnError:(id *)arg1;
- (BOOL)enableCrashReporter;
- (BOOL)purgePendingCrashReportAndReturnError:(id *)arg1;
- (BOOL)purgePendingCrashReport;
- (id)loadPendingCrashReportDataAndReturnError:(id *)arg1;
- (id)loadPendingCrashReportData;
- (BOOL)hasPendingCrashReport;
- (id)initWithConfiguration:(id)arg1;
- (id)init;
- (id)crashReportPath;
- (id)queuedCrashReportDirectory;
- (id)crashReportDirectory;
- (BOOL)populateCrashReportDirectoryAndReturnError:(id *)arg1;
- (int)mapToAsyncSymbolicationStrategy:(unsigned long long)arg1;
- (void)dealloc;
- (id)enableMachExceptionServerWithPreviousPortSet:(id *)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (id)initWithBundle:(id)arg1 configuration:(id)arg2;
- (id)initWithApplicationIdentifier:(id)arg1 appVersion:(id)arg2 appMarketingVersion:(id)arg3 configuration:(id)arg4;

@end

@interface MSPLCrashReport : NSObject
{
    struct _PLCrashReportDecoder *_decoder;
    MSPLCrashReportSystemInfo *_systemInfo;
    MSPLCrashReportMachineInfo *_machineInfo;
    MSPLCrashReportApplicationInfo *_applicationInfo;
    MSPLCrashReportProcessInfo *_processInfo;
    MSPLCrashReportSignalInfo *_signalInfo;
    MSPLCrashReportMachExceptionInfo *_machExceptionInfo;
    NSArray *_threads;
    NSArray *_images;
    MSPLCrashReportExceptionInfo *_exceptionInfo;
    struct __CFUUID *_uuid;
}

@property(readonly, nonatomic) struct __CFUUID *uuidRef; // @synthesize uuidRef=_uuid;
@property(readonly, nonatomic) MSPLCrashReportExceptionInfo *exceptionInfo; // @synthesize exceptionInfo=_exceptionInfo;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) MSPLCrashReportMachExceptionInfo *machExceptionInfo; // @synthesize machExceptionInfo=_machExceptionInfo;
@property(readonly, nonatomic) MSPLCrashReportSignalInfo *signalInfo; // @synthesize signalInfo=_signalInfo;
@property(readonly, nonatomic) MSPLCrashReportProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(readonly, nonatomic) MSPLCrashReportApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic) MSPLCrashReportMachineInfo *machineInfo; // @synthesize machineInfo=_machineInfo;
@property(readonly, nonatomic) MSPLCrashReportSystemInfo *systemInfo; // @synthesize systemInfo=_systemInfo;
@property(readonly, nonatomic) BOOL hasExceptionInfo;
@property(readonly, nonatomic) BOOL hasProcessInfo;
@property(readonly, nonatomic) BOOL hasMachineInfo;
- (id)imageForAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 error:(id *)arg2;
- (id)extractMachExceptionInfo:(struct _Plcrash__CrashReport__Signal__MachException *)arg1 error:(id *)arg2;
- (id)extractSignalInfo:(struct _Plcrash__CrashReport__Signal *)arg1 error:(id *)arg2;
- (id)extractExceptionInfo:(struct _Plcrash__CrashReport__Exception *)arg1 error:(id *)arg2;
- (id)extractImageInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractThreadInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractStackFrameInfo:(struct _Plcrash__CrashReport__Thread__StackFrame *)arg1 error:(id *)arg2;
- (id)extractSymbolInfo:(struct _Plcrash__CrashReport__Symbol *)arg1 error:(id *)arg2;
- (id)extractProcessInfo:(struct _Plcrash__CrashReport__ProcessInfo *)arg1 error:(id *)arg2;
- (id)extractApplicationInfo:(struct _Plcrash__CrashReport__ApplicationInfo *)arg1 error:(id *)arg2;
- (id)extractMachineInfo:(struct _Plcrash__CrashReport__MachineInfo *)arg1 error:(id *)arg2;
- (id)extractProcessorInfo:(struct _Plcrash__CrashReport__Processor *)arg1 error:(id *)arg2;
- (id)extractSystemInfo:(struct _Plcrash__CrashReport__SystemInfo *)arg1 error:(id *)arg2;
- (struct _Plcrash__CrashReport *)decodeCrashData:(id)arg1 error:(id *)arg2;

@end

@interface MSPLCrashReportSystemInfo : NSObject
{
    int _operatingSystem;
    NSString *_osVersion;
    NSString *_osBuild;
    int _architecture;
    NSDate *_timestamp;
}

@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) int architecture; // @synthesize architecture=_architecture;
@property(readonly, nonatomic) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_osBuild;
@property(readonly, nonatomic) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_osVersion;
@property(readonly, nonatomic) int operatingSystem; // @synthesize operatingSystem=_operatingSystem;
- (void)dealloc;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 timestamp:(id)arg5;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 architecture:(int)arg3 timestamp:(id)arg4;

@end

@interface MSPLCrashReportApplicationInfo : NSObject
{
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
    NSString *_applicationMarketingVersion;
}

@property(readonly, nonatomic) NSString *applicationMarketingVersion; // @synthesize applicationMarketingVersion=_applicationMarketingVersion;
@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 applicationVersion:(id)arg2 applicationMarketingVersion:(id)arg3;

@end

@interface MSPLCrashReportThreadInfo : NSObject
{
    long long _threadNumber;
    NSArray *_stackFrames;
    BOOL _crashed;
    NSArray *_registers;
}

@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) BOOL crashed; // @synthesize crashed=_crashed;
@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) long long threadNumber; // @synthesize threadNumber=_threadNumber;
- (void)dealloc;
- (id)initWithThreadNumber:(long long)arg1 stackFrames:(id)arg2 crashed:(BOOL)arg3 registers:(id)arg4;

@end

@interface MSPLCrashReportBinaryImageInfo : NSObject
{
    MSPLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _baseAddress;
    unsigned long long _imageSize;
    NSString *_imageName;
    BOOL _hasImageUUID;
    NSString *_imageUUID;
}

@property(readonly, nonatomic) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(readonly, nonatomic) BOOL hasImageUUID; // @synthesize hasImageUUID=_hasImageUUID;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) unsigned long long imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) unsigned long long imageBaseAddress; // @synthesize imageBaseAddress=_baseAddress;
@property(readonly, nonatomic) MSPLCrashReportProcessorInfo *codeType; // @synthesize codeType=_processorInfo;
- (void)dealloc;
- (id)initWithCodeType:(id)arg1 baseAddress:(unsigned long long)arg2 size:(unsigned long long)arg3 name:(id)arg4 uuid:(id)arg5;

@end

@interface MSPLCrashReportExceptionInfo : NSObject
{
    NSString *_name;
    NSString *_reason;
    NSArray *_stackFrames;
}

@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_reason;
@property(readonly, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_name;
- (void)dealloc;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2 stackFrames:(id)arg3;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2;

@end

@interface MSPLCrashReportSignalInfo : NSObject
{
    NSString *_name;
    NSString *_code;
    unsigned long long _address;
}

@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithSignalName:(id)arg1 code:(id)arg2 address:(unsigned long long)arg3;

@end

@interface MSPLCrashReportProcessInfo : NSObject
{
    NSString *_processName;
    unsigned long long _processID;
    NSString *_processPath;
    NSDate *_processStartTime;
    NSString *_parentProcessName;
    unsigned long long _parentProcessID;
    BOOL _native;
}

@property(readonly, nonatomic) BOOL native; // @synthesize native=_native;
@property(readonly, nonatomic) unsigned long long parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(readonly, nonatomic) NSDate *processStartTime; // @synthesize processStartTime=_processStartTime;
@property(readonly, nonatomic) NSString *processPath; // @synthesize processPath=_processPath;
@property(readonly, nonatomic) unsigned long long processID; // @synthesize processID=_processID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (void)dealloc;
- (id)initWithProcessName:(id)arg1 processID:(unsigned long long)arg2 processPath:(id)arg3 processStartTime:(id)arg4 parentProcessName:(id)arg5 parentProcessID:(unsigned long long)arg6 native:(BOOL)arg7;

@end

@interface MSPLCrashReportTextFormatter : NSObject <MSPLCrashReportFormatter>
{
    int _textFormat;
    unsigned long long _stringEncoding;
}

+ (id)stringValueForCrashReport:(id)arg1 withTextFormat:(int)arg2;
+ (id)formatStackFrame:(id)arg1 frameIndex:(unsigned long long)arg2 report:(id)arg3 lp64:(BOOL)arg4;
- (id)formatReport:(id)arg1 error:(id *)arg2;
- (id)initWithTextFormat:(int)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface MSPLCrashReportProcessorInfo : NSObject
{
    int _typeEncoding;
    unsigned long long _type;
    unsigned long long _subtype;
}

@property(readonly, nonatomic) unsigned long long subtype; // @synthesize subtype=_subtype;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int typeEncoding; // @synthesize typeEncoding=_typeEncoding;
- (id)initWithTypeEncoding:(int)arg1 type:(unsigned long long)arg2 subtype:(unsigned long long)arg3;

@end

@interface MSPLCrashReportMachineInfo : NSObject
{
    NSString *_modelName;
    MSPLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _processorCount;
    unsigned long long _logicalProcessorCount;
}

@property(readonly, nonatomic) unsigned long long logicalProcessorCount; // @synthesize logicalProcessorCount=_logicalProcessorCount;
@property(readonly, nonatomic) unsigned long long processorCount; // @synthesize processorCount=_processorCount;
@property(readonly, nonatomic) MSPLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
- (void)dealloc;
- (id)initWithModelName:(id)arg1 processorInfo:(id)arg2 processorCount:(unsigned long long)arg3 logicalProcessorCount:(unsigned long long)arg4;

@end

@interface MSPLCrashReportStackFrameInfo : NSObject
{
    unsigned long long _instructionPointer;
    MSPLCrashReportSymbolInfo *_symbolInfo;
}

@property(readonly, nonatomic) MSPLCrashReportSymbolInfo *symbolInfo; // @synthesize symbolInfo=_symbolInfo;
@property(readonly, nonatomic) unsigned long long instructionPointer; // @synthesize instructionPointer=_instructionPointer;
- (void)dealloc;
- (id)initWithInstructionPointer:(unsigned long long)arg1 symbolInfo:(id)arg2;

@end

@interface MSPLCrashReportRegisterInfo : NSObject
{
    NSString *_registerName;
    unsigned long long _registerValue;
}

@property(readonly, nonatomic) unsigned long long registerValue; // @synthesize registerValue=_registerValue;
@property(readonly, nonatomic) NSString *registerName; // @synthesize registerName=_registerName;
- (void)dealloc;
- (id)initWithRegisterName:(id)arg1 registerValue:(unsigned long long)arg2;

@end

@interface MSPLCrashReportSymbolInfo : NSObject
{
    NSString *_symbolName;
    unsigned long long _startAddress;
    unsigned long long _endAddress;
}

@property(readonly, nonatomic) unsigned long long endAddress; // @synthesize endAddress=_endAddress;
@property(readonly, nonatomic) unsigned long long startAddress; // @synthesize startAddress=_startAddress;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dealloc;
- (id)initWithSymbolName:(id)arg1 startAddress:(unsigned long long)arg2 endAddress:(unsigned long long)arg3;

@end

@interface MSPLCrashMachExceptionServer : NSObject
{
    struct plcrash_exception_server_context *_serverContext;
}

- (void)dealloc;
- (id)exceptionPortWithMask:(unsigned int)arg1 error:(id *)arg2;
- (unsigned int)copySendRightForServerAndReturningError:(id *)arg1;
@property(readonly, nonatomic) unsigned int serverThread;
- (id)initWithCallBack:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 error:(id *)arg3;

@end

@interface MSPLCrashHostInfo : NSObject
{
    struct PLCrashHostInfoVersion _darwinVersion;
}

+ (id)currentHostInfo;
@property(readonly, nonatomic) struct PLCrashHostInfoVersion darwinVersion; // @synthesize darwinVersion=_darwinVersion;
- (id)init;

@end

@interface MSPLCrashMachExceptionPort : NSObject
{
    unsigned int _mask;
    unsigned int _port;
    int _behavior;
    int _flavor;
}

+ (id)exceptionPortsForThread:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
+ (id)exceptionPortsForTask:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) int flavor; // @synthesize flavor=_flavor;
@property(readonly, nonatomic) int behavior; // @synthesize behavior=_behavior;
@property(readonly, nonatomic) unsigned int mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) unsigned int server_port; // @synthesize server_port=_port;
- (BOOL)registerForThread:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (BOOL)registerForTask:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initWithServerPort:(unsigned int)arg1 mask:(unsigned int)arg2 behavior:(int)arg3 flavor:(int)arg4;

@end

@interface MSPLCrashMachExceptionPortSet : NSObject <NSFastEnumeration>
{
    NSSet *_state_set;
    struct plcrash_mach_exception_port_set _asyncSafeRepresentation;
}

@property(readonly, nonatomic) NSSet *set; // @synthesize set=_state_set;
@property(readonly, nonatomic) struct plcrash_mach_exception_port_set asyncSafeRepresentation; // @synthesize asyncSafeRepresentation=_asyncSafeRepresentation;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithAsyncSafeRepresentation:(struct plcrash_mach_exception_port_set)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface MSPLCrashReporterConfig : NSObject
{
    unsigned long long _signalHandlerType;
    unsigned long long _symbolicationStrategy;
    BOOL _shouldRegisterUncaughtExceptionHandler;
}

+ (id)defaultConfiguration;
@property(readonly, nonatomic) BOOL shouldRegisterUncaughtExceptionHandler; // @synthesize shouldRegisterUncaughtExceptionHandler=_shouldRegisterUncaughtExceptionHandler;
@property(readonly, nonatomic) unsigned long long symbolicationStrategy; // @synthesize symbolicationStrategy=_symbolicationStrategy;
@property(readonly, nonatomic) unsigned long long signalHandlerType; // @synthesize signalHandlerType=_signalHandlerType;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2 shouldRegisterUncaughtExceptionHandler:(BOOL)arg3;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2;
- (id)init;

@end

@interface MSPLCrashUncaughtExceptionHandler : NSObject
{
}

@end

@interface MSPLCrashProcessInfo : NSObject
{
    int _processID;
    NSString *_processName;
    int _parentProcessID;
    struct timeval _startTime;
    BOOL _traced;
}

+ (id)currentProcessInfo;
@property(readonly, nonatomic) struct timeval startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic, getter=isTraced) BOOL traced; // @synthesize traced=_traced;
@property(readonly, nonatomic) int parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(readonly, nonatomic) int processID; // @synthesize processID=_processID;
- (void)dealloc;
- (id)initWithProcessID:(int)arg1;

@end

@interface MSPLCrashReportMachExceptionInfo : NSObject
{
    unsigned long long _type;
    NSArray *_codes;
}

@property(readonly, nonatomic) NSArray *codes; // @synthesize codes=_codes;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 codes:(id)arg2;

@end

@interface NSDate (DateTools)
+ (id)implicitCalendar;
+ (void)setDefaultCalendarIdentifier:(id)arg1;
+ (id)defaultCalendarIdentifier;
+ (BOOL)isLeapYear:(long long)arg1;
+ (id)dateWithString:(id)arg1 formatString:(id)arg2 timeZone:(id)arg3;
+ (id)dateWithString:(id)arg1 formatString:(id)arg2;
+ (id)dateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6;
+ (id)dateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
+ (BOOL)isSameDay:(id)arg1 asDate:(id)arg2;
+ (id)weekTimeAgoSinceDate:(id)arg1;
+ (id)shortTimeAgoSinceDate:(id)arg1;
+ (id)timeAgoSinceDate:(id)arg1;
+ (void)load;
- (id)formattedDateWithFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3;
- (id)formattedDateWithFormat:(id)arg1 locale:(id)arg2;
- (id)formattedDateWithFormat:(id)arg1 timeZone:(id)arg2;
- (id)formattedDateWithFormat:(id)arg1;
- (id)formattedDateWithStyle:(unsigned long long)arg1 timeZone:(id)arg2 locale:(id)arg3;
- (id)formattedDateWithStyle:(unsigned long long)arg1 locale:(id)arg2;
- (id)formattedDateWithStyle:(unsigned long long)arg1 timeZone:(id)arg2;
- (id)formattedDateWithStyle:(unsigned long long)arg1;
- (BOOL)isLaterThanOrEqualTo:(id)arg1;
- (BOOL)isEarlierThanOrEqualTo:(id)arg1;
- (BOOL)isLaterThan:(id)arg1;
- (BOOL)isEarlierThan:(id)arg1;
- (double)secondsLaterThan:(id)arg1;
- (double)minutesLaterThan:(id)arg1;
- (double)hoursLaterThan:(id)arg1;
- (long long)daysLaterThan:(id)arg1;
- (long long)weeksLaterThan:(id)arg1;
- (long long)monthsLaterThan:(id)arg1;
- (long long)yearsLaterThan:(id)arg1;
- (double)secondsEarlierThan:(id)arg1;
- (double)minutesEarlierThan:(id)arg1;
- (double)hoursEarlierThan:(id)arg1;
- (long long)daysEarlierThan:(id)arg1;
- (long long)weeksEarlierThan:(id)arg1;
- (long long)monthsEarlierThan:(id)arg1;
- (long long)yearsEarlierThan:(id)arg1;
- (double)secondsAgo;
- (double)minutesAgo;
- (double)hoursAgo;
- (long long)daysAgo;
- (long long)weeksAgo;
- (long long)monthsAgo;
- (long long)yearsAgo;
- (double)secondsUntil;
- (double)minutesUntil;
- (double)hoursUntil;
- (long long)daysUntil;
- (long long)weeksUntil;
- (long long)monthsUntil;
- (long long)yearsUntil;
- (long long)daysFrom:(id)arg1 calendar:(id)arg2;
- (long long)weeksFrom:(id)arg1 calendar:(id)arg2;
- (long long)monthsFrom:(id)arg1 calendar:(id)arg2;
- (long long)yearsFrom:(id)arg1 calendar:(id)arg2;
- (double)secondsFrom:(id)arg1;
- (double)minutesFrom:(id)arg1;
- (double)hoursFrom:(id)arg1;
- (long long)daysFrom:(id)arg1;
- (long long)weeksFrom:(id)arg1;
- (long long)monthsFrom:(id)arg1;
- (long long)yearsFrom:(id)arg1;
- (id)dateBySubtractingSeconds:(long long)arg1;
- (id)dateBySubtractingMinutes:(long long)arg1;
- (id)dateBySubtractingHours:(long long)arg1;
- (id)dateBySubtractingDays:(long long)arg1;
- (id)dateBySubtractingWeeks:(long long)arg1;
- (id)dateBySubtractingMonths:(long long)arg1;
- (id)dateBySubtractingYears:(long long)arg1;
- (id)dateByAddingSeconds:(long long)arg1;
- (id)dateByAddingMinutes:(long long)arg1;
- (id)dateByAddingHours:(long long)arg1;
- (id)dateByAddingDays:(long long)arg1;
- (id)dateByAddingWeeks:(long long)arg1;
- (id)dateByAddingMonths:(long long)arg1;
- (id)dateByAddingYears:(long long)arg1;
- (long long)componentForDate:(id)arg1 type:(unsigned long long)arg2 calendar:(id)arg3;
- (long long)dayOfYearWithCalendar:(id)arg1;
- (long long)yearForWeekOfYearWithCalendar:(id)arg1;
- (long long)weekOfYearWithCalendar:(id)arg1;
- (long long)weekOfMonthWithCalendar:(id)arg1;
- (long long)quarterWithCalendar:(id)arg1;
- (long long)weekdayOrdinalWithCalendar:(id)arg1;
- (long long)weekdayWithCalendar:(id)arg1;
- (long long)secondWithCalendar:(id)arg1;
- (long long)minuteWithCalendar:(id)arg1;
- (long long)hourWithCalendar:(id)arg1;
- (long long)dayWithCalendar:(id)arg1;
- (long long)monthWithCalendar:(id)arg1;
- (long long)yearWithCalendar:(id)arg1;
- (long long)eraWithCalendar:(id)arg1;
- (BOOL)isSameDay:(id)arg1;
- (BOOL)isWeekend;
- (BOOL)isYesterday;
- (BOOL)isTomorrow;
- (BOOL)isToday;
- (BOOL)isInLeapYear;
- (long long)daysInYear;
- (long long)dayOfYear;
- (long long)daysInMonth;
- (long long)yearForWeekOfYear;
- (long long)weekOfYear;
- (long long)weekOfMonth;
- (long long)quarter;
- (long long)weekdayOrdinal;
- (long long)weekday;
- (long long)second;
- (long long)minute;
- (long long)hour;
- (long long)day;
- (long long)month;
- (long long)year;
- (long long)era;
- (id)getLocaleFormatUnderscoresWithValue:(double)arg1;
- (id)logicLocalizedStringFromFormat:(id)arg1 withValue:(long long)arg2;
- (id)localizedStringFor:(unsigned long long)arg1 valueType:(unsigned long long)arg2 value:(long long)arg3;
- (id)timeAgoSinceDate:(id)arg1 format:(unsigned long long)arg2;
- (id)weekTimeAgoSinceDate:(id)arg1;
- (id)shortTimeAgoSinceDate:(id)arg1;
- (id)timeAgoSinceDate:(id)arg1 numericDates:(BOOL)arg2 numericTimes:(BOOL)arg3;
- (id)timeAgoSinceDate:(id)arg1 numericDates:(BOOL)arg2;
- (id)timeAgoSinceDate:(id)arg1;
- (id)weekTimeAgoSinceNow;
- (id)shortTimeAgoSinceNow;
- (id)timeAgoSinceNow;
@end

@interface NSObject (JRSwizzle)
+ (BOOL)jr_swizzleClassMethod:(SEL)arg1 withClassMethod:(SEL)arg2 error:(id *)arg3;
+ (BOOL)jr_swizzleMethod:(SEL)arg1 withMethod:(SEL)arg2 error:(id *)arg3;
+ (id)prettyPrintJson:(id)arg1;
+ (id)targetKeyFromTargetToken:(id)arg1;
+ (id)iKeyFromTargetToken:(id)arg1;
+ (id)transmissionTargetTokenFrom:(id)arg1;
+ (id)appSecretFrom:(id)arg1;
+ (id)sha256:(id)arg1;
+ (id)validateProperties:(id)arg1 forLogName:(id)arg2 type:(id)arg3;
- (void)sfCallBlock:(CDUnknownBlockType)arg1;
- (void)sfPerformBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2;
- (id)GRMustacheKeyAccessValueForUndefinedKey_NSManagedObject:(id)arg1;
- (id)GRMustacheKeyAccessValueForUndefinedKey_NSObject:(id)arg1;
- (void)dispatchSyncOnMainQueue:(CDUnknownBlockType)arg1;
- (void)resetAllTouchBars;
- (void)resetLocalTouchBarIfExists;
- (id)obfuscateString:(id)arg1 searchingForPattern:(id)arg2 toReplaceWithTemplate:(id)arg3;
@end

@interface NSColor (Colours)
+ (void)load;
+ (long long)compareValue:(double)arg1 andValue:(double)arg2 greaterThan:(unsigned int)arg3;
+ (float)addDegrees:(float)arg1 toDegree:(float)arg2;
+ (id)colorWithR:(double)arg1 G:(double)arg2 B:(double)arg3 A:(double)arg4;
+ (id)dustColor;
+ (id)siennaColor;
+ (id)mudColor;
+ (id)sandColor;
+ (id)eggshellColor;
+ (id)almondColor;
+ (id)cinnamonColor;
+ (id)coffeeColor;
+ (id)chocolateColor;
+ (id)burntSiennaColor;
+ (id)chiliPowderColor;
+ (id)mandarinColor;
+ (id)carrotColor;
+ (id)cantaloupeColor;
+ (id)pastelOrangeColor;
+ (id)burntOrangeColor;
+ (id)peachColor;
+ (id)beigeColor;
+ (id)wheatColor;
+ (id)lightCreamColor;
+ (id)creamColor;
+ (id)goldColor;
+ (id)buttermilkColor;
+ (id)mustardColor;
+ (id)bananaColor;
+ (id)yellowGreenColor;
+ (id)goldenrodColor;
+ (id)orchidColor;
+ (id)periwinkleColor;
+ (id)grapeColor;
+ (id)fuschiaColor;
+ (id)raspberryColor;
+ (id)lavenderColor;
+ (id)plumColor;
+ (id)violetColor;
+ (id)coolPurpleColor;
+ (id)palePurpleColor;
+ (id)pastelPurpleColor;
+ (id)eggplantColor;
+ (id)crimsonColor;
+ (id)paleRoseColor;
+ (id)pinkLipstickColor;
+ (id)tomatoColor;
+ (id)watermelonColor;
+ (id)maroonColor;
+ (id)coralColor;
+ (id)strawberryColor;
+ (id)indianRedColor;
+ (id)pinkColor;
+ (id)grapefruitColor;
+ (id)easterPinkColor;
+ (id)brickRedColor;
+ (id)salmonColor;
+ (id)cardTableColor;
+ (id)limeColor;
+ (id)honeydewColor;
+ (id)moneyGreenColor;
+ (id)oliveDrabColor;
+ (id)oliveColor;
+ (id)hollyGreenColor;
+ (id)chartreuseColor;
+ (id)cactusGreenColor;
+ (id)paleGreenColor;
+ (id)seafoamColor;
+ (id)pastelGreenColor;
+ (id)grassColor;
+ (id)emeraldColor;
+ (id)waveColor;
+ (id)icebergColor;
+ (id)fadedBlueColor;
+ (id)midnightBlueColor;
+ (id)babyBlueColor;
+ (id)cornflowerColor;
+ (id)blueberryColor;
+ (id)denimColor;
+ (id)indigoColor;
+ (id)skyBlueColor;
+ (id)turquoiseColor;
+ (id)pastelBlueColor;
+ (id)robinEggColor;
+ (id)steelBlueColor;
+ (id)tealColor;
+ (id)charcoalColor;
+ (id)coolGrayColor;
+ (id)warmGrayColor;
+ (id)black75PercentColor;
+ (id)black50PercentColor;
+ (id)black25PercentColor;
+ (id)linenColor;
+ (id)snowColor;
+ (id)ghostWhiteColor;
+ (id)seashellColor;
+ (id)ivoryColor;
+ (id)oldLaceColor;
+ (id)antiqueWhiteColor;
+ (id)dangerColor;
+ (id)warningColor;
+ (id)successColor;
+ (id)infoBlueColor;
+ (long long)compareColor:(id)arg1 andColor:(id)arg2 withComparison:(long long)arg3;
+ (id)sortColors:(id)arg1 withComparison:(long long)arg2;
+ (id)complementaryColorsFromHue:(float)arg1 saturation:(float)arg2 brightness:(float)arg3 alpha:(float)arg4;
+ (id)triadColorsFromHue:(float)arg1 saturation:(float)arg2 brightness:(float)arg3 alpha:(float)arg4;
+ (id)monochromaticColorsFromHue:(float)arg1 saturation:(float)arg2 brightness:(float)arg3 alpha:(float)arg4;
+ (id)analagousColorsFromHue:(float)arg1 saturation:(float)arg2 brightness:(float)arg3 alpha:(float)arg4;
+ (id)colorFromCMYKDictionary:(id)arg1;
+ (id)colorFromCMYKArray:(id)arg1;
+ (id)colorFromCIE_LCHDictionary:(id)arg1;
+ (id)colorFromCIE_LCHArray:(id)arg1;
+ (id)colorFromCIE_LabDictionary:(id)arg1;
+ (id)colorFromCIE_LabArray:(id)arg1;
+ (id)colorFromHSBADictionary:(id)arg1;
+ (id)colorFromHSBAArray:(id)arg1;
+ (id)colorFromRGBADictionary:(id)arg1;
+ (id)colorFromRGBAArray:(id)arg1;
+ (id)colorFromHexString:(id)arg1;
- (BOOL)colours_getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (BOOL)colours_getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (id)colorsForComparison:(long long)arg1 key:(id *)arg2 greater:(unsigned int *)arg3;
- (double)distanceFromColor:(id)arg1 type:(long long)arg2;
- (double)distanceFromColor:(id)arg1;
- (id)complementaryColor;
- (id)blackOrWhiteContrastingColor;
- (id)colorSchemeOfType:(long long)arg1;
- (id)modifyBrightnessByPercentage:(double)arg1;
- (id)lighten:(double)arg1;
- (id)darken:(double)arg1;
- (double)keyBlack;
- (double)yellow;
- (double)magenta;
- (double)cyan;
- (double)CIE_b;
- (double)CIE_a;
- (double)CIE_Lightness;
- (double)alpha;
- (double)brightness;
- (double)saturation;
- (double)hue;
- (double)blue;
- (double)green;
- (double)red;
- (id)colorComponents;
- (id)cmykDictionary;
- (id)cmykArray;
- (id)CIE_LCHDictionary;
- (id)CIE_LCHArray;
- (id)CIE_LabDictionary;
- (id)CIE_LabArray;
- (id)hsbaDictionary;
- (id)hsbaArray;
- (id)rgbaDictionary;
- (id)rgbaArray;
- (id)hexString;
@end

@interface NSString (SFRangeUtils)
+ (id)stringWithUUID;
- (BOOL)sfStringAfterRange:(struct _NSRange)arg1 isEqualToString:(id)arg2 outOfBounds:(char *)arg3;
- (BOOL)sfStringBeforeRange:(struct _NSRange)arg1 isEqualToString:(id)arg2 outOfBounds:(char *)arg3;
- (BOOL)sfCharAfterRange:(struct _NSRange)arg1 isMemberOfCharacterSet:(id)arg2 outOfBounds:(char *)arg3;
- (BOOL)sfCharBeforeRange:(struct _NSRange)arg1 isMemberOfCharacterSet:(id)arg2 outOfBounds:(char *)arg3;
- (BOOL)sfCharAfterRange:(struct _NSRange)arg1 isEqualToChar:(BOOL)arg2 outOfBounds:(char *)arg3;
- (BOOL)sfCharBeforeRange:(struct _NSRange)arg1 isEqualToChar:(BOOL)arg2 outOfBounds:(char *)arg3;
- (id)stringForSmartCopyInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (struct _NSRange)rangeForRemovingCharactersInRangeLeavingNoGaps:(struct _NSRange)arg1;
- (id)stringByRemovingOccurrencesOfStringLeavingNoGaps:(id)arg1;
- (id)escapeForXML;
- (id)stringByAppendingURLParams:(id)arg1;
- (id)parseURLParams;
- (id)correctFilenamesWithDictionary:(id)arg1;
- (id)gtm_stringByUnescapingFromHTML;
- (id)gtm_stringByEscapingForAsciiHTML;
- (id)gtm_stringByEscapingForHTML;
- (id)gtm_stringByEscapingHTMLUsingTable:(CDStruct_6a59ab51 *)arg1 ofSize:(unsigned long long)arg2 escapingUnicode:(BOOL)arg3;
- (id)sfCleanConcatenatedString;
@end

@interface NSImage (preload)
+ (void)asyncPreloadImageFromFileURL:(id)arg1 success:(CDUnknownBlockType)arg2;
+ (id)preloadedImageFromFileURL:(id)arg1;
+ (id)imageWithCGImage:(struct CGImage *)arg1;
- (struct CGSize)pixelSize;
- (struct CGImage *)CGImage;
- (id)fixOrientation;
@end

@interface NSAttributedString (paragraphs)
+ (id)attributedStringWithParagraphs:(id)arg1;
- (id)splitParagraphs;
- (id)stringByTrimmingCharactersInSet:(id)arg1;
- (struct _NSRange)fullRange;
@end

@interface NSBezierPath (IT_Geometry)
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (id)it_rotationTransformWithAngle:(float)arg1 aboutPoint:(struct CGPoint)arg2;
- (id)it_rotatedBezierPath:(float)arg1 aboutPoint:(struct CGPoint)arg2;
- (id)it_rotatedBezierPath:(float)arg1;
- (void)addLineToPoint:(struct CGPoint)arg1;
- (void)addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
@end

@interface NSScrollView (SFOverlayScrollbars)
- (void)setOverlayScrollerSeparatorColor:(id)arg1;
- (void)setOverlayScrollerBackgroundColor:(id)arg1;
- (void)setOverlayScrollbarForColor:(id)arg1;
@end

@interface NSScreen (SFClassBridge)
- (double)scale;
@end

@interface NSTextView (SFClassBridge)
- (void)replaceCharactersInrange:(struct _NSRange)arg1 withAttributedString:(id)arg2 selectRange:(struct _NSRange)arg3;
- (void)replaceCharactersInrange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)setNeedsDisplay;
@end

@interface NSValue (SFClassBridge)
+ (id)valueWithCGRect:(struct CGRect)arg1;
+ (id)valueWithCGSize:(struct CGSize)arg1;
- (struct CGRect)CGRectValue;
- (struct CGSize)CGSizeValue;
@end

@interface NSTextTab (SFClassBridge)
+ (id)leftTextTabAtLocation:(double)arg1;
@end

@interface NSFormatter (GRMustache) <GRMustacheFilter, GRMustacheRendering, GRMustacheTagDelegate>
- (id)mustacheTag:(id)arg1 willRenderObject:(id)arg2;
- (id)renderForMustacheTag:(id)arg1 context:(id)arg2 HTMLSafe:(char *)arg3 error:(id *)arg4;
- (id)transformedValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSColor (BlendWithColor)
+ (id)colorWithHexColorString:(id)arg1;
+ (id)colorFromRgbaString:(id)arg1;
+ (id)colorFromHexString:(id)arg1;
- (id)solidBlendWithColor:(id)arg1;
- (id)blendWithColor:(id)arg1 alpha:(double)arg2;
- (id)getHexStringForColor;
- (id)rgbaArray;
- (id)rgbaString;
- (id)hexString;
@end

@interface NSWorkspace (OpenWith)
- (id)openWithMenuItemsForURLS:(id)arg1;
- (id)menuItemForAppURL:(id)arg1;
- (id)defaultAppForURLs:(id)arg1;
- (id)applicationURLsForURLs:(id)arg1;
- (id)applicationNamesForURL:(id)arg1;
@end

@interface NSDictionary (XURLParameters)
- (id)windowID;
- (BOOL)xurlDownloadImages;
- (BOOL)xurlAddURL;
- (BOOL)xurlPinNote;
- (BOOL)xurlTimestamp;
- (BOOL)xurlExcludeTrashed;
- (id)xurlHeader;
- (BOOL)xurlWait;
- (BOOL)xurlEditNote;
- (BOOL)xurlOpenNote;
- (BOOL)xurlFloatOnTop;
- (BOOL)xurlNewWindow;
- (BOOL)xurlShowWindow;
@end

@interface NSPasteboard (URLTitle)
- (id)getStringFromDataIfNeeded:(id)arg1;
- (id)urlString;
- (void)setURLAlreadyParsed:(id)arg1;
- (BOOL)urlAlreadyParsedForString:(id)arg1;
- (BOOL)urlAlreadyParsed;
- (void)setTitle:(id)arg1 forURL:(id)arg2;
- (id)urlTitle;
- (BOOL)changeCountAlreadyParsed;
- (void)setChangeCount;
- (void)fixURLWithoutTitle;
@end

@interface NSPopover (MISSINGBackgroundView)
@property(retain, nonatomic) NSColor *backgroundColor;
@property(readonly, nonatomic) NSView *backgroundView;
@end

@interface NSValueTransformer (GRMustache) <GRMustacheFilter>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSLocale (Helpers)
- (BOOL)isChineseSimplified;
- (BOOL)isChinese;
- (BOOL)isKorean;
@end

